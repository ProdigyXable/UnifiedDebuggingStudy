0001|0.262613|PatchCategory.NoisyFix|0000000001|org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(J)Ljava/lang/String;
0002|0.500000|PatchCategory.NoneFix|0000000009|org.joda.time.DateTimeZone.getShortName(JLjava/util/Locale;)Ljava/lang/String;
0003|0.353553|PatchCategory.NoneFix|0000000002|org.joda.time.DateTimeZone.getName(JLjava/util/Locale;)Ljava/lang/String;
***0004|0.316228|PatchCategory.NoneFix|0000000014|org.joda.time.tz.DefaultNameProvider.getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;*** RankTop-5
0005|0.262613|PatchCategory.NoneFix|0000000005|org.joda.time.tz.CachedDateTimeZone.getNameKey(J)Ljava/lang/String;
0006|0.235702|PatchCategory.NoneFix|0000000002|org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(J)Ljava/lang/String;
0008|0.235702|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getNameKey(J)Ljava/lang/String;
0008|0.235702|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DefaultNameProvider.createCache()Ljava/util/HashMap;
0009|0.220863|PatchCategory.NoneFix|0000000008|org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String;
0011|0.213201|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()Ljava/lang/String;
0011|0.213201|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DefaultNameProvider.getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
0012|0.204124|PatchCategory.NoneFix|0000000001|org.joda.time.DateTimeUtils.getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;
0015|0.188982|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$OfYear.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
0015|0.188982|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;
0015|0.188982|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$Recurrence.readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
0016|0.182574|PatchCategory.NoneFix|0000000007|org.joda.time.tz.DefaultNameProvider.getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
0019|0.171499|PatchCategory.NoneFix|0000000001|org.joda.time.tz.ZoneInfoProvider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
0019|0.171499|PatchCategory.NoneFix|0000000001|org.joda.time.tz.ZoneInfoProvider.loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
0019|0.171499|PatchCategory.NoneFix|0000000001|org.joda.time.tz.ZoneInfoProvider.openResource(Ljava/lang/String;)Ljava/io/InputStream;
0020|0.166667|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$OfYear.<init>(CIIIZI)V
0022|0.158114|PatchCategory.NoneFix|0000000001|org.joda.time.tz.CachedDateTimeZone.<init>(Lorg/joda/time/DateTimeZone;)V
0022|0.158114|PatchCategory.NoneFix|0000000001|org.joda.time.tz.CachedDateTimeZone.forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;
0023|0.124515|PatchCategory.NoneFix|0000000001|org.joda.time.DateTimeZone.forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
0024|0.113228|PatchCategory.NoneFix|0000000001|org.joda.time.DateTimeZone.<init>(Ljava/lang/String;)V
0025|0.074125|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(JII)J
0027|0.073721|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(J)J
0027|0.073721|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(J)J
0029|0.073324|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(J)I
0029|0.073324|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(J)I
0030|0.072169|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$DSTZone.findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
0032|0.071429|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(Lorg/joda/time/Chronology;J)J
0032|0.071429|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$Recurrence.next(JII)J
0033|0.064349|PatchCategory.NoneFix|0000000001|org.joda.time.format.FormatUtils.appendPaddedInteger(Ljava/lang/StringBuffer;II)V
0034|0.060412|PatchCategory.NoneFix|0000000001|org.joda.time.tz.CachedDateTimeZone.createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;
0035|0.058521|PatchCategory.NoneFix|0000000001|org.joda.time.tz.CachedDateTimeZone.getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;
0036|0.057735|PatchCategory.NoneFix|0000000001|org.joda.time.tz.CachedDateTimeZone$Info.getOffset(J)I
0037|0.039637|PatchCategory.NoneFix|0000000001|org.joda.time.tz.CachedDateTimeZone.getOffset(J)I
0038|0.034259|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicGJChronology.setYear(JI)J
0039|0.030401|PatchCategory.NoneFix|0000000001|org.joda.time.DateTimeZone.getID()Ljava/lang/String;
0041|0.030206|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonth(Lorg/joda/time/Chronology;J)J
0041|0.030206|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(Lorg/joda/time/Chronology;J)J
0042|0.030015|PatchCategory.NoneFix|0000000001|org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis()I
0043|0.029185|PatchCategory.NoneFix|0000000001|org.joda.time.field.BaseDateTimeField.add(JI)J
0044|0.029111|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicYearDateTimeField.add(JI)J
0045|0.028513|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(JI)J
0046|0.028061|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.GJDayOfWeekDateTimeField.get(J)I
0047|0.027629|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicChronology.getDayOfWeek(J)I
0048|0.026064|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.AssembledChronology.dayOfWeek()Lorg/joda/time/DateTimeField;
0049|0.025516|PatchCategory.NoneFix|0000000001|org.joda.time.field.PreciseDurationField.add(JI)J
0050|0.024969|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(JI)I
0051|0.024784|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValueForSet(JI)I
0053|0.024529|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicChronology.getDayOfMonth(JI)I
0053|0.024529|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(JI)J
0055|0.024268|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicYearDateTimeField.set(JI)J
0055|0.024268|PatchCategory.NoneFix|0000000001|org.joda.time.field.PreciseDurationDateTimeField.set(JI)J
0056|0.024254|PatchCategory.NoneFix|0000000001|org.joda.time.field.PreciseDurationDateTimeField.getDurationField()Lorg/joda/time/DurationField;
0057|0.024098|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.AssembledChronology.millisOfDay()Lorg/joda/time/DateTimeField;
0059|0.023063|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicChronology.getDayOfYear(JI)I
0059|0.023063|PatchCategory.NoneFix|0000000001|org.joda.time.field.PreciseDateTimeField.set(JI)J
0060|0.021167|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(II)I
0061|0.020253|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicChronology.getDayOfMonth(J)I
0062|0.020203|PatchCategory.NoneFix|0000000001|org.joda.time.field.PreciseDateTimeField.getMaximumValue()I
0063|0.020146|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(II)J
0064|0.019811|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(J)I
0065|0.019787|PatchCategory.NoneFix|0000000001|org.joda.time.field.PreciseDateTimeField.get(J)I
0066|0.019772|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicChronology.getDayOfMonth(JII)I
0067|0.019687|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicGJChronology.getMonthOfYear(JI)I
0068|0.019649|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicYearDateTimeField.get(J)I
0069|0.019597|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(III)J
0071|0.019353|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo()J
0071|0.019353|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo()J
0072|0.018891|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicChronology.getYear(J)I
0073|0.018818|PatchCategory.NoneFix|0000000001|org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis()J
0074|0.018405|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.GregorianChronology.isLeapYear(I)Z
0076|0.018257|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicChronology.getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;
0076|0.018257|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.BasicChronology.getYearMillis(I)J
0077|0.018042|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.AssembledChronology.year()Lorg/joda/time/DateTimeField;
0078|0.017829|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.AssembledChronology.dayOfMonth()Lorg/joda/time/DateTimeField;
0079|0.017694|PatchCategory.NoneFix|0000000001|org.joda.time.chrono.AssembledChronology.monthOfYear()Lorg/joda/time/DateTimeField;
0080|0.188982|PatchCategory.NegFix|0000000015|org.joda.time.tz.DateTimeZoneBuilder$DSTZone.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;
0081|0.176777|PatchCategory.NegFix|0000000015|org.joda.time.tz.DateTimeZoneBuilder.readMillis(Ljava/io/DataInput;)J
0083|0.171499|PatchCategory.NegFix|0000000015|org.joda.time.tz.DateTimeZoneBuilder$DSTZone.<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V
0083|0.171499|PatchCategory.NegFix|0000000015|org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
0084|0.166667|PatchCategory.NegFix|0000000015|org.joda.time.tz.DateTimeZoneBuilder$Recurrence.<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V
0085|0.162221|PatchCategory.NegFix|0000000015|org.joda.time.tz.DateTimeZoneBuilder.readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
0086|0.154303|PatchCategory.NegFix|0000000015|org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V
0087|0.058521|PatchCategory.NegFix|0000000015|org.joda.time.tz.CachedDateTimeZone$Info.<init>(Lorg/joda/time/DateTimeZone;J)V
0088|0.027298|PatchCategory.NegFix|0000000015|org.joda.time.field.MillisDurationField.add(JI)J
0089|0.027277|PatchCategory.NegFix|0000000015|org.joda.time.field.FieldUtils.safeAdd(II)I
0090|0.026234|PatchCategory.NegFix|0000000015|org.joda.time.DateTimeZone.setDefault(Lorg/joda/time/DateTimeZone;)V
0091|0.025023|PatchCategory.NegFix|0000000015|org.joda.time.DateTimeZone.getDefault()Lorg/joda/time/DateTimeZone;
0092|0.023505|PatchCategory.NegFix|0000000015|org.joda.time.chrono.BasicChronology.getMillisOfDay(J)I
0093|0.023300|PatchCategory.NegFix|0000000015|org.joda.time.field.FieldUtils.safeAdd(JJ)J
0094|0.022622|PatchCategory.NegFix|0000000015|org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue()I
0095|0.021948|PatchCategory.NegFix|0000000015|org.joda.time.chrono.ISOChronology.getInstanceUTC()Lorg/joda/time/chrono/ISOChronology;
0096|0.020228|PatchCategory.NegFix|0000000015|org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue()I
0097|0.020024|PatchCategory.NegFix|0000000015|org.joda.time.field.FieldUtils.verifyValueBounds(Lorg/joda/time/DateTimeField;III)V
0098|0.019346|PatchCategory.NegFix|0000000015|org.joda.time.chrono.GregorianChronology.getMinYear()I
0099|0.019338|PatchCategory.NegFix|0000000015|org.joda.time.chrono.GregorianChronology.getMaxYear()I
