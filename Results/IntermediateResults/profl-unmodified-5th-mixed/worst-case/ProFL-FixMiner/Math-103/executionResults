Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Math-103
18:14:29.527 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-103 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Math/103.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Math/103.txt
18:14:30.803 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
18:14:30.812 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-103/generalSusInfo.profl
18:14:30.813 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Fixing Beginning======
18:14:30.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math.special.Gamma ===180
18:14:31.589 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
throw new MaxIterationsExceededException(maxIterations);
if (maxIterations == 0) {
    new IllegalArgumentException("");
}

if (maxIterations != 0) {

    
}

if (maxIterations > 0) {

    
}

18:14:31.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:14:32.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
18:14:32.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
18:14:42.619 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.distribution.NormalDistributionTest::testExtremeValues]
18:14:42.619 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.distribution.NormalDistributionTest::testExtremeValues]
18:14:42.619 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.distribution.NormalDistributionTest::testExtremeValues
18:14:42.619 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
18:14:42.620 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
18:14:42.623 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-103/aggregatedSusInfo.profl
18:14:42.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math.special.Gamma:regularizedGammaP(DDDI)D in org.apache.commons.math.special.Gamma:180
18:14:42.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-103
18:14:42.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:14:43.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-103 ---Fixer: fix fail because of failed compiling! 
18:14:43.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:14:44.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-103 ---Fixer: fix fail because of failed compiling! 

            } else {
                ret = Math.exp(-x + (a * Math.log(x)) - logGamma(a)) * sum;
	throw new MaxIterationsExceededException(maxIterations);

MOVE-BUGGY-STATEMENT
18:14:44.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:14:45.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-103 ---Fixer: fix fail because of failed compiling! 

18:14:45.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:14:45.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-103 ---Fixer: fix fail because of failed compiling! 
18:14:45.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math.MathException ===272
18:14:45.867 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
/**
     * Prints the stack trace of this exception to the specified writer.
     *
     * @param out  the <code>PrintWriter</code> to use for output
     */
    public void printStackTrace(PrintWriter out) {
        synchronized (out) {
            super.printStackTrace(out);
            if (rootCause != null && JDK_SUPPORTS_NESTED == false) {
                out.print("Caused by: ");
                rootCause.printStackTrace(out);
            }
        }
    }
