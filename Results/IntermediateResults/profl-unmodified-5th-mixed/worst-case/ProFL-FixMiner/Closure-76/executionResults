Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-76
02:38:20.187 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 Failed Tests: 4
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/76.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/76.txt
02:40:31.351 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
02:40:31.411 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-76/generalSusInfo.profl
02:40:31.510 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-76/aggregatedSusInfo.profl
02:40:31.512 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Fixing Beginning======
02:40:31.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1411
02:40:32.596 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return res;
if (res != null) {


}

02:40:32.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:33.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (res == null) {
    return null;
}

if (res == null) {
    throw new IllegalArgumentException("Empty variable: " + res);
}

02:40:33.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:34.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:34.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:35.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
detachChildren();
	return res;
return res;
	detachChildren();
setQuotedString();
	return res;
return res;
	setQuotedString();
02:40:35.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:36.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:36.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:37.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:37.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:38.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:38.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:39.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:40:39.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:40.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:40.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1369
02:40:40.377 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
if (node2 != null) {


}

02:40:40.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:41.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (node2 == null) {
    return null;
}

if (node2 == null) {
    throw new IllegalArgumentException("Empty variable: " + node2);
}

02:40:41.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:42.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:42.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:43.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:40:43.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:44.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:44.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===320
02:40:44.165 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case TRUE:
if (TRUE == 0) {
    new IllegalArgumentException("");
}

if (TRUE != 0) {

    
}

if (TRUE > 0) {

    
}

02:40:44.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:44.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:44.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:45.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:45.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:45.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:40:45.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:46.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:46.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===319
02:40:46.091 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case FALSE:
if (FALSE == 0) {
    new IllegalArgumentException("");
}

if (FALSE != 0) {

    
}

if (FALSE > 0) {

    
}

02:40:46.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:46.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:46.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:47.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:47.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:47.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:40:47.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:47.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:47.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===279
02:40:48.007 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case RETURN:
if (RETURN == 0) {
    new IllegalArgumentException("");
}

if (RETURN != 0) {

    
}

if (RETURN > 0) {

    
}

02:40:48.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:48.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:48.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:49.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:49.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:49.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:40:49.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:50.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:50.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===362
02:40:50.437 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case ASSIGN:
if (ASSIGN == 0) {
    new IllegalArgumentException("");
}

if (ASSIGN != 0) {

    
}

if (ASSIGN > 0) {

    
}

02:40:50.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:51.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:51.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:51.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:51.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:51.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:40:51.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:52.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:52.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===217
02:40:52.592 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case PARENTHESIZED_PROP:
if (PARENTHESIZED_PROP == 0) {
    new IllegalArgumentException("");
}

if (PARENTHESIZED_PROP != 0) {

    
}

if (PARENTHESIZED_PROP > 0) {

    
}

02:40:52.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:53.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:53.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:54.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:54.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:54.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
setType(PARENTHESIZED_PROP);
setType(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setType(PARENTHESIZED_PROP);
removeProp(PARENTHESIZED_PROP);
removeProp(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	removeProp(PARENTHESIZED_PROP);
setLineno(PARENTHESIZED_PROP);
setLineno(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setLineno(PARENTHESIZED_PROP);
setCharno(PARENTHESIZED_PROP);
setCharno(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setCharno(PARENTHESIZED_PROP);
detachChildren();
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	detachChildren();
setSideEffectFlags(PARENTHESIZED_PROP);
setSideEffectFlags(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setSideEffectFlags(PARENTHESIZED_PROP);
setQuotedString();
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setQuotedString();
02:40:54.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:55.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:55.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:56.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:56.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:57.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:57.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:58.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:58.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:59.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:40:59.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:00.568 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:00.568 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:01.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:01.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:03.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:03.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:04.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:04.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:05.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:05.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:06.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:06.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:07.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:07.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:08.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:08.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:09.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:09.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:10.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:10.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:11.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:11.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:12.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:12.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:13.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:13.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:14.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:41:14.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:15.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:15.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===352
02:41:15.685 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return VariableLiveness.KILL;

02:41:15.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:16.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:16.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===316
02:41:16.536 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
02:41:16.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:17.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:41:17.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:18.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:18.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1398
02:41:18.248 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return new NodeMismatch(this, node2);
if (node2 != null) {


}

02:41:18.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:19.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (node2 == null) {
    return null;
}

if (node2 == null) {
    throw new IllegalArgumentException("Empty variable: " + node2);
}

02:41:19.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:20.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:20.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:20.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
addChildToFront(node2);
addChildToFront(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildToFront(node2);
addChildToBack(node2);
addChildToBack(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildToBack(node2);
addChildrenToFront(node2);
addChildrenToFront(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildrenToFront(node2);
addChildrenToBack(node2);
addChildrenToBack(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildrenToBack(node2);
removeChild(node2);
removeChild(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	removeChild(node2);
detachChildren();
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	detachChildren();
setQuotedString();
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	setQuotedString();
02:41:20.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:21.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:21.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:22.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:22.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:23.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:23.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:24.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:24.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:25.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:25.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:26.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:26.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:27.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:27.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:28.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:28.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:29.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:29.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:30.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:30.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:32.004 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:32.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:32.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:32.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:33.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:33.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:34.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:34.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:35.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:35.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:36.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:36.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:37.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:37.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:38.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:38.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:39.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:41:39.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:40.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:41:40.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===315
02:41:40.417 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (state == VariableLiveness.KILL) {
        return false;
            }
if (state != VariableLiveness.KILL) {
        return false;
            }
02:41:40.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:41:41.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (state != null) {


}

02:41:41.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:02.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (state == null) {
    return true;
}

if (state == null) {
    return false;
}

if (state == null) {
    throw new IllegalArgumentException("Empty variable: " + state);
}

02:43:02.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:03.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:03.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:03.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:03.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:04.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (state == VariableLiveness.KILL) {
        return false;
            }
	return true;
      } else 
null
02:43:04.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:05.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:43:05.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:11.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:11.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.LiveVariablesAnalysis ===235
02:43:11.109 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return;

02:43:11.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:29.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:29.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.LiveVariablesAnalysis ===234
02:43:29.206 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
computeGenKill(n.getLastChild(), gen, kill, true);
computeGenKill(true, n.getLastChild(), gen, kill, true);
computeGenKill(false, n.getLastChild(), gen, kill, true);
computeGenKill(n.getLastChild(), true, gen, kill, true);
computeGenKill(n.getLastChild(), false, gen, kill, true);
computeGenKill(n.getLastChild(), gen, true, kill, true);
computeGenKill(n.getLastChild(), gen, false, kill, true);
computeGenKill(n.getLastChild(), gen, kill, false);
computeGenKill(n.getLastChild(), gen, kill);
computeGenKill(n.getLastChild(), gen, kill, true, true);
computeGenKill(n.getLastChild(), gen, kill, false, true);
computeGenKill(n.getLastChild(), gen, kill, true, true);
computeGenKill(n.getLastChild(), gen, kill, true, false);
02:43:29.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:35.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:35.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:36.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:36.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:36.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:36.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:37.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:37.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:38.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:38.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:39.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:39.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:40.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:40.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:41.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:41.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:42.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:42.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:42.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:42.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:43.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:43.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:44.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(c, n.getLastChild(), gen, kill, true);
computeGenKill(n, n.getLastChild(), gen, kill, true);
computeGenKill(conditional, n.getLastChild(), gen, kill, true);
computeGenKill(ARGUMENT_ARRAY_ALIAS, n.getLastChild(), gen, kill, true);
computeGenKill(this.jsScope, n.getLastChild(), gen, kill, true);
computeGenKill(this.escaped, n.getLastChild(), gen, kill, true);
computeGenKill(n.getLastChild(), c, kill, true);
computeGenKill(n.getLastChild(), n, kill, true);
computeGenKill(n.getLastChild(), conditional, kill, true);
computeGenKill(n.getLastChild(), ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getLastChild(), this.jsScope, kill, true);
computeGenKill(n.getLastChild(), this.escaped, kill, true);
computeGenKill(n.getLastChild(),  kill, true);
computeGenKill(n.getLastChild(), c, gen, kill, true);
computeGenKill(n.getLastChild(), n, gen, kill, true);
computeGenKill(n.getLastChild(), conditional, gen, kill, true);
computeGenKill(n.getLastChild(), ARGUMENT_ARRAY_ALIAS, gen, kill, true);
computeGenKill(n.getLastChild(), this.jsScope, gen, kill, true);
computeGenKill(n.getLastChild(), this.escaped, gen, kill, true);
computeGenKill(n.getLastChild(), gen, c, true);
computeGenKill(n.getLastChild(), gen, n, true);
computeGenKill(n.getLastChild(), gen, conditional, true);
computeGenKill(n.getLastChild(), gen, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getLastChild(), gen, this.jsScope, true);
computeGenKill(n.getLastChild(), gen, this.escaped, true);
computeGenKill(n.getLastChild(), gen,  true);
computeGenKill(n.getLastChild(), gen, c, kill, true);
computeGenKill(n.getLastChild(), gen, n, kill, true);
computeGenKill(n.getLastChild(), gen, conditional, kill, true);
computeGenKill(n.getLastChild(), gen, ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getLastChild(), gen, this.jsScope, kill, true);
computeGenKill(n.getLastChild(), gen, this.escaped, kill, true);
computeGenKill(n.getLastChild(), gen, kill, c, true);
computeGenKill(n.getLastChild(), gen, kill, n, true);
computeGenKill(n.getLastChild(), gen, kill, conditional, true);
computeGenKill(n.getLastChild(), gen, kill, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getLastChild(), gen, kill, this.jsScope, true);
computeGenKill(n.getLastChild(), gen, kill, this.escaped, true);
computeGenKill(n.getLastChild(), gen, kill, true, c);
computeGenKill(n.getLastChild(), gen, kill, true, n);
computeGenKill(n.getLastChild(), gen, kill, true, conditional);
computeGenKill(n.getLastChild(), gen, kill, true, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getLastChild(), gen, kill, true, this.jsScope);
computeGenKill(n.getLastChild(), gen, kill, true, this.escaped);
02:43:44.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:45.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:45.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:46.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:46.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:47.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:47.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:48.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:48.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:49.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:49.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:49.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:49.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:50.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:50.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:51.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:51.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:52.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:52.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:52.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:52.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:53.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:53.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:59.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:43:59.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:00.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:00.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:01.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:01.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:01.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:01.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:02.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:02.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:03.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:03.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:04.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:04.197 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:04.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:04.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:05.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:05.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:06.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:06.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:07.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:07.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:08.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:08.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:08.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:08.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:09.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:09.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:10.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:10.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:11.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:11.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:13.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:13.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:13.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:13.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:14.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:14.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:15.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:15.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:16.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:16.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:17.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:17.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:17.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:17.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:18.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:18.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:20.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:20.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:21.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:21.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:21.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:21.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:22.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:22.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:23.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:23.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:24.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:24.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:25.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:25.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:25.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:25.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:26.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (gen != null) {


}

if (kill != null) {


}

02:44:26.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:27.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:27.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:28.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:28.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:28.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (gen == null) {
    return;
}

if (gen == null) {
    throw new IllegalArgumentException("Empty variable: " + gen);
}

if (kill == null) {
    return;
}

if (kill == null) {
    throw new IllegalArgumentException("Empty variable: " + kill);
}

02:44:28.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:29.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:29.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:30.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:30.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:31.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:31.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:32.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:32.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:32.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:32.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:33.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(n.getLastChild(), gen, kill, true);
	computeGenKill(n.getFirstChild(), gen, kill, conditional);
        // Assume both sides are conditional.
        computeGenKill(n.getFirstChild().getNext(), gen, kill, true);
        
null
computeGenKill(n.getLastChild(), gen, kill, true);
	computeGenKill(n.getFirstChild().getNext(), gen, kill, true);
        
null

        return;
	computeGenKill(n.getLastChild(), gen, kill, true);

MOVE-BUGGY-STATEMENT
02:44:33.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:34.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:34.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:35.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:35.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:36.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:44:36.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:36.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:36.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.LiveVariablesAnalysis ===233
02:44:36.778 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
computeGenKill(n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(true, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(false, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), true, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), false, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, true, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, false, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, false);
computeGenKill(n.getFirstChild().getNext(), gen, kill);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, false, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, false);
02:44:36.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:37.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:37.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:38.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:38.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:39.152 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:39.152 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:39.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:39.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:40.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:40.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:41.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:41.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:42.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:42.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:43.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:43.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:44.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:44.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:45.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:45.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:46.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:46.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:47.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(c, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(n, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(conditional, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(ARGUMENT_ARRAY_ALIAS, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(this.jsScope, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(this.escaped, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), c, kill, true);
computeGenKill(n.getFirstChild().getNext(), n, kill, true);
computeGenKill(n.getFirstChild().getNext(), conditional, kill, true);
computeGenKill(n.getFirstChild().getNext(), ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getFirstChild().getNext(), this.jsScope, kill, true);
computeGenKill(n.getFirstChild().getNext(), this.escaped, kill, true);
computeGenKill(n.getFirstChild().getNext(),  kill, true);
computeGenKill(n.getFirstChild().getNext(), c, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), n, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), conditional, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), ARGUMENT_ARRAY_ALIAS, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), this.jsScope, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), this.escaped, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, c, true);
computeGenKill(n.getFirstChild().getNext(), gen, n, true);
computeGenKill(n.getFirstChild().getNext(), gen, conditional, true);
computeGenKill(n.getFirstChild().getNext(), gen, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getFirstChild().getNext(), gen, this.jsScope, true);
computeGenKill(n.getFirstChild().getNext(), gen, this.escaped, true);
computeGenKill(n.getFirstChild().getNext(), gen,  true);
computeGenKill(n.getFirstChild().getNext(), gen, c, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, n, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, conditional, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, this.jsScope, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, this.escaped, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, c, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, n, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, conditional, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, this.jsScope, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, this.escaped, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, c);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, n);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, conditional);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, this.jsScope);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, this.escaped);
02:44:47.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:48.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:48.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:49.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:49.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:50.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:50.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:50.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:50.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:51.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:51.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:52.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:52.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:53.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:53.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:54.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:54.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:54.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:54.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:55.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:55.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:56.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:56.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:57.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:57.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:57.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:57.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:58.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:58.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:44:59.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:44:59.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:01.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:01.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:02.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:02.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:07.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:07.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:08.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:08.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:09.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:09.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:12.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:12.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:13.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:13.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:13.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:13.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:14.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:14.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:15.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:15.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:16.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:16.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:17.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:17.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:17.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:17.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:18.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:18.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:19.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:19.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:20.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:20.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:21.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:21.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:21.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:21.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:22.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:22.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:23.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:23.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:24.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:24.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:25.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:25.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:25.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:25.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:26.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:26.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:27.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:27.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:28.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:28.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:28.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:28.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:29.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:29.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:30.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (gen != null) {


}

if (kill != null) {


}

02:45:30.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:31.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:31.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:32.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:32.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:32.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (gen == null) {
    return;
}

if (gen == null) {
    throw new IllegalArgumentException("Empty variable: " + gen);
}

if (kill == null) {
    return;
}

if (kill == null) {
    throw new IllegalArgumentException("Empty variable: " + kill);
}

02:45:32.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:33.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:33.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:34.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:34.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:35.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:35.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:36.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:36.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:36.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:36.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:37.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(n.getFirstChild().getNext(), gen, kill, true);
	computeGenKill(n.getFirstChild(), gen, kill, conditional);
        // Assume both sides are conditional.
        
null

        computeGenKill(n.getLastChild(), gen, kill, true);
	computeGenKill(n.getFirstChild().getNext(), gen, kill, true);

MOVE-BUGGY-STATEMENT

        computeGenKill(n.getLastChild(), gen, kill, true);
        return;
	computeGenKill(n.getFirstChild().getNext(), gen, kill, true);

MOVE-BUGGY-STATEMENT
02:45:37.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:38.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:38.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:39.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:39.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:40.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:45:40.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:40.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:40.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.LiveVariablesAnalysis ===231
02:45:40.841 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
computeGenKill(n.getFirstChild(), gen, kill, conditional);
computeGenKill(true, n.getFirstChild(), gen, kill, conditional);
computeGenKill(false, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n.getFirstChild(), true, gen, kill, conditional);
computeGenKill(n.getFirstChild(), false, gen, kill, conditional);
computeGenKill(n.getFirstChild(), gen, true, kill, conditional);
computeGenKill(n.getFirstChild(), gen, false, kill, conditional);
computeGenKill(n.getFirstChild(), gen, kill, true, conditional);
computeGenKill(n.getFirstChild(), gen, kill, false, conditional);
computeGenKill(n.getFirstChild(), gen, kill, conditional, true);
computeGenKill(n.getFirstChild(), gen, kill, conditional, false);
02:45:40.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:41.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:41.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:42.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:42.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:43.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:43.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:44.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:44.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:45.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:45.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:46.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:46.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:47.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:47.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:47.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:47.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:48.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:48.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:49.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(c, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n, n.getFirstChild(), gen, kill, conditional);
computeGenKill(ARGUMENT_ARRAY_ALIAS, n.getFirstChild(), gen, kill, conditional);
computeGenKill(this.jsScope, n.getFirstChild(), gen, kill, conditional);
computeGenKill(this.escaped, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n.getFirstChild(), c, kill, conditional);
computeGenKill(n.getFirstChild(), n, kill, conditional);
computeGenKill(n.getFirstChild(), ARGUMENT_ARRAY_ALIAS, kill, conditional);
computeGenKill(n.getFirstChild(), this.jsScope, kill, conditional);
computeGenKill(n.getFirstChild(), this.escaped, kill, conditional);
computeGenKill(n.getFirstChild(),  kill, conditional);
computeGenKill(n.getFirstChild(), c, gen, kill, conditional);
computeGenKill(n.getFirstChild(), n, gen, kill, conditional);
computeGenKill(n.getFirstChild(), ARGUMENT_ARRAY_ALIAS, gen, kill, conditional);
computeGenKill(n.getFirstChild(), this.jsScope, gen, kill, conditional);
computeGenKill(n.getFirstChild(), this.escaped, gen, kill, conditional);
computeGenKill(n.getFirstChild(), gen, c, conditional);
computeGenKill(n.getFirstChild(), gen, n, conditional);
computeGenKill(n.getFirstChild(), gen, ARGUMENT_ARRAY_ALIAS, conditional);
computeGenKill(n.getFirstChild(), gen, this.jsScope, conditional);
computeGenKill(n.getFirstChild(), gen, this.escaped, conditional);
computeGenKill(n.getFirstChild(), gen,  conditional);
computeGenKill(n.getFirstChild(), gen, c, kill, conditional);
computeGenKill(n.getFirstChild(), gen, n, kill, conditional);
computeGenKill(n.getFirstChild(), gen, ARGUMENT_ARRAY_ALIAS, kill, conditional);
computeGenKill(n.getFirstChild(), gen, this.jsScope, kill, conditional);
computeGenKill(n.getFirstChild(), gen, this.escaped, kill, conditional);
computeGenKill(n.getFirstChild(), gen, kill, c);
computeGenKill(n.getFirstChild(), gen, kill, n);
computeGenKill(n.getFirstChild(), gen, kill, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getFirstChild(), gen, kill, this.jsScope);
computeGenKill(n.getFirstChild(), gen, kill, this.escaped);
computeGenKill(n.getFirstChild(), gen, kill, );
computeGenKill(n.getFirstChild(), gen, kill, c, conditional);
computeGenKill(n.getFirstChild(), gen, kill, n, conditional);
computeGenKill(n.getFirstChild(), gen, kill, ARGUMENT_ARRAY_ALIAS, conditional);
computeGenKill(n.getFirstChild(), gen, kill, this.jsScope, conditional);
computeGenKill(n.getFirstChild(), gen, kill, this.escaped, conditional);
computeGenKill(n.getFirstChild(), gen, kill, conditional, c);
computeGenKill(n.getFirstChild(), gen, kill, conditional, n);
computeGenKill(n.getFirstChild(), gen, kill, conditional, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getFirstChild(), gen, kill, conditional, this.jsScope);
computeGenKill(n.getFirstChild(), gen, kill, conditional, this.escaped);
02:45:49.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:50.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:50.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:50.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:50.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:51.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:51.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:52.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:52.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:53.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:53.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:54.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:54.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:54.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:54.877 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:55.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:55.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:56.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:56.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:57.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:57.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:58.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:58.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:58.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:58.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:59.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:45:59.568 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:00.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:00.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:01.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:01.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:01.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:01.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:02.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:02.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:03.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:03.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:04.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:04.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:05.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:05.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:05.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:05.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:06.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:06.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:07.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:07.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:08.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:08.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:09.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:09.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:09.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:09.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:10.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:10.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:11.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:11.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:12.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:12.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:13.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:13.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:13.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:13.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:14.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:14.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:15.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:15.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:15.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:15.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:16.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:16.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:17.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:17.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:18.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:18.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:19.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:19.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:19.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:19.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:20.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:20.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:21.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:21.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:22.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:22.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:23.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (gen != null) {


}

if (kill != null) {


}

02:46:23.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:23.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:23.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:24.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:24.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:25.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (gen == null) {
    return;
}

if (gen == null) {
    throw new IllegalArgumentException("Empty variable: " + gen);
}

if (kill == null) {
    return;
}

if (kill == null) {
    throw new IllegalArgumentException("Empty variable: " + kill);
}

02:46:25.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:26.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:26.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:27.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:27.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:27.874 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:27.874 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:28.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:28.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:29.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:29.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:30.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

        // Assume both sides are conditional.
        computeGenKill(n.getFirstChild().getNext(), gen, kill, true);
	computeGenKill(n.getFirstChild(), gen, kill, conditional);

MOVE-BUGGY-STATEMENT

        // Assume both sides are conditional.
        computeGenKill(n.getFirstChild().getNext(), gen, kill, true);
        computeGenKill(n.getLastChild(), gen, kill, true);
	computeGenKill(n.getFirstChild(), gen, kill, conditional);

MOVE-BUGGY-STATEMENT

        // Assume both sides are conditional.
        computeGenKill(n.getFirstChild().getNext(), gen, kill, true);
        computeGenKill(n.getLastChild(), gen, kill, true);
        return;
	computeGenKill(n.getFirstChild(), gen, kill, conditional);

MOVE-BUGGY-STATEMENT
02:46:30.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:31.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:31.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:31.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:31.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:32.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:46:32.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:33.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:33.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.LiveVariablesAnalysis ===228
02:46:33.461 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return;

02:46:33.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:34.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:34.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.LiveVariablesAnalysis ===227
02:46:34.248 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
computeGenKill(n.getLastChild(), gen, kill, true);
computeGenKill(true, n.getLastChild(), gen, kill, true);
computeGenKill(false, n.getLastChild(), gen, kill, true);
computeGenKill(n.getLastChild(), true, gen, kill, true);
computeGenKill(n.getLastChild(), false, gen, kill, true);
computeGenKill(n.getLastChild(), gen, true, kill, true);
computeGenKill(n.getLastChild(), gen, false, kill, true);
computeGenKill(n.getLastChild(), gen, kill, false);
computeGenKill(n.getLastChild(), gen, kill);
computeGenKill(n.getLastChild(), gen, kill, true, true);
computeGenKill(n.getLastChild(), gen, kill, false, true);
computeGenKill(n.getLastChild(), gen, kill, true, true);
computeGenKill(n.getLastChild(), gen, kill, true, false);
02:46:34.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:35.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:35.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:35.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:35.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:36.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:36.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:37.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:37.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:38.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:38.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:39.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:39.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:39.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:39.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:40.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:40.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:41.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:41.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:42.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:42.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:42.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:42.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:43.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(c, n.getLastChild(), gen, kill, true);
computeGenKill(n, n.getLastChild(), gen, kill, true);
computeGenKill(conditional, n.getLastChild(), gen, kill, true);
computeGenKill(ARGUMENT_ARRAY_ALIAS, n.getLastChild(), gen, kill, true);
computeGenKill(this.jsScope, n.getLastChild(), gen, kill, true);
computeGenKill(this.escaped, n.getLastChild(), gen, kill, true);
computeGenKill(n.getLastChild(), c, kill, true);
computeGenKill(n.getLastChild(), n, kill, true);
computeGenKill(n.getLastChild(), conditional, kill, true);
computeGenKill(n.getLastChild(), ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getLastChild(), this.jsScope, kill, true);
computeGenKill(n.getLastChild(), this.escaped, kill, true);
computeGenKill(n.getLastChild(),  kill, true);
computeGenKill(n.getLastChild(), c, gen, kill, true);
computeGenKill(n.getLastChild(), n, gen, kill, true);
computeGenKill(n.getLastChild(), conditional, gen, kill, true);
computeGenKill(n.getLastChild(), ARGUMENT_ARRAY_ALIAS, gen, kill, true);
computeGenKill(n.getLastChild(), this.jsScope, gen, kill, true);
computeGenKill(n.getLastChild(), this.escaped, gen, kill, true);
computeGenKill(n.getLastChild(), gen, c, true);
computeGenKill(n.getLastChild(), gen, n, true);
computeGenKill(n.getLastChild(), gen, conditional, true);
computeGenKill(n.getLastChild(), gen, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getLastChild(), gen, this.jsScope, true);
computeGenKill(n.getLastChild(), gen, this.escaped, true);
computeGenKill(n.getLastChild(), gen,  true);
computeGenKill(n.getLastChild(), gen, c, kill, true);
computeGenKill(n.getLastChild(), gen, n, kill, true);
computeGenKill(n.getLastChild(), gen, conditional, kill, true);
computeGenKill(n.getLastChild(), gen, ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getLastChild(), gen, this.jsScope, kill, true);
computeGenKill(n.getLastChild(), gen, this.escaped, kill, true);
computeGenKill(n.getLastChild(), gen, kill, c, true);
computeGenKill(n.getLastChild(), gen, kill, n, true);
computeGenKill(n.getLastChild(), gen, kill, conditional, true);
computeGenKill(n.getLastChild(), gen, kill, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getLastChild(), gen, kill, this.jsScope, true);
computeGenKill(n.getLastChild(), gen, kill, this.escaped, true);
computeGenKill(n.getLastChild(), gen, kill, true, c);
computeGenKill(n.getLastChild(), gen, kill, true, n);
computeGenKill(n.getLastChild(), gen, kill, true, conditional);
computeGenKill(n.getLastChild(), gen, kill, true, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getLastChild(), gen, kill, true, this.jsScope);
computeGenKill(n.getLastChild(), gen, kill, true, this.escaped);
02:46:43.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:44.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:44.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:45.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:45.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:46.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:46.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:46.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:46.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:47.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:47.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:48.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:48.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:49.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:49.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:50.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:50.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:50.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:50.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:51.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:51.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:52.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:52.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:53.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:53.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:54.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:54.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:54.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:54.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:55.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:55.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:56.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:56.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:57.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:57.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:58.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:58.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:58.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:58.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:46:59.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:46:59.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:00.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:00.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:01.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:01.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:02.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:02.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:02.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:02.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:03.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:03.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:04.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:04.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:05.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:05.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:05.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:05.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:06.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:06.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:07.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:07.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:08.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:08.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:09.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:09.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:09.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:09.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:10.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:10.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:11.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:11.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:12.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:12.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:13.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:13.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:13.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:13.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:14.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:14.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:15.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:15.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:16.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:16.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:16.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:16.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:17.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:17.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:18.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (gen != null) {


}

if (kill != null) {


}

02:47:18.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:19.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:19.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:20.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:20.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:20.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (gen == null) {
    return;
}

if (gen == null) {
    throw new IllegalArgumentException("Empty variable: " + gen);
}

if (kill == null) {
    return;
}

if (kill == null) {
    throw new IllegalArgumentException("Empty variable: " + kill);
}

02:47:20.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:21.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:21.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:22.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:22.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:23.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:23.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:24.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:24.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:24.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:24.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:25.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(n.getLastChild(), gen, kill, true);
	computeGenKill(n.getFirstChild(), gen, kill, conditional);
        // May short circuit.
        
null

        return;
	computeGenKill(n.getLastChild(), gen, kill, true);

MOVE-BUGGY-STATEMENT
02:47:25.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:26.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:26.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:27.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:47:27.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:28.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:28.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.LiveVariablesAnalysis ===225
02:47:28.084 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
computeGenKill(n.getFirstChild(), gen, kill, conditional);
computeGenKill(true, n.getFirstChild(), gen, kill, conditional);
computeGenKill(false, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n.getFirstChild(), true, gen, kill, conditional);
computeGenKill(n.getFirstChild(), false, gen, kill, conditional);
computeGenKill(n.getFirstChild(), gen, true, kill, conditional);
computeGenKill(n.getFirstChild(), gen, false, kill, conditional);
computeGenKill(n.getFirstChild(), gen, kill, true, conditional);
computeGenKill(n.getFirstChild(), gen, kill, false, conditional);
computeGenKill(n.getFirstChild(), gen, kill, conditional, true);
computeGenKill(n.getFirstChild(), gen, kill, conditional, false);
02:47:28.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:28.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:28.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:29.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:29.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:30.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:30.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:31.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:31.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:31.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:31.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:32.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:32.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:33.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:33.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:34.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:34.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:35.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:35.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:35.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(c, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n, n.getFirstChild(), gen, kill, conditional);
computeGenKill(ARGUMENT_ARRAY_ALIAS, n.getFirstChild(), gen, kill, conditional);
computeGenKill(this.jsScope, n.getFirstChild(), gen, kill, conditional);
computeGenKill(this.escaped, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n.getFirstChild(), c, kill, conditional);
computeGenKill(n.getFirstChild(), n, kill, conditional);
computeGenKill(n.getFirstChild(), ARGUMENT_ARRAY_ALIAS, kill, conditional);
computeGenKill(n.getFirstChild(), this.jsScope, kill, conditional);
computeGenKill(n.getFirstChild(), this.escaped, kill, conditional);
computeGenKill(n.getFirstChild(),  kill, conditional);
computeGenKill(n.getFirstChild(), c, gen, kill, conditional);
computeGenKill(n.getFirstChild(), n, gen, kill, conditional);
computeGenKill(n.getFirstChild(), ARGUMENT_ARRAY_ALIAS, gen, kill, conditional);
computeGenKill(n.getFirstChild(), this.jsScope, gen, kill, conditional);
computeGenKill(n.getFirstChild(), this.escaped, gen, kill, conditional);
computeGenKill(n.getFirstChild(), gen, c, conditional);
computeGenKill(n.getFirstChild(), gen, n, conditional);
computeGenKill(n.getFirstChild(), gen, ARGUMENT_ARRAY_ALIAS, conditional);
computeGenKill(n.getFirstChild(), gen, this.jsScope, conditional);
computeGenKill(n.getFirstChild(), gen, this.escaped, conditional);
computeGenKill(n.getFirstChild(), gen,  conditional);
computeGenKill(n.getFirstChild(), gen, c, kill, conditional);
computeGenKill(n.getFirstChild(), gen, n, kill, conditional);
computeGenKill(n.getFirstChild(), gen, ARGUMENT_ARRAY_ALIAS, kill, conditional);
computeGenKill(n.getFirstChild(), gen, this.jsScope, kill, conditional);
computeGenKill(n.getFirstChild(), gen, this.escaped, kill, conditional);
computeGenKill(n.getFirstChild(), gen, kill, c);
computeGenKill(n.getFirstChild(), gen, kill, n);
computeGenKill(n.getFirstChild(), gen, kill, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getFirstChild(), gen, kill, this.jsScope);
computeGenKill(n.getFirstChild(), gen, kill, this.escaped);
computeGenKill(n.getFirstChild(), gen, kill, );
computeGenKill(n.getFirstChild(), gen, kill, c, conditional);
computeGenKill(n.getFirstChild(), gen, kill, n, conditional);
computeGenKill(n.getFirstChild(), gen, kill, ARGUMENT_ARRAY_ALIAS, conditional);
computeGenKill(n.getFirstChild(), gen, kill, this.jsScope, conditional);
computeGenKill(n.getFirstChild(), gen, kill, this.escaped, conditional);
computeGenKill(n.getFirstChild(), gen, kill, conditional, c);
computeGenKill(n.getFirstChild(), gen, kill, conditional, n);
computeGenKill(n.getFirstChild(), gen, kill, conditional, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getFirstChild(), gen, kill, conditional, this.jsScope);
computeGenKill(n.getFirstChild(), gen, kill, conditional, this.escaped);
02:47:35.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:36.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:36.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:37.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:37.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:38.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:38.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:38.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:38.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:39.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:39.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:40.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:40.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:41.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:41.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:41.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:41.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:42.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:42.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:43.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:43.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:44.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:44.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:44.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:44.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:45.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:45.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:46.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:46.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:47.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:47.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:48.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:48.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:48.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:48.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:49.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:49.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:50.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:50.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:51.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:51.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:51.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:51.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:52.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:52.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:53.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:53.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:54.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:54.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:54.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:54.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:55.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:55.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:56.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:56.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:57.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:57.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:58.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:58.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:58.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:58.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:47:59.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:47:59.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:00.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:00.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:00.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:00.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:01.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:01.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:02.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:02.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:03.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:03.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:04.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:04.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:04.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:04.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:05.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:05.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:06.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:06.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:07.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:07.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:07.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:07.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:08.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (gen != null) {


}

if (kill != null) {


}

02:48:08.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:09.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:09.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:10.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:10.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:11.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (gen == null) {
    return;
}

if (gen == null) {
    throw new IllegalArgumentException("Empty variable: " + gen);
}

if (kill == null) {
    return;
}

if (kill == null) {
    throw new IllegalArgumentException("Empty variable: " + kill);
}

02:48:11.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:11.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:11.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:12.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:12.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:13.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:13.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:14.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:14.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:15.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:15.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:15.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

        // May short circuit.
        computeGenKill(n.getLastChild(), gen, kill, true);
	computeGenKill(n.getFirstChild(), gen, kill, conditional);

MOVE-BUGGY-STATEMENT

        // May short circuit.
        computeGenKill(n.getLastChild(), gen, kill, true);
        return;
	computeGenKill(n.getFirstChild(), gen, kill, conditional);

MOVE-BUGGY-STATEMENT
02:48:15.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:16.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:16.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:17.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:48:17.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:18.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:18.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===232
02:48:18.258 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case FREE_CALL:
if (FREE_CALL == 0) {
    new IllegalArgumentException("");
}

if (FREE_CALL != 0) {

    
}

if (FREE_CALL > 0) {

    
}

02:48:18.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:19.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:19.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:19.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:19.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:19.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
setType(FREE_CALL);
setType(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setType(FREE_CALL);
removeProp(FREE_CALL);
removeProp(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	removeProp(FREE_CALL);
setLineno(FREE_CALL);
setLineno(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setLineno(FREE_CALL);
setCharno(FREE_CALL);
setCharno(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setCharno(FREE_CALL);
detachChildren();
	case FREE_CALL:
case FREE_CALL:
	detachChildren();
setSideEffectFlags(FREE_CALL);
setSideEffectFlags(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setSideEffectFlags(FREE_CALL);
setQuotedString();
	case FREE_CALL:
case FREE_CALL:
	setQuotedString();
02:48:19.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:20.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:20.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:21.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:21.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:22.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:22.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:23.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:23.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:24.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:24.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:25.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:25.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:26.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:26.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:27.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:27.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:28.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:28.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:29.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:29.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:30.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:30.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:30.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:30.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:31.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:31.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:32.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:32.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:33.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:33.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:34.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:34.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:35.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:35.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:36.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:36.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:37.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:48:37.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:38.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:38.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===354
02:48:38.411 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return VariableLiveness.READ;

02:48:38.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:39.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:39.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===342
02:48:39.209 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLiteralValue(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isValidDefineValue(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.mayEffectMutableState(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.mayHaveSideEffects(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.constructorCallHasSideEffects(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.functionCallHasSideEffects(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.nodeTypeMayHaveSideEffects(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.canBeSideEffected(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.valueCheck(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.mayBeString(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isControlStructureCodeBlock(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isTryFinallyNode(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isObjectCallMethod(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isObjectLitKey(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.containsType(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isNameReferenced(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.evaluatesToLocalValue(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
02:48:39.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:40.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:40.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:40.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:40.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:41.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:41.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:42.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:42.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:43.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:43.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:44.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:44.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:44.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:44.877 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:45.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:45.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:46.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:46.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:47.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:47.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:48.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:48.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:48.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:48.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:49.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:49.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:50.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:50.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:51.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:51.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:52.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:52.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:52.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (NodeUtil.isLhs(variable, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(this.compiler, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(this.liveness, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(matchRemovableAssigns, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs( n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(variable, n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(this.compiler, n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(this.liveness, n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(matchRemovableAssigns, n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, variable, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, this.compiler, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, this.liveness, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, matchRemovableAssigns, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, n.getParent(), variable)) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, n.getParent(), this.compiler)) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, n.getParent(), this.liveness)) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, n.getParent(), matchRemovableAssigns)) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
02:48:52.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:53.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:53.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:54.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:54.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:55.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:55.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:56.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:56.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:56.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:56.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:57.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:57.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:58.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:58.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:59.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:59.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:59.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:48:59.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:00.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:00.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:01.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:01.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:02.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:02.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:03.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:03.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:03.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:03.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:04.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:04.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:05.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:05.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:06.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (NodeUtil != null && NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil != null || NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
02:49:06.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:07.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:07.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:07.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (n != null) {


}

02:49:07.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:08.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:08.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:09.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:49:09.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:10.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:10.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:11.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:11.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:11.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:11.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:12.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:49:12.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:13.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:13.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===314
02:49:13.646 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return true;
return false;
02:49:13.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:14.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:49:14.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:15.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:15.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===230
02:49:15.299 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return;

02:49:15.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:16.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:16.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===349
02:49:16.125 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (state == VariableLiveness.READ) {
          return state;
        }
if (state != VariableLiveness.READ) {
          return state;
        }
02:49:16.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:16.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (state != null) {


}

02:49:16.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:17.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (state == null) {
    return null;
}

if (state == null) {
    throw new IllegalArgumentException("Empty variable: " + state);
}

02:49:17.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:18.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:18.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:19.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (state == VariableLiveness.READ) {
          return state;
        }
	Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        
null
if (state == VariableLiveness.READ) {
          return state;
        }
	Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        
null
if (state == VariableLiveness.READ) {
          return state;
        }
	VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        
null

        return VariableLiveness.KILL;
	if (state == VariableLiveness.READ) {
          return state;
        }

MOVE-BUGGY-STATEMENT

        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
	if (state == VariableLiveness.READ) {
          return state;
        }

MOVE-BUGGY-STATEMENT
02:49:19.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:20.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:20.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:21.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:21.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:21.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:21.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:22.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:22.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:23.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:49:23.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:24.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:24.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===348
02:49:24.328 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
VariableLiveness state = isVariableReadBeforeKill(state, variable);
VariableLiveness state = isVariableReadBeforeKill(n, variable);
VariableLiveness state = isVariableReadBeforeKill(this.compiler, variable);
VariableLiveness state = isVariableReadBeforeKill(this.liveness, variable);
VariableLiveness state = isVariableReadBeforeKill(matchRemovableAssigns, variable);
VariableLiveness state = isVariableReadBeforeKill( variable);
VariableLiveness state = isVariableReadBeforeKill(state, rhs, variable);
VariableLiveness state = isVariableReadBeforeKill(n, rhs, variable);
VariableLiveness state = isVariableReadBeforeKill(this.compiler, rhs, variable);
VariableLiveness state = isVariableReadBeforeKill(this.liveness, rhs, variable);
VariableLiveness state = isVariableReadBeforeKill(matchRemovableAssigns, rhs, variable);
VariableLiveness state = isVariableReadBeforeKill(rhs, state);
VariableLiveness state = isVariableReadBeforeKill(rhs, n);
VariableLiveness state = isVariableReadBeforeKill(rhs, this.compiler);
VariableLiveness state = isVariableReadBeforeKill(rhs, this.liveness);
VariableLiveness state = isVariableReadBeforeKill(rhs, matchRemovableAssigns);
VariableLiveness state = isVariableReadBeforeKill(rhs, );
VariableLiveness state = isVariableReadBeforeKill(rhs, state, variable);
VariableLiveness state = isVariableReadBeforeKill(rhs, n, variable);
VariableLiveness state = isVariableReadBeforeKill(rhs, this.compiler, variable);
VariableLiveness state = isVariableReadBeforeKill(rhs, this.liveness, variable);
VariableLiveness state = isVariableReadBeforeKill(rhs, matchRemovableAssigns, variable);
VariableLiveness state = isVariableReadBeforeKill(rhs, variable, state);
VariableLiveness state = isVariableReadBeforeKill(rhs, variable, n);
VariableLiveness state = isVariableReadBeforeKill(rhs, variable, this.compiler);
VariableLiveness state = isVariableReadBeforeKill(rhs, variable, this.liveness);
VariableLiveness state = isVariableReadBeforeKill(rhs, variable, matchRemovableAssigns);
02:49:24.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:25.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:25.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:25.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:25.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:26.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:26.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:27.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:27.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:28.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:28.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:29.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:29.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:30.004 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:30.004 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:30.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:30.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:31.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:31.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:32.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:32.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:33.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:33.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:34.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:34.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:34.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:34.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:35.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:35.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:36.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:36.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:37.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:37.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:37.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:37.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:38.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:38.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:39.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:39.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:40.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:40.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:40.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:40.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:41.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:41.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:42.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:42.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:43.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:43.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:44.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:44.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:44.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:44.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:45.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
VariableLiveness state = state;
VariableLiveness state = rhs;
VariableLiveness state = n;
VariableLiveness state = variable;
VariableLiveness state = this.compiler;
VariableLiveness state = this.liveness;
VariableLiveness state = matchRemovableAssigns;
02:49:45.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:46.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:46.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:47.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:47.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:47.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:47.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:48.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:48.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:49.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:49.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:50.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:50.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:51.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (rhs != null) {


}

if (variable != null) {


}

02:49:51.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:51.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:51.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:52.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (rhs == null) {
    return null;
}

if (rhs == null) {
    throw new IllegalArgumentException("Empty variable: " + rhs);
}

if (variable == null) {
    return null;
}

if (variable == null) {
    throw new IllegalArgumentException("Empty variable: " + variable);
}

02:49:52.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:53.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:53.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:54.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:54.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:55.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:55.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:55.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:49:55.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:56.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:56.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===347
02:49:56.758 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Node rhs = n.getNext();
Node rhs = n.getNext(rhs);
Node rhs = n.getNext(variable);
Node rhs = n.getNext(this.compiler);
Node rhs = n.getNext(this.liveness);
Node rhs = n.getNext(matchRemovableAssigns);
02:49:56.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:57.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:57.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:58.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:58.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:59.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:59.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:49:59.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:49:59.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:00.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
Node rhs = rhs.getNext();
Node rhs = variable.getNext();
Node rhs = this.compiler.getNext();
Node rhs = this.liveness.getNext();
Node rhs = matchRemovableAssigns.getNext();
02:50:00.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:01.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:01.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:02.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:02.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:03.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:03.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:04.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:04.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:04.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

02:50:04.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:05.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:50:05.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:06.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:06.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:07.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:50:07.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:08.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:08.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===343
02:50:08.044 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(true, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(false, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, true);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, false);
02:50:08.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:08.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:08.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:09.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:09.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:10.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:10.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:11.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
Preconditions.checkState(n, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(variable, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(this.compiler, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(this.liveness, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(matchRemovableAssigns, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, n);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, variable);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, this.compiler);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, this.liveness);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, matchRemovableAssigns);
02:50:11.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:12.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:12.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:12.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:12.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:13.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:13.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:14.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:14.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:15.318 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:15.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:16.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:16.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:17.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:17.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:17.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:17.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:18.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:18.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:19.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

02:50:19.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:20.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:50:20.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:21.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:21.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:21.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
	Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);

MOVE-BUGGY-STATEMENT

        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
	Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);

MOVE-BUGGY-STATEMENT

        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
	Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);

MOVE-BUGGY-STATEMENT

        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
	Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);

MOVE-BUGGY-STATEMENT

        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
	Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);

MOVE-BUGGY-STATEMENT
02:50:21.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:22.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:22.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:23.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:23.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:24.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:24.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:25.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:25.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:25.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:50:25.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:26.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:26.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===358
02:50:26.729 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
switch (n.getType()) {
      // Conditionals
      case Token.OR:
      case Token.AND:
        // With a AND/OR the first branch always runs, but the second is
        // may not.
      case Token.HOOK:
        return checkHookBranchReadBeforeKill(
            n.getFirstChild().getNext(), n.getLastChild(), variable);

      default:
        // Expressions are evaluated left-right, depth first.
        for (Node child = n.getFirstChild();
            child != null; child = child.getNext()) {
          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
          VariableLiveness state = isVariableReadBeforeKill(child, variable);
          if (state != VariableLiveness.MAYBE_LIVE) {
            return state;
          }
        }
      }
    }
if (n != null) {


}

02:50:26.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:27.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:50:27.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:28.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:28.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:29.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
switch (n.getType()) {
      // Conditionals
      case Token.OR:
      case Token.AND:
        // With a AND/OR the first branch always runs, but the second is
        // may not.
      case Token.HOOK:
        return checkHookBranchReadBeforeKill(
            n.getFirstChild().getNext(), n.getLastChild(), variable);

      default:
        // Expressions are evaluated left-right, depth first.
        for (Node child = n.getFirstChild();
            child != null; child = child.getNext()) {
          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
          VariableLiveness state = isVariableReadBeforeKill(child, variable);
          if (state != VariableLiveness.MAYBE_LIVE) {
            return state;
          }
        }
      }
    }
	if (NodeUtil.isName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }

    
null


    return VariableLiveness.MAYBE_LIVE;
	switch (n.getType()) {
      // Conditionals
      case Token.OR:
      case Token.AND:
        // With a AND/OR the first branch always runs, but the second is
        // may not.
      case Token.HOOK:
        return checkHookBranchReadBeforeKill(
            n.getFirstChild().getNext(), n.getLastChild(), variable);

      default:
        // Expressions are evaluated left-right, depth first.
        for (Node child = n.getFirstChild();
            child != null; child = child.getNext()) {
          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
          VariableLiveness state = isVariableReadBeforeKill(child, variable);
          if (state != VariableLiveness.MAYBE_LIVE) {
            return state;
          }
        }
      }
    }

MOVE-BUGGY-STATEMENT
02:50:29.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:29.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:29.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:30.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:50:30.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:31.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:31.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===341
02:50:31.473 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (NodeUtil.isName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) || variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
02:50:31.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:32.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (variable != null) {


}

if (n != null) {


}

02:50:32.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:33.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:33.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:33.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:33.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:34.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (variable == null) {
    return null;
}

if (variable == null) {
    throw new IllegalArgumentException("Empty variable: " + variable);
}

if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:50:34.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:35.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:35.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:36.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:36.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:37.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:37.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:37.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:37.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:38.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:38.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:39.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 


    switch (n.getType()) {
      // Conditionals
      case Token.OR:
      case Token.AND:
        // With a AND/OR the first branch always runs, but the second is
        // may not.
      case Token.HOOK:
        return checkHookBranchReadBeforeKill(
            n.getFirstChild().getNext(), n.getLastChild(), variable);

      default:
        // Expressions are evaluated left-right, depth first.
        for (Node child = n.getFirstChild();
            child != null; child = child.getNext()) {
          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
          VariableLiveness state = isVariableReadBeforeKill(child, variable);
          if (state != VariableLiveness.MAYBE_LIVE) {
            return state;
          }
        }
      }
    }
	if (NodeUtil.isName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }

MOVE-BUGGY-STATEMENT


    switch (n.getType()) {
      // Conditionals
      case Token.OR:
      case Token.AND:
        // With a AND/OR the first branch always runs, but the second is
        // may not.
      case Token.HOOK:
        return checkHookBranchReadBeforeKill(
            n.getFirstChild().getNext(), n.getLastChild(), variable);

      default:
        // Expressions are evaluated left-right, depth first.
        for (Node child = n.getFirstChild();
            child != null; child = child.getNext()) {
          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
          VariableLiveness state = isVariableReadBeforeKill(child, variable);
          if (state != VariableLiveness.MAYBE_LIVE) {
            return state;
          }
        }
      }
    }

    return VariableLiveness.MAYBE_LIVE;
	if (NodeUtil.isName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }

MOVE-BUGGY-STATEMENT
02:50:39.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:40.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:40.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:41.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:50:41.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:41.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:41.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===313
02:50:41.996 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
if (state != VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
02:50:41.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:42.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (state != null) {


}

02:50:42.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:43.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (state == null) {
    return true;
}

if (state == null) {
    return false;
}

if (state == null) {
    throw new IllegalArgumentException("Empty variable: " + state);
}

02:50:43.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:44.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:44.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:45.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:45.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:46.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
	state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      
null
02:50:46.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:46.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:50:46.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:47.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:47.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===310
02:50:47.793 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
state = isVariableReadBeforeKill(sibling, variable);
state = isVariableReadBeforeKill(true, sibling, variable);
state = isVariableReadBeforeKill(false, sibling, variable);
state = isVariableReadBeforeKill(sibling, true, variable);
state = isVariableReadBeforeKill(sibling, false, variable);
state = isVariableReadBeforeKill(sibling, variable, true);
state = isVariableReadBeforeKill(sibling, variable, false);
02:50:47.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:48.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:48.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:49.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:49.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:50.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:50.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:51.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:51.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:51.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:51.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:52.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (sibling != null) {


}

if (variable != null) {


}

02:50:52.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:53.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:53.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:54.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (sibling == null) {
    return true;
}

if (sibling == null) {
    return false;
}

if (sibling == null) {
    throw new IllegalArgumentException("Empty variable: " + sibling);
}

if (variable == null) {
    return true;
}

if (variable == null) {
    return false;
}

if (variable == null) {
    throw new IllegalArgumentException("Empty variable: " + variable);
}

02:50:54.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:55.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:55.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:55.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:55.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:56.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:56.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:57.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:57.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:58.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:50:58.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:59.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 


      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
	state = isVariableReadBeforeKill(sibling, variable);

MOVE-BUGGY-STATEMENT
02:50:59.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:50:59.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:50:59.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:00.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:00.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===309
02:51:00.733 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (!ControlFlowGraph.isEnteringNewCfgNode(sibling)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (sibling != null) {


}

02:51:00.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:01.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (sibling == null) {
    return true;
}

if (sibling == null) {
    return false;
}

if (sibling == null) {
    throw new IllegalArgumentException("Empty variable: " + sibling);
}

02:51:01.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:02.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:02.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:03.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:03.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:03.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 

02:51:03.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:04.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(diff) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(node2) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(LOCAL_BLOCK_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(OBJECT_IDS_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(CATCH_SCOPE_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(LABEL_ID_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(TARGET_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(BREAK_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(CONTINUE_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(ENUM_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(FUNCTION_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(TEMP_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(LOCAL_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(CODEOFFSET_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(FIXUPS_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(VARS_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(USES_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(REGEXP_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(CASES_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(DEFAULT_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(CASEARRAY_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(SOURCENAME_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(TYPE_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(SPECIAL_PROP_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(LABEL_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(FINALLY_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(LOCALCOUNT_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(TARGETBLOCK_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(VARIABLE_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(LASTUSE_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(ISNUMBER_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(DIRECTCALL_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(SPECIALCALL_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(DEBUGSOURCE_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(JSDOC_INFO_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(VAR_ARGS_NAME) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(SKIP_INDEXES_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(INCRDECR_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(MEMBER_TYPE_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(NAME_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(PARENTHESIZED_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(QUOTED_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(OPT_ARG_NAME) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(SYNTHETIC_BLOCK_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(EMPTY_BLOCK) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(ORIGINALNAME_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(BRACELESS_TYPE) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(SIDE_EFFECT_FLAGS) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(IS_CONSTANT_NAME) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(IS_OPTIONAL_PARAM) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(IS_VAR_ARGS_PARAM) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(IS_NAMESPACE) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(IS_DISPATCHER) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(DIRECTIVES) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(DIRECT_EVAL) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(FREE_CALL) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(LAST_PROP) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(BOTH) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(LEFT) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(RIGHT) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(NON_SPECIALCALL) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(SPECIALCALL_EVAL) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(SPECIALCALL_WITH) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(DECR_FLAG) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(POST_FLAG) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(PROPERTY_FLAG) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(ATTRIBUTE_FLAG) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(DESCENDANTS_FLAG) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(this.type) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(this.next) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(this.first) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(this.last) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(this.propListHead) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(COLUMN_BITS) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(MAX_COLUMN_NUMBER) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(COLUMN_MASK) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(this.sourcePosition) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(this.jsType) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(this.parent) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(FLAG_GLOBAL_STATE_UNMODIFIED) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(FLAG_THIS_UNMODIFIED) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(FLAG_ARGUMENTS_UNMODIFIED) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(FLAG_NO_THROWS) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(FLAG_LOCAL_RESULTS) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(SIDE_EFFECTS_FLAGS_MASK) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(SIDE_EFFECTS_ALL) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree(NO_SIDE_EFFECTS) +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
toStringTree(true);
toStringTree(false);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(diff) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(LOCAL_BLOCK_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(OBJECT_IDS_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(CATCH_SCOPE_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(LABEL_ID_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(TARGET_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(BREAK_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(CONTINUE_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(ENUM_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(FUNCTION_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(TEMP_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(LOCAL_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(CODEOFFSET_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(FIXUPS_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(VARS_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(USES_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(REGEXP_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(CASES_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(DEFAULT_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(CASEARRAY_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(SOURCENAME_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(TYPE_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(SPECIAL_PROP_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(LABEL_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(FINALLY_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(LOCALCOUNT_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(TARGETBLOCK_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(VARIABLE_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(LASTUSE_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(ISNUMBER_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(DIRECTCALL_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(SPECIALCALL_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(DEBUGSOURCE_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(JSDOC_INFO_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(VAR_ARGS_NAME) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(SKIP_INDEXES_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(INCRDECR_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(MEMBER_TYPE_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(NAME_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(PARENTHESIZED_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(QUOTED_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(OPT_ARG_NAME) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(SYNTHETIC_BLOCK_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(EMPTY_BLOCK) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(ORIGINALNAME_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(BRACELESS_TYPE) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(SIDE_EFFECT_FLAGS) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(IS_CONSTANT_NAME) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(IS_OPTIONAL_PARAM) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(IS_VAR_ARGS_PARAM) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(IS_NAMESPACE) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(IS_DISPATCHER) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(DIRECTIVES) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(DIRECT_EVAL) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(FREE_CALL) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(LAST_PROP) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(BOTH) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(LEFT) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(RIGHT) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(NON_SPECIALCALL) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(SPECIALCALL_EVAL) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(SPECIALCALL_WITH) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(DECR_FLAG) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(POST_FLAG) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(PROPERTY_FLAG) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(ATTRIBUTE_FLAG) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(DESCENDANTS_FLAG) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(this.type) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(this.next) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(this.first) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(this.last) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(this.propListHead) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(COLUMN_BITS) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(MAX_COLUMN_NUMBER) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(COLUMN_MASK) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(this.sourcePosition) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(this.jsType) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(this.parent) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(FLAG_GLOBAL_STATE_UNMODIFIED) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(FLAG_THIS_UNMODIFIED) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(FLAG_ARGUMENTS_UNMODIFIED) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(FLAG_NO_THROWS) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(FLAG_LOCAL_RESULTS) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(SIDE_EFFECTS_FLAGS_MASK) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(SIDE_EFFECTS_ALL) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(NO_SIDE_EFFECTS) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(true) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree(false) +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.children() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.siblings() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSDocInfo() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getAncestors() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getNext() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastSibling() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachFromParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTreeImpl() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLineno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getCharno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getChildCount() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSideEffectFlags() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSortedPropTypes() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.setQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasMoreThanOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasSideEffects() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isUnscopedQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVarArgs() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOptionalArg() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSyntheticBlock() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.wasEmptyNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOnlyModifiesThisCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNoSideEffectsCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLocalResultCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDirectives() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDouble() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJsDocBuilderForNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getType().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + hasChildren().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getFirstChild().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getLastChild().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getNext().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getLastSibling().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getSortedPropTypes().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getLineno().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getCharno().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getDouble().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getString().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + toString().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + toStringTree().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + toStringTreeImpl().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + children().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + siblings().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getParent().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getAncestors().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + hasOneChild().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + hasMoreThanOneChild().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getChildCount().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + hasSideEffects().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getQualifiedName().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + isQualifiedName().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + isUnscopedQualifiedName().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + detachFromParent().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + removeFirstChild().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + removeChildren().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + cloneNode().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + cloneTree().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getJSType().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getJsDocBuilderForNode().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getJSDocInfo().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + isVarArgs().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + isOptionalArg().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + isSyntheticBlock().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getDirectives().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + wasEmptyNode().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + getSideEffectFlags().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + isOnlyModifiesThisCall().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + isNoSideEffectsCall().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + isLocalResultCall().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + isQuotedString().toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(diff) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(node2) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(LOCAL_BLOCK_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(OBJECT_IDS_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(CATCH_SCOPE_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(LABEL_ID_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(TARGET_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(BREAK_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(CONTINUE_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(ENUM_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(FUNCTION_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(TEMP_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(LOCAL_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(CODEOFFSET_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(FIXUPS_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(VARS_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(USES_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(REGEXP_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(CASES_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(DEFAULT_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(CASEARRAY_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(SOURCENAME_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(TYPE_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(SPECIAL_PROP_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(LABEL_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(FINALLY_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(LOCALCOUNT_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(TARGETBLOCK_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(VARIABLE_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(LASTUSE_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(ISNUMBER_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(DIRECTCALL_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(SPECIALCALL_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(DEBUGSOURCE_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(JSDOC_INFO_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(VAR_ARGS_NAME) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(SKIP_INDEXES_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(INCRDECR_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(MEMBER_TYPE_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(NAME_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(PARENTHESIZED_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(QUOTED_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(OPT_ARG_NAME) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(SYNTHETIC_BLOCK_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(EMPTY_BLOCK) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(ORIGINALNAME_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(BRACELESS_TYPE) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(SIDE_EFFECT_FLAGS) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(IS_CONSTANT_NAME) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(IS_OPTIONAL_PARAM) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(IS_VAR_ARGS_PARAM) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(IS_NAMESPACE) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(IS_DISPATCHER) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(DIRECTIVES) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(DIRECT_EVAL) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(FREE_CALL) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(LAST_PROP) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(BOTH) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(LEFT) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(RIGHT) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(NON_SPECIALCALL) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(SPECIALCALL_EVAL) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(SPECIALCALL_WITH) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(DECR_FLAG) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(POST_FLAG) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(PROPERTY_FLAG) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(ATTRIBUTE_FLAG) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(DESCENDANTS_FLAG) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(this.type) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(this.next) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(this.first) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(this.last) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(this.propListHead) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(COLUMN_BITS) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(MAX_COLUMN_NUMBER) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(COLUMN_MASK) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(this.sourcePosition) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(this.jsType) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(this.parent) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(FLAG_GLOBAL_STATE_UNMODIFIED) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(FLAG_THIS_UNMODIFIED) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(FLAG_ARGUMENTS_UNMODIFIED) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(FLAG_NO_THROWS) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(FLAG_LOCAL_RESULTS) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(SIDE_EFFECTS_FLAGS_MASK) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(SIDE_EFFECTS_ALL) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(NO_SIDE_EFFECTS) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(true) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree(false) +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getType().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + hasChildren().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getFirstChild().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getLastChild().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getNext().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getLastSibling().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getSortedPropTypes().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getLineno().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getCharno().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getDouble().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getString().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + toString().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + toStringTree().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + toStringTreeImpl().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + children().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + siblings().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getParent().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getAncestors().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + hasOneChild().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + hasMoreThanOneChild().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getChildCount().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + hasSideEffects().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getQualifiedName().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + isQualifiedName().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + isUnscopedQualifiedName().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + detachFromParent().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + removeFirstChild().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + removeChildren().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + cloneNode().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + cloneTree().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getJSType().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getJsDocBuilderForNode().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getJSDocInfo().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + isVarArgs().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + isOptionalArg().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + isSyntheticBlock().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getDirectives().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + wasEmptyNode().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + getSideEffectFlags().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + isOnlyModifiesThisCall().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + isNoSideEffectsCall().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + isLocalResultCall().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + isQuotedString().toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(diff);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(node2);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(LOCAL_BLOCK_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(OBJECT_IDS_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(CATCH_SCOPE_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(LABEL_ID_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(TARGET_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(BREAK_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(CONTINUE_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(ENUM_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(FUNCTION_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(TEMP_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(LOCAL_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(CODEOFFSET_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(FIXUPS_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(VARS_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(USES_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(REGEXP_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(CASES_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(DEFAULT_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(CASEARRAY_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(SOURCENAME_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(TYPE_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(SPECIAL_PROP_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(LABEL_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(FINALLY_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(LOCALCOUNT_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(TARGETBLOCK_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(VARIABLE_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(LASTUSE_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(ISNUMBER_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(DIRECTCALL_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(SPECIALCALL_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(DEBUGSOURCE_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(JSDOC_INFO_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(VAR_ARGS_NAME);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(SKIP_INDEXES_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(INCRDECR_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(MEMBER_TYPE_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(NAME_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(PARENTHESIZED_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(QUOTED_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(OPT_ARG_NAME);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(SYNTHETIC_BLOCK_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(EMPTY_BLOCK);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(ORIGINALNAME_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(BRACELESS_TYPE);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(SIDE_EFFECT_FLAGS);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(IS_CONSTANT_NAME);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(IS_OPTIONAL_PARAM);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(IS_VAR_ARGS_PARAM);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(IS_NAMESPACE);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(IS_DISPATCHER);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(DIRECTIVES);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(DIRECT_EVAL);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(FREE_CALL);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(LAST_PROP);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(BOTH);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(LEFT);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(RIGHT);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(NON_SPECIALCALL);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(SPECIALCALL_EVAL);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(SPECIALCALL_WITH);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(DECR_FLAG);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(POST_FLAG);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(PROPERTY_FLAG);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(ATTRIBUTE_FLAG);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(DESCENDANTS_FLAG);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(this.type);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(this.next);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(this.first);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(this.last);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(this.propListHead);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(COLUMN_BITS);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(MAX_COLUMN_NUMBER);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(COLUMN_MASK);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(this.sourcePosition);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(this.jsType);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(this.parent);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(FLAG_GLOBAL_STATE_UNMODIFIED);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(FLAG_THIS_UNMODIFIED);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(FLAG_ARGUMENTS_UNMODIFIED);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(FLAG_NO_THROWS);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(FLAG_LOCAL_RESULTS);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(SIDE_EFFECTS_FLAGS_MASK);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(SIDE_EFFECTS_ALL);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(NO_SIDE_EFFECTS);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(true);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree(false);
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getType().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + hasChildren().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getFirstChild().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getLastChild().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getNext().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getLastSibling().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getSortedPropTypes().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getLineno().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getCharno().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getDouble().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getString().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + toString().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + toStringTree().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + toStringTreeImpl().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + children().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + siblings().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getParent().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getAncestors().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + hasOneChild().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + hasMoreThanOneChild().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getChildCount().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + hasSideEffects().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getQualifiedName().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + isQualifiedName().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + isUnscopedQualifiedName().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + detachFromParent().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + removeFirstChild().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + removeChildren().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + cloneNode().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + cloneTree().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getJSType().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getJsDocBuilderForNode().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getJSDocInfo().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + isVarArgs().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + isOptionalArg().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + isSyntheticBlock().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getDirectives().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + wasEmptyNode().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + getSideEffectFlags().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + isOnlyModifiesThisCall().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + isNoSideEffectsCall().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + isLocalResultCall().toStringTree();
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + isQuotedString().toStringTree();
02:51:04.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:05.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:05.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:06.742 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:06.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:07.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:07.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:08.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:08.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:09.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:09.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:10.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:10.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:11.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:11.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:12.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:12.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:13.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:13.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:14.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:14.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:15.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:15.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:16.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:16.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:16.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:16.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:17.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:17.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:18.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:18.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:19.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:19.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:20.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:20.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:21.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:21.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:22.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:22.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:23.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:23.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:24.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:24.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:25.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:25.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:26.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:26.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:27.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:27.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:28.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:28.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:29.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:29.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:30.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:30.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:30.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:30.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:31.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:31.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:32.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:32.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:33.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:33.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:34.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:34.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:35.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:35.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:36.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:36.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:37.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:37.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:38.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:38.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:39.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:39.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:40.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:40.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:41.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:41.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:42.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:42.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:42.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:42.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:43.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:43.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:44.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:44.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:45.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:45.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:46.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:46.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:47.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:47.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:48.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:48.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:49.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:49.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:50.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:50.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:51.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:51.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:52.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:52.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:52.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:52.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:53.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:53.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:54.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:54.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:55.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:55.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:56.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:56.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:57.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:57.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:58.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:58.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:51:59.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:51:59.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:00.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:00.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:01.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:01.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:02.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:02.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:03.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:03.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:03.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:03.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:04.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:04.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:05.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:05.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:06.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:06.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:07.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:07.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:08.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:08.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:09.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:09.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:10.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:10.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:11.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:11.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:12.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:12.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:13.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:13.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:14.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:14.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:15.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:15.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:16.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:16.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:16.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:16.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:17.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:17.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:18.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:18.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:19.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:19.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:20.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:20.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:21.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:21.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:22.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:22.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:23.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:23.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:24.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:24.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:25.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:25.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:26.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:26.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:27.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:27.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:28.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:28.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:29.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:29.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:30.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:30.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:31.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:31.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:31.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:31.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:32.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:32.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:33.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:33.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:34.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:34.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:35.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:35.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:36.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:36.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:37.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:37.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:38.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:38.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:39.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:39.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:40.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:40.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:41.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:41.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:42.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:42.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:42.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:42.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:43.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:43.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:44.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:44.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:45.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:45.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:46.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:46.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:47.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:47.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:48.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:48.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:49.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:49.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:50.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:50.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:51.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:51.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:52.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:52.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:53.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:53.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:54.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:54.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:55.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:55.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:56.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:56.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:57.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:57.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:57.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:57.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:58.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:58.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:59.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:52:59.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:00.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:00.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:01.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:01.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:02.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:02.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:03.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:03.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:04.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:04.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:05.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:05.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:06.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:06.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:07.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:07.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:08.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:08.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:09.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:09.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:10.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:10.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:10.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:10.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:11.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:11.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:12.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:12.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:13.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:13.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:14.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:14.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:15.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:15.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:16.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:16.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:17.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:17.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:18.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:18.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:19.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:19.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:20.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:20.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:21.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:21.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:22.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:22.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:26.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:26.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:35.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:35.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:43.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:43.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:44.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:44.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:45.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:45.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:46.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:46.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:47.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:47.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:47.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:47.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:48.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:48.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:49.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:49.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:50.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:50.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:51.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:51.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:52.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:52.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:53.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:53.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:54.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:54.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:55.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:55.595 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:56.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:56.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:57.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:57.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:58.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:58.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:53:59.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:53:59.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:00.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:00.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:01.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:01.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:01.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:01.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:02.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:02.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:03.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:03.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:04.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:04.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:05.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:05.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:06.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:06.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:07.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:07.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:08.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:08.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:09.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:09.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:10.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:10.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:11.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:11.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:11.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:11.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:12.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:12.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:13.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:13.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:14.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:14.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:15.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:15.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:16.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:16.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:17.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:17.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:18.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:18.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:19.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:19.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:20.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:20.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:21.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:21.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:22.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:22.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:23.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:23.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:24.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:24.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:24.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:24.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:25.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:25.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:26.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:26.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:27.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:27.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:28.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:28.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:29.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:29.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:30.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:30.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:31.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:31.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:32.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:32.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:33.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:33.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:33.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:33.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:34.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:34.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:35.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:35.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:37.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:37.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:37.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:37.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:38.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:38.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:39.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:39.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:40.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:40.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:41.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:41.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:42.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:42.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:43.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:43.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:44.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:44.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:45.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:45.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:46.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:46.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:47.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:47.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:47.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:47.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:48.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:48.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:49.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:49.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:50.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:50.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:51.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:51.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:52.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:52.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:53.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:53.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:55.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:55.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:56.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:56.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:56.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:56.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:57.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:57.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:58.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:58.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:54:59.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:54:59.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:00.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:00.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:01.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:01.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:02.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:02.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:03.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:03.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:04.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:04.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:05.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:05.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:06.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:06.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:07.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:07.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:08.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:08.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:09.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:09.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:09.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:09.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:10.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:10.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:11.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:11.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:12.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:12.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:13.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:13.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:14.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:14.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:15.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:15.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:16.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:16.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:17.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:17.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:18.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:18.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:19.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:19.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:20.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:20.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:21.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:21.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:22.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:22.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:23.035 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:23.035 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:24.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:24.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:24.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:24.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:25.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:25.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:26.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:26.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:27.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:27.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:28.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:28.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:29.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:29.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:30.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:30.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:31.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:31.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:32.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:32.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:33.252 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:33.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:34.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:34.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:35.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:35.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:36.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:36.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:37.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:37.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:38.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:38.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:39.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:39.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:40.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:40.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:41.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:41.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:41.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:41.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:42.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:42.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:43.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:43.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:44.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:44.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:45.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:45.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:46.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:46.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:47.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:47.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:48.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:48.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:49.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:49.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:50.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:50.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:51.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:51.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:52.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:52.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:53.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:53.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:53.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:53.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:54.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:54.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:55.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:55.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:56.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:56.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:57.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:57.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:58.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:58.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:55:59.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:55:59.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:00.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:00.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:01.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:01.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:02.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:02.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:03.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:03.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:04.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:04.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:04.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:04.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:05.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:05.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:06.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:06.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:07.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:07.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:08.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:08.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:09.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:09.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:10.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:10.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:11.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:11.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:12.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:12.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:13.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:13.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:14.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:14.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:15.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:15.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:16.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:16.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:17.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:17.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:18.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:18.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:18.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:18.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:19.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:19.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:20.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:20.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:21.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:21.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:22.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:22.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:23.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:23.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:24.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:24.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:25.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:25.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:26.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:26.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:27.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:27.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:28.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:28.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:29.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:29.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:30.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:30.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:31.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:31.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:32.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:32.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:33.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:33.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:34.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:34.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:35.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:35.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:36.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:36.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:37.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:37.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:38.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:38.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:39.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:39.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:40.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:40.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:41.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:41.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:42.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:42.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:42.945 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:42.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:43.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:43.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:44.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:44.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:45.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:45.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:46.666 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:46.666 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:47.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:47.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:48.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:48.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:49.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:49.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:50.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:50.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:51.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:51.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:52.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:52.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:53.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:53.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:54.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:54.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:54.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:54.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:55.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:55.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:56.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:56.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:57.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:57.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:58.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:58.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:56:59.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:56:59.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:00.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:00.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:01.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:01.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:02.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:02.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:03.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:03.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:04.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:04.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:05.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:05.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:06.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:06.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:07.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:07.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:08.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:08.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:09.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:09.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:09.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:09.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:10.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:10.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:11.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:11.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:12.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:12.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:13.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:13.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:14.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:14.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:15.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:15.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:16.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:16.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:17.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:17.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:18.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:18.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:19.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:19.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:20.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:20.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:21.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:21.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:22.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:22.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:23.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:23.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:23.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:23.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:24.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:24.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:25.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:25.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:26.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:26.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:27.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:27.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:28.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:28.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:29.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:29.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:30.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:30.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:31.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:31.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:32.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:32.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:33.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:33.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:34.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:34.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:35.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:35.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:36.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:36.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:37.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:37.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:37.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:37.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:38.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:38.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:39.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:39.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:40.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:40.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:41.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:41.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:42.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:42.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:43.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:43.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:44.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:44.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:45.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:45.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:46.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:46.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:47.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:47.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:47.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:47.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:48.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:48.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:49.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:49.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:50.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:50.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:51.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:51.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:52.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:52.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:53.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:53.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:54.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:54.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:55.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:55.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:56.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:56.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:57.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:57.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:58.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:58.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:57:59.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:57:59.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:00.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:00.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:00.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:00.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:01.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:01.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:02.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:02.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:03.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:03.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:04.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:04.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:05.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:05.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:06.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:06.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:07.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:07.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:08.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:08.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:09.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:09.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:10.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:10.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:11.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:11.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:12.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:12.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:13.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:13.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:14.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:14.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:15.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:15.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:15.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:15.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:16.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:16.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:17.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:17.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:18.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:18.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:19.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:19.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:20.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:20.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:21.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:21.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:22.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:22.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:23.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:23.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:24.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:24.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:25.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:25.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:26.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:26.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:26.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:26.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:27.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:27.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:28.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:28.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:29.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:29.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:30.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:30.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:31.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:31.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:32.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:32.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:33.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:33.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:34.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:34.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:35.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:35.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:36.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:36.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:37.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:37.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:38.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:38.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:39.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:39.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:40.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:40.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:41.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:41.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:41.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:41.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:42.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:42.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:43.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:43.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:44.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:44.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:45.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:45.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:46.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:46.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:47.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:47.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:48.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:48.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:49.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:49.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:50.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:50.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:51.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:51.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:52.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:52.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:53.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:53.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:54.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:54.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:54.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:54.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:55.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:55.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:56.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:56.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:57.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:57.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:58.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:58.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:58:59.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:58:59.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:00.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:00.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:01.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:01.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:02.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:02.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:03.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:03.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:04.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:04.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:05.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:05.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:05.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:05.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:06.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:06.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:07.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:07.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:08.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:08.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:09.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:09.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:10.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:10.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:11.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:11.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:12.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:12.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:13.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:13.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:14.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:14.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:15.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:15.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:16.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:16.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:17.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:17.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:18.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:18.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:19.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:19.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:19.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:19.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:20.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:20.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:21.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:21.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:22.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:22.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:23.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:23.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:24.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:24.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:25.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:25.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:26.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:26.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:27.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:27.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:28.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:28.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:29.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:29.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:30.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:30.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:31.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:31.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:32.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:32.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:32.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:32.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:33.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:33.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:34.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
return true;
02:59:34.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:35.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(c, n.getLastChild(), gen, kill, true);
computeGenKill(n, n.getLastChild(), gen, kill, true);
computeGenKill(conditional, n.getLastChild(), gen, kill, true);
computeGenKill(ARGUMENT_ARRAY_ALIAS, n.getLastChild(), gen, kill, true);
computeGenKill(this.jsScope, n.getLastChild(), gen, kill, true);
computeGenKill(this.escaped, n.getLastChild(), gen, kill, true);
computeGenKill(n.getLastChild(), c, kill, true);
computeGenKill(n.getLastChild(), n, kill, true);
computeGenKill(n.getLastChild(), conditional, kill, true);
computeGenKill(n.getLastChild(), ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getLastChild(), this.jsScope, kill, true);
computeGenKill(n.getLastChild(), this.escaped, kill, true);
computeGenKill(n.getLastChild(),  kill, true);
computeGenKill(n.getLastChild(), c, gen, kill, true);
computeGenKill(n.getLastChild(), n, gen, kill, true);
computeGenKill(n.getLastChild(), conditional, gen, kill, true);
computeGenKill(n.getLastChild(), ARGUMENT_ARRAY_ALIAS, gen, kill, true);
computeGenKill(n.getLastChild(), this.jsScope, gen, kill, true);
computeGenKill(n.getLastChild(), this.escaped, gen, kill, true);
computeGenKill(n.getLastChild(), gen, c, true);
computeGenKill(n.getLastChild(), gen, n, true);
computeGenKill(n.getLastChild(), gen, conditional, true);
computeGenKill(n.getLastChild(), gen, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getLastChild(), gen, this.jsScope, true);
computeGenKill(n.getLastChild(), gen, this.escaped, true);
computeGenKill(n.getLastChild(), gen,  true);
computeGenKill(n.getLastChild(), gen, c, kill, true);
computeGenKill(n.getLastChild(), gen, n, kill, true);
computeGenKill(n.getLastChild(), gen, conditional, kill, true);
computeGenKill(n.getLastChild(), gen, ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getLastChild(), gen, this.jsScope, kill, true);
computeGenKill(n.getLastChild(), gen, this.escaped, kill, true);
computeGenKill(n.getLastChild(), gen, kill, c, true);
computeGenKill(n.getLastChild(), gen, kill, n, true);
computeGenKill(n.getLastChild(), gen, kill, conditional, true);
computeGenKill(n.getLastChild(), gen, kill, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getLastChild(), gen, kill, this.jsScope, true);
computeGenKill(n.getLastChild(), gen, kill, this.escaped, true);
computeGenKill(n.getLastChild(), gen, kill, true, c);
computeGenKill(n.getLastChild(), gen, kill, true, n);
computeGenKill(n.getLastChild(), gen, kill, true, conditional);
computeGenKill(n.getLastChild(), gen, kill, true, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getLastChild(), gen, kill, true, this.jsScope);
computeGenKill(n.getLastChild(), gen, kill, true, this.escaped);
computeGenKill(true, n.getLastChild(), gen, kill, true);
computeGenKill(false, n.getLastChild(), gen, kill, true);
computeGenKill(n.getLastChild(), true, gen, kill, true);
computeGenKill(n.getLastChild(), false, gen, kill, true);
computeGenKill(n.getLastChild(), gen, true, kill, true);
computeGenKill(n.getLastChild(), gen, false, kill, true);
computeGenKill(n.getLastChild(), gen, kill, false);
computeGenKill(n.getLastChild(), gen, kill);
computeGenKill(n.getLastChild(), gen, kill, true, true);
computeGenKill(n.getLastChild(), gen, kill, false, true);
computeGenKill(n.getLastChild(), gen, kill, true, true);
computeGenKill(n.getLastChild(), gen, kill, true, false);
getEscapedLocals();
isForward();
createEntryLattice();
createInitialEstimateLattice();
02:59:35.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:36.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:36.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:37.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:37.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:37.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:37.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:38.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:38.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:39.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:39.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:40.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:40.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:40.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:40.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:41.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:41.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:42.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:42.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:43.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:43.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:44.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:44.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:44.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:44.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:45.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:45.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:46.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:46.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:47.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:47.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:47.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:47.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:48.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:48.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:49.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:49.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:50.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:50.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:50.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:50.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:51.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:51.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:52.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:52.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:53.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:53.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:53.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:53.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:54.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:54.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:55.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:55.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:56.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:56.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:56.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:56.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:57.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:57.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:58.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:58.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:59:59.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
02:59:59.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:00.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:00.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:00.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:00.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:01.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:01.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:02.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:02.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:03.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:03.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:03.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:03.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:04.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:04.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:05.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:05.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:06.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:06.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:06.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:06.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:07.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:07.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:08.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:08.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:09.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:09.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:09.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:09.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:10.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:10.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:11.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:11.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:12.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:12.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:12.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:12.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:13.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:13.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:14.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:14.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:15.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:15.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:15.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:15.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:16.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:16.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:17.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:17.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:18.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:18.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:18.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:18.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:19.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:19.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:20.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:20.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:21.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(c, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(n, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(conditional, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(ARGUMENT_ARRAY_ALIAS, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(this.jsScope, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(this.escaped, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), c, kill, true);
computeGenKill(n.getFirstChild().getNext(), n, kill, true);
computeGenKill(n.getFirstChild().getNext(), conditional, kill, true);
computeGenKill(n.getFirstChild().getNext(), ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getFirstChild().getNext(), this.jsScope, kill, true);
computeGenKill(n.getFirstChild().getNext(), this.escaped, kill, true);
computeGenKill(n.getFirstChild().getNext(),  kill, true);
computeGenKill(n.getFirstChild().getNext(), c, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), n, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), conditional, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), ARGUMENT_ARRAY_ALIAS, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), this.jsScope, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), this.escaped, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, c, true);
computeGenKill(n.getFirstChild().getNext(), gen, n, true);
computeGenKill(n.getFirstChild().getNext(), gen, conditional, true);
computeGenKill(n.getFirstChild().getNext(), gen, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getFirstChild().getNext(), gen, this.jsScope, true);
computeGenKill(n.getFirstChild().getNext(), gen, this.escaped, true);
computeGenKill(n.getFirstChild().getNext(), gen,  true);
computeGenKill(n.getFirstChild().getNext(), gen, c, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, n, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, conditional, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, this.jsScope, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, this.escaped, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, c, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, n, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, conditional, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, this.jsScope, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, this.escaped, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, c);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, n);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, conditional);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, this.jsScope);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, this.escaped);
computeGenKill(true, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(false, n.getFirstChild().getNext(), gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), true, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), false, gen, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, true, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, false, kill, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, false);
computeGenKill(n.getFirstChild().getNext(), gen, kill);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, false, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, true);
computeGenKill(n.getFirstChild().getNext(), gen, kill, true, false);
getEscapedLocals();
isForward();
createEntryLattice();
createInitialEstimateLattice();
03:00:21.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:21.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:21.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:22.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:22.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:23.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:23.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:24.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:24.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:24.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:24.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:25.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:25.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:26.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:26.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:27.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:27.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:28.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:28.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:28.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:28.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:29.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:29.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:30.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:30.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:31.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:31.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:31.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:31.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:32.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:32.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:33.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:33.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:34.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:34.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:34.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:34.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:35.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:35.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:36.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:36.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:37.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:37.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:38.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:38.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:38.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:38.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:39.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:39.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:40.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:40.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:41.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:41.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:41.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:41.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:42.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:42.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:43.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:43.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:44.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:44.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:44.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:44.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:45.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:45.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:46.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:46.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:47.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:47.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:47.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:47.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:48.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:48.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:49.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:49.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:50.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:50.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:51.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:51.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:51.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:51.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:52.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:52.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:53.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:53.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:54.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:54.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:54.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:54.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:55.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:55.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:56.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:56.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:57.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:57.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:57.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:57.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:58.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:58.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:00:59.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:00:59.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:00.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:00.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:00.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:00.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:01.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:01.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:02.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:02.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:03.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:03.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:04.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:04.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:04.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:04.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:05.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:05.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:06.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:06.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:07.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(c, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n, n.getFirstChild(), gen, kill, conditional);
computeGenKill(ARGUMENT_ARRAY_ALIAS, n.getFirstChild(), gen, kill, conditional);
computeGenKill(this.jsScope, n.getFirstChild(), gen, kill, conditional);
computeGenKill(this.escaped, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n.getFirstChild(), c, kill, conditional);
computeGenKill(n.getFirstChild(), n, kill, conditional);
computeGenKill(n.getFirstChild(), ARGUMENT_ARRAY_ALIAS, kill, conditional);
computeGenKill(n.getFirstChild(), this.jsScope, kill, conditional);
computeGenKill(n.getFirstChild(), this.escaped, kill, conditional);
computeGenKill(n.getFirstChild(),  kill, conditional);
computeGenKill(n.getFirstChild(), c, gen, kill, conditional);
computeGenKill(n.getFirstChild(), n, gen, kill, conditional);
computeGenKill(n.getFirstChild(), ARGUMENT_ARRAY_ALIAS, gen, kill, conditional);
computeGenKill(n.getFirstChild(), this.jsScope, gen, kill, conditional);
computeGenKill(n.getFirstChild(), this.escaped, gen, kill, conditional);
computeGenKill(n.getFirstChild(), gen, c, conditional);
computeGenKill(n.getFirstChild(), gen, n, conditional);
computeGenKill(n.getFirstChild(), gen, ARGUMENT_ARRAY_ALIAS, conditional);
computeGenKill(n.getFirstChild(), gen, this.jsScope, conditional);
computeGenKill(n.getFirstChild(), gen, this.escaped, conditional);
computeGenKill(n.getFirstChild(), gen,  conditional);
computeGenKill(n.getFirstChild(), gen, c, kill, conditional);
computeGenKill(n.getFirstChild(), gen, n, kill, conditional);
computeGenKill(n.getFirstChild(), gen, ARGUMENT_ARRAY_ALIAS, kill, conditional);
computeGenKill(n.getFirstChild(), gen, this.jsScope, kill, conditional);
computeGenKill(n.getFirstChild(), gen, this.escaped, kill, conditional);
computeGenKill(n.getFirstChild(), gen, kill, c);
computeGenKill(n.getFirstChild(), gen, kill, n);
computeGenKill(n.getFirstChild(), gen, kill, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getFirstChild(), gen, kill, this.jsScope);
computeGenKill(n.getFirstChild(), gen, kill, this.escaped);
computeGenKill(n.getFirstChild(), gen, kill, );
computeGenKill(n.getFirstChild(), gen, kill, c, conditional);
computeGenKill(n.getFirstChild(), gen, kill, n, conditional);
computeGenKill(n.getFirstChild(), gen, kill, ARGUMENT_ARRAY_ALIAS, conditional);
computeGenKill(n.getFirstChild(), gen, kill, this.jsScope, conditional);
computeGenKill(n.getFirstChild(), gen, kill, this.escaped, conditional);
computeGenKill(n.getFirstChild(), gen, kill, conditional, c);
computeGenKill(n.getFirstChild(), gen, kill, conditional, n);
computeGenKill(n.getFirstChild(), gen, kill, conditional, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getFirstChild(), gen, kill, conditional, this.jsScope);
computeGenKill(n.getFirstChild(), gen, kill, conditional, this.escaped);
computeGenKill(true, n.getFirstChild(), gen, kill, conditional);
computeGenKill(false, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n.getFirstChild(), true, gen, kill, conditional);
computeGenKill(n.getFirstChild(), false, gen, kill, conditional);
computeGenKill(n.getFirstChild(), gen, true, kill, conditional);
computeGenKill(n.getFirstChild(), gen, false, kill, conditional);
computeGenKill(n.getFirstChild(), gen, kill, true, conditional);
computeGenKill(n.getFirstChild(), gen, kill, false, conditional);
computeGenKill(n.getFirstChild(), gen, kill, conditional, true);
computeGenKill(n.getFirstChild(), gen, kill, conditional, false);
getEscapedLocals();
isForward();
createEntryLattice();
createInitialEstimateLattice();
03:01:07.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:07.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:07.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:08.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:08.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:09.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:09.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:10.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:10.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:10.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:10.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:11.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:11.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:12.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:12.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:13.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:13.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:14.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:14.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:14.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:14.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:15.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:15.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:16.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:16.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:17.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:17.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:17.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:17.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:18.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:18.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:19.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:19.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:20.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:20.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:20.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:20.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:21.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:21.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:22.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:22.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:23.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:23.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:23.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:23.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:24.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:24.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:25.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:25.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:26.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:26.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:26.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:26.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:27.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:27.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:28.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:28.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:29.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:29.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:30.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:30.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:30.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:30.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:31.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:31.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:32.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:32.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:32.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:32.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:33.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:33.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:34.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:34.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:35.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:35.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:35.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:35.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:36.642 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:36.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:37.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:37.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:38.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:38.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:38.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:38.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:39.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:39.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:40.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:40.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:41.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:41.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:41.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:41.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:42.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:42.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:43.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:43.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:44.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:44.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:45.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:45.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:45.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:45.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:46.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:46.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:47.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:47.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:48.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:48.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:48.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:48.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:49.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:49.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:50.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(c, n.getLastChild(), gen, kill, true);
computeGenKill(n, n.getLastChild(), gen, kill, true);
computeGenKill(conditional, n.getLastChild(), gen, kill, true);
computeGenKill(ARGUMENT_ARRAY_ALIAS, n.getLastChild(), gen, kill, true);
computeGenKill(this.jsScope, n.getLastChild(), gen, kill, true);
computeGenKill(this.escaped, n.getLastChild(), gen, kill, true);
computeGenKill(n.getLastChild(), c, kill, true);
computeGenKill(n.getLastChild(), n, kill, true);
computeGenKill(n.getLastChild(), conditional, kill, true);
computeGenKill(n.getLastChild(), ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getLastChild(), this.jsScope, kill, true);
computeGenKill(n.getLastChild(), this.escaped, kill, true);
computeGenKill(n.getLastChild(),  kill, true);
computeGenKill(n.getLastChild(), c, gen, kill, true);
computeGenKill(n.getLastChild(), n, gen, kill, true);
computeGenKill(n.getLastChild(), conditional, gen, kill, true);
computeGenKill(n.getLastChild(), ARGUMENT_ARRAY_ALIAS, gen, kill, true);
computeGenKill(n.getLastChild(), this.jsScope, gen, kill, true);
computeGenKill(n.getLastChild(), this.escaped, gen, kill, true);
computeGenKill(n.getLastChild(), gen, c, true);
computeGenKill(n.getLastChild(), gen, n, true);
computeGenKill(n.getLastChild(), gen, conditional, true);
computeGenKill(n.getLastChild(), gen, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getLastChild(), gen, this.jsScope, true);
computeGenKill(n.getLastChild(), gen, this.escaped, true);
computeGenKill(n.getLastChild(), gen,  true);
computeGenKill(n.getLastChild(), gen, c, kill, true);
computeGenKill(n.getLastChild(), gen, n, kill, true);
computeGenKill(n.getLastChild(), gen, conditional, kill, true);
computeGenKill(n.getLastChild(), gen, ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getLastChild(), gen, this.jsScope, kill, true);
computeGenKill(n.getLastChild(), gen, this.escaped, kill, true);
computeGenKill(n.getLastChild(), gen, kill, c, true);
computeGenKill(n.getLastChild(), gen, kill, n, true);
computeGenKill(n.getLastChild(), gen, kill, conditional, true);
computeGenKill(n.getLastChild(), gen, kill, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getLastChild(), gen, kill, this.jsScope, true);
computeGenKill(n.getLastChild(), gen, kill, this.escaped, true);
computeGenKill(n.getLastChild(), gen, kill, true, c);
computeGenKill(n.getLastChild(), gen, kill, true, n);
computeGenKill(n.getLastChild(), gen, kill, true, conditional);
computeGenKill(n.getLastChild(), gen, kill, true, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getLastChild(), gen, kill, true, this.jsScope);
computeGenKill(n.getLastChild(), gen, kill, true, this.escaped);
computeGenKill(true, n.getLastChild(), gen, kill, true);
computeGenKill(false, n.getLastChild(), gen, kill, true);
computeGenKill(n.getLastChild(), true, gen, kill, true);
computeGenKill(n.getLastChild(), false, gen, kill, true);
computeGenKill(n.getLastChild(), gen, true, kill, true);
computeGenKill(n.getLastChild(), gen, false, kill, true);
computeGenKill(n.getLastChild(), gen, kill, false);
computeGenKill(n.getLastChild(), gen, kill);
computeGenKill(n.getLastChild(), gen, kill, true, true);
computeGenKill(n.getLastChild(), gen, kill, false, true);
computeGenKill(n.getLastChild(), gen, kill, true, true);
computeGenKill(n.getLastChild(), gen, kill, true, false);
getEscapedLocals();
isForward();
createEntryLattice();
createInitialEstimateLattice();
03:01:50.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:51.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:51.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:51.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:51.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:52.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:52.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:53.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:53.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:54.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:54.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:54.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:54.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:55.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:55.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:56.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:56.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:57.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:57.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:58.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:58.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:58.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:58.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:01:59.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:01:59.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:00.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:00.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:01.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:01.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:01.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:01.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:02.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:02.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:03.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:03.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:04.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:04.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:04.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:04.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:05.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:05.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:06.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:06.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:07.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:07.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:07.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:07.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:08.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:08.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:09.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:09.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:10.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:10.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:11.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:11.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:11.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:11.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:12.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:12.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:13.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:13.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:14.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:14.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:14.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:14.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:15.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:15.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:16.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:16.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:17.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:17.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:18.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:18.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:18.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:18.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:19.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:19.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:20.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:20.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:21.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:21.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:21.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:21.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:22.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:22.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:23.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:23.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:24.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:24.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:24.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:24.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:25.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:25.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:26.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:26.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:27.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:27.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:27.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:27.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:28.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:28.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:29.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:29.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:30.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:30.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:30.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:30.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:31.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:31.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:32.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:32.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:33.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:33.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:33.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:33.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:34.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:34.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:35.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:35.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:36.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
computeGenKill(c, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n, n.getFirstChild(), gen, kill, conditional);
computeGenKill(ARGUMENT_ARRAY_ALIAS, n.getFirstChild(), gen, kill, conditional);
computeGenKill(this.jsScope, n.getFirstChild(), gen, kill, conditional);
computeGenKill(this.escaped, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n.getFirstChild(), c, kill, conditional);
computeGenKill(n.getFirstChild(), n, kill, conditional);
computeGenKill(n.getFirstChild(), ARGUMENT_ARRAY_ALIAS, kill, conditional);
computeGenKill(n.getFirstChild(), this.jsScope, kill, conditional);
computeGenKill(n.getFirstChild(), this.escaped, kill, conditional);
computeGenKill(n.getFirstChild(),  kill, conditional);
computeGenKill(n.getFirstChild(), c, gen, kill, conditional);
computeGenKill(n.getFirstChild(), n, gen, kill, conditional);
computeGenKill(n.getFirstChild(), ARGUMENT_ARRAY_ALIAS, gen, kill, conditional);
computeGenKill(n.getFirstChild(), this.jsScope, gen, kill, conditional);
computeGenKill(n.getFirstChild(), this.escaped, gen, kill, conditional);
computeGenKill(n.getFirstChild(), gen, c, conditional);
computeGenKill(n.getFirstChild(), gen, n, conditional);
computeGenKill(n.getFirstChild(), gen, ARGUMENT_ARRAY_ALIAS, conditional);
computeGenKill(n.getFirstChild(), gen, this.jsScope, conditional);
computeGenKill(n.getFirstChild(), gen, this.escaped, conditional);
computeGenKill(n.getFirstChild(), gen,  conditional);
computeGenKill(n.getFirstChild(), gen, c, kill, conditional);
computeGenKill(n.getFirstChild(), gen, n, kill, conditional);
computeGenKill(n.getFirstChild(), gen, ARGUMENT_ARRAY_ALIAS, kill, conditional);
computeGenKill(n.getFirstChild(), gen, this.jsScope, kill, conditional);
computeGenKill(n.getFirstChild(), gen, this.escaped, kill, conditional);
computeGenKill(n.getFirstChild(), gen, kill, c);
computeGenKill(n.getFirstChild(), gen, kill, n);
computeGenKill(n.getFirstChild(), gen, kill, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getFirstChild(), gen, kill, this.jsScope);
computeGenKill(n.getFirstChild(), gen, kill, this.escaped);
computeGenKill(n.getFirstChild(), gen, kill, );
computeGenKill(n.getFirstChild(), gen, kill, c, conditional);
computeGenKill(n.getFirstChild(), gen, kill, n, conditional);
computeGenKill(n.getFirstChild(), gen, kill, ARGUMENT_ARRAY_ALIAS, conditional);
computeGenKill(n.getFirstChild(), gen, kill, this.jsScope, conditional);
computeGenKill(n.getFirstChild(), gen, kill, this.escaped, conditional);
computeGenKill(n.getFirstChild(), gen, kill, conditional, c);
computeGenKill(n.getFirstChild(), gen, kill, conditional, n);
computeGenKill(n.getFirstChild(), gen, kill, conditional, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getFirstChild(), gen, kill, conditional, this.jsScope);
computeGenKill(n.getFirstChild(), gen, kill, conditional, this.escaped);
computeGenKill(true, n.getFirstChild(), gen, kill, conditional);
computeGenKill(false, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n.getFirstChild(), true, gen, kill, conditional);
computeGenKill(n.getFirstChild(), false, gen, kill, conditional);
computeGenKill(n.getFirstChild(), gen, true, kill, conditional);
computeGenKill(n.getFirstChild(), gen, false, kill, conditional);
computeGenKill(n.getFirstChild(), gen, kill, true, conditional);
computeGenKill(n.getFirstChild(), gen, kill, false, conditional);
computeGenKill(n.getFirstChild(), gen, kill, conditional, true);
computeGenKill(n.getFirstChild(), gen, kill, conditional, false);
getEscapedLocals();
isForward();
createEntryLattice();
createInitialEstimateLattice();
03:02:36.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:37.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:37.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:37.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:37.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:38.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:38.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:39.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:39.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:40.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:40.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:40.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:40.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:41.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:41.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:42.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:42.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:43.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:43.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:43.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:43.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:44.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:44.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:45.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:45.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:46.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:46.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:46.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:46.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:47.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:47.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:48.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:48.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:49.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:49.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:49.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:49.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:50.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:50.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:51.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:51.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:52.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:52.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:52.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:52.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:53.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:53.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:54.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:54.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:55.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:55.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:55.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:55.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:56.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:56.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:57.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:57.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:58.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:58.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:59.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:59.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:02:59.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:02:59.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:00.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:00.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:01.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:01.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:01.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:01.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:02.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:02.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:03.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:03.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:04.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:04.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:04.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:04.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:05.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:05.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:06.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:06.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:07.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:07.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:07.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:07.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:08.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:08.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:09.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:09.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:10.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:10.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:10.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:10.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:11.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:11.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:12.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:12.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:13.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:13.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:13.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:13.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:14.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:14.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:15.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:15.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:16.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:16.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:16.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:16.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:17.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:17.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:18.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:18.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:19.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (NodeUtil.isLhs(variable, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(this.compiler, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(this.liveness, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(matchRemovableAssigns, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs( n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(variable, n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(this.compiler, n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(this.liveness, n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(matchRemovableAssigns, n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, variable, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, this.compiler, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, this.liveness, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, matchRemovableAssigns, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, n.getParent(), variable)) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, n.getParent(), this.compiler)) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, n.getParent(), this.liveness)) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, n.getParent(), matchRemovableAssigns)) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(true, n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(false, n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, true, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, false, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, n.getParent(), true)) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLhs(n, n.getParent(), false)) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.newCallNode(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.getNthSibling(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.getArgumentForFunction(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.getArgumentForCallOrNew(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.getNameReferenceCount(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.getObjectLitKeyTypeFromValueType(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.removeChild(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.copyNameAnnotations(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isLiteralValue(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isValidDefineValue(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.mayEffectMutableState(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.mayHaveSideEffects(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.constructorCallHasSideEffects(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.functionCallHasSideEffects(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.nodeTypeMayHaveSideEffects(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.canBeSideEffected(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.valueCheck(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.mayBeString(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isControlStructureCodeBlock(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isTryFinallyNode(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isObjectCallMethod(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isObjectLitKey(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.containsType(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.isNameReferenced(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
if (NodeUtil.evaluatesToLocalValue(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
03:03:19.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:20.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:20.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:20.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:20.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:21.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:21.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:22.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:22.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:23.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:23.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:23.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:23.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:24.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:24.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:25.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:25.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:26.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:26.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:27.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:27.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:27.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:27.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:28.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:28.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:29.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:29.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:30.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:30.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:30.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:30.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:31.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:31.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:32.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:32.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:33.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:33.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:34.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:34.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:34.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:34.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:35.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:35.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:36.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:36.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:37.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:37.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:37.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:37.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:38.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:38.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:39.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:39.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:40.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:40.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:41.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:41.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:41.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:41.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:42.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:42.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:43.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:43.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:44.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:44.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:45.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:45.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:45.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:45.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:46.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:46.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:47.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:47.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:48.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:48.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:48.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:48.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:49.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:49.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:50.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:50.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:51.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:51.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:52.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:52.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:52.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:52.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:53.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:53.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:54.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:54.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:55.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:55.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:55.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:55.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:56.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
return false;
03:03:56.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:57.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
Node n = n.getNext();
03:03:57.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:58.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
Preconditions.checkState(n, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(variable, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(this.compiler, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(this.liveness, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(matchRemovableAssigns, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, n);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, variable);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, this.compiler);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, this.liveness);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, matchRemovableAssigns);
Preconditions.checkState(true, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(false, n.getParent().getType() == Token.ASSIGN);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, true);
Preconditions.checkState(n.getParent().getType() == Token.ASSIGN, false);
03:03:58.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:59.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:59.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:03:59.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:03:59.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:00.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:00.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:01.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:01.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:02.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:02.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:02.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:02.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:03.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:03.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:04.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:04.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:05.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:05.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:05.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:05.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:06.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:06.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:07.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:07.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:08.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:08.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:09.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
switch (n.getType(variable)) {
      // Conditionals
      case Token.OR:
      case Token.AND:
        // With a AND/OR the first branch always runs, but the second is
        // may not.
      case Token.HOOK:
        return checkHookBranchReadBeforeKill(
            n.getFirstChild().getNext(), n.getLastChild(), variable);

      default:
        // Expressions are evaluated left-right, depth first.
        for (Node child = n.getFirstChild();
            child != null; child = child.getNext()) {
          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
          VariableLiveness state = isVariableReadBeforeKill(child, variable);
          if (state != VariableLiveness.MAYBE_LIVE) {
            return state;
          }
        }
      }
    }
switch (n.getType(this.compiler)) {
      // Conditionals
      case Token.OR:
      case Token.AND:
        // With a AND/OR the first branch always runs, but the second is
        // may not.
      case Token.HOOK:
        return checkHookBranchReadBeforeKill(
            n.getFirstChild().getNext(), n.getLastChild(), variable);

      default:
        // Expressions are evaluated left-right, depth first.
        for (Node child = n.getFirstChild();
            child != null; child = child.getNext()) {
          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
          VariableLiveness state = isVariableReadBeforeKill(child, variable);
          if (state != VariableLiveness.MAYBE_LIVE) {
            return state;
          }
        }
      }
    }
switch (n.getType(this.liveness)) {
      // Conditionals
      case Token.OR:
      case Token.AND:
        // With a AND/OR the first branch always runs, but the second is
        // may not.
      case Token.HOOK:
        return checkHookBranchReadBeforeKill(
            n.getFirstChild().getNext(), n.getLastChild(), variable);

      default:
        // Expressions are evaluated left-right, depth first.
        for (Node child = n.getFirstChild();
            child != null; child = child.getNext()) {
          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
          VariableLiveness state = isVariableReadBeforeKill(child, variable);
          if (state != VariableLiveness.MAYBE_LIVE) {
            return state;
          }
        }
      }
    }
switch (n.getType(matchRemovableAssigns)) {
      // Conditionals
      case Token.OR:
      case Token.AND:
        // With a AND/OR the first branch always runs, but the second is
        // may not.
      case Token.HOOK:
        return checkHookBranchReadBeforeKill(
            n.getFirstChild().getNext(), n.getLastChild(), variable);

      default:
        // Expressions are evaluated left-right, depth first.
        for (Node child = n.getFirstChild();
            child != null; child = child.getNext()) {
          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
          VariableLiveness state = isVariableReadBeforeKill(child, variable);
          if (state != VariableLiveness.MAYBE_LIVE) {
            return state;
          }
        }
      }
    }
switch (n.getType(true)) {
      // Conditionals
      case Token.OR:
      case Token.AND:
        // With a AND/OR the first branch always runs, but the second is
        // may not.
      case Token.HOOK:
        return checkHookBranchReadBeforeKill(
            n.getFirstChild().getNext(), n.getLastChild(), variable);

      default:
        // Expressions are evaluated left-right, depth first.
        for (Node child = n.getFirstChild();
            child != null; child = child.getNext()) {
          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
          VariableLiveness state = isVariableReadBeforeKill(child, variable);
          if (state != VariableLiveness.MAYBE_LIVE) {
            return state;
          }
        }
      }
    }
switch (n.getType(false)) {
      // Conditionals
      case Token.OR:
      case Token.AND:
        // With a AND/OR the first branch always runs, but the second is
        // may not.
      case Token.HOOK:
        return checkHookBranchReadBeforeKill(
            n.getFirstChild().getNext(), n.getLastChild(), variable);

      default:
        // Expressions are evaluated left-right, depth first.
        for (Node child = n.getFirstChild();
            child != null; child = child.getNext()) {
          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
          VariableLiveness state = isVariableReadBeforeKill(child, variable);
          if (state != VariableLiveness.MAYBE_LIVE) {
            return state;
          }
        }
      }
    }
03:04:09.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:09.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:09.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:10.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:10.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:11.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:11.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:12.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:12.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:12.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:12.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:13.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (NodeUtil.isName(variable) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(this.compiler) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(this.liveness) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(matchRemovableAssigns) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName() && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(variable, n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(this.compiler, n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(this.liveness, n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(matchRemovableAssigns, n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n, variable) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n, this.compiler) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n, this.liveness) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n, matchRemovableAssigns) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(true, n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(false, n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n, true) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n, false) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getNumberValue(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getVarsDeclaredInBranch(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getInfoForNameNode(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getFunctionInfo(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.newExpr(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getAssignedValue(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getLoopCodeBlock(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getConditionExpression(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getFunctionBody(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getAddingRoot(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getRootOfQualifiedName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getPrototypeClassName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.newUndefinedNode(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getCatchBlock(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getFnParameters(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getOpFromAssignmentOp(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getStringValue(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getArrayElementStringValue(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.arrayToString(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getFunctionName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getNearestFunctionName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getObjectLitKeyName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getPrototypePropertyName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getSourceName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getExpressionBooleanValue(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.getBooleanValue(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.maybeAddFinally(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.redeclareVarsInsideBranch(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isImmutableValue(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isEmptyBlock(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isSimpleOperator(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.mayEffectMutableState(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.mayHaveSideEffects(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.constructorCallHasSideEffects(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.functionCallHasSideEffects(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.callHasLocalResult(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.newHasLocalResult(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.nodeTypeMayHaveSideEffects(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.canBeSideEffected(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isNumericResult(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isNumericResultHelper(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isBooleanResult(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isBooleanResultHelper(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isUndefined(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isNull(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isNullOrUndefined(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.mayBeString(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.mayBeStringHelper(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isAssignmentOp(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isExpressionNode(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.containsFunction(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.referencesThis(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isGet(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isGetProp(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isNew(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isVar(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isVarDeclaration(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isString(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isExprAssign(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isAssign(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isExprCall(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isForIn(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isLoopStructure(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isWithinLoop(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isControlStructure(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isStatementBlock(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isStatement(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isStatementParent(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isSwitchCase(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isReferenceName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isLabelName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isTryCatchNodeContainer(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.tryMergeBlock(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isCall(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isCallOrNew(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isFunction(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isThis(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isArrayLiteral(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.containsCall(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isFunctionDeclaration(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isHoistedFunctionDeclaration(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isFunctionExpression(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isEmptyFunctionExpression(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isVarArgsFunction(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isFunctionObjectCall(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isFunctionObjectApply(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isFunctionObjectCallOrApply(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isSimpleFunctionObjectCall(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isGetOrSetKey(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isPrototypePropertyDeclaration(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isPrototypeProperty(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.hasFinally(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.hasCatchHandler(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isConstantName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.evaluatesToLocalValue(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isToStringMethodCall(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) && variable.equals(n, n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) && variable.equals(this.compiler, n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) && variable.equals(this.liveness, n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) && variable.equals(matchRemovableAssigns, n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) && variable.equals(n.getString(), n)) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) && variable.equals(n.getString(), this.compiler)) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) && variable.equals(n.getString(), this.liveness)) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) && variable.equals(n.getString(), matchRemovableAssigns)) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) && variable.equals(true, n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) && variable.equals(false, n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) && variable.equals(n.getString(), true)) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
if (NodeUtil.isName(n) && variable.equals(n.getString(), false)) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        Preconditions.checkState(n.getParent().getType() == Token.ASSIGN);
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        Node rhs = n.getNext();
        VariableLiveness state = isVariableReadBeforeKill(rhs, variable);
        if (state == VariableLiveness.READ) {
          return state;
        }
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
03:04:13.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:14.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:14.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:15.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:15.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:16.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:16.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:16.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:16.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:17.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:17.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:18.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:18.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:19.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:19.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:19.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:19.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:20.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:20.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:21.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:21.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:22.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:22.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:23.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:23.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:23.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:23.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:24.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:24.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:25.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:25.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:26.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:26.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:26.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:26.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:27.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:27.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:28.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:28.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:29.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:29.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:30.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:30.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:30.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:30.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:31.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:31.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:32.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:32.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:33.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:33.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:34.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:34.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:35.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:35.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:35.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:35.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:36.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:36.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:37.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:37.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:38.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:38.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:39.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:39.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:39.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:39.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:40.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:40.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:41.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:41.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:42.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:42.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:43.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:43.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:44.004 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:44.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:44.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:44.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:45.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:45.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:46.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:46.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:47.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:47.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:48.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:48.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:48.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:48.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:49.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:49.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:50.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:50.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:51.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:51.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:51.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:51.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:52.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:52.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:53.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:53.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:54.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:54.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:55.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:55.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:55.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:55.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:56.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:56.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:57.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:57.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:58.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:58.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:58.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:58.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:04:59.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:04:59.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:00.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:00.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:01.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:01.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:01.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:01.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:02.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:02.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:03.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:03.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:04.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:04.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:04.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:04.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:05.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:05.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:06.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:06.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:07.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:07.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:07.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:07.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:08.742 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:08.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:09.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:09.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:10.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:10.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:11.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:11.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:11.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:11.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:12.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:12.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:13.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:13.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:14.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:14.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:14.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:14.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:15.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:15.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:16.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:16.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:17.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:17.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:17.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:17.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:18.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:18.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:19.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:19.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:20.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:20.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:20.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:20.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:21.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:21.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:22.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:22.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:23.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:23.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:24.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:24.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:24.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:24.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:25.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:25.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:26.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:26.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:27.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:27.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:28.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:28.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:28.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:28.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:29.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:29.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:30.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:30.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:31.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:31.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:31.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:31.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:32.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:32.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:33.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:33.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:34.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:34.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:34.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:34.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:35.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:35.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:36.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:36.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:37.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:37.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:38.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:38.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:38.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:38.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:39.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:39.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:40.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:40.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:41.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:41.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:41.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:41.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:42.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:42.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:43.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:43.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:44.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:44.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:45.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:45.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:45.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:45.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:46.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:46.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:47.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:47.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:48.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:48.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:48.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:48.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:49.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:49.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:50.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:50.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:51.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
if (!ControlFlowGraph.isEnteringNewCfgNode(state)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(n)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(exprRoot)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(variable)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(this.compiler)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(this.liveness)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(matchRemovableAssigns)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode()) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(state, sibling)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(n, sibling)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(exprRoot, sibling)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(variable, sibling)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(this.compiler, sibling)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(this.liveness, sibling)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(matchRemovableAssigns, sibling)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(sibling, state)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(sibling, n)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(sibling, exprRoot)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(sibling, variable)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(sibling, this.compiler)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(sibling, this.liveness)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(sibling, matchRemovableAssigns)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(true, sibling)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(false, sibling)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(sibling, true)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isEnteringNewCfgNode(sibling, false)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
if (!ControlFlowGraph.isImplicitReturn(sibling)) {
            state = isVariableReadBeforeKill(sibling, variable);

      // If we see a READ or KILL there is no need to continue.
      if (state == VariableLiveness.READ) {
        return true;
      } else if (state == VariableLiveness.KILL) {
        return false;
            }
          }
03:05:51.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:51.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:51.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:52.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:52.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:53.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:53.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:54.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:54.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:55.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:55.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:55.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:55.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:56.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:56.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:57.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:57.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:58.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:58.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:58.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:58.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:05:59.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:05:59.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:00.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:00.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:01.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:01.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:01.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:01.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:02.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:02.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:03.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:03.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:04.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:04.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:05.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:05.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:05.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:05.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:06.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:06.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:07.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:07.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:08.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:08.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:08.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:08.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:09.664 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:09.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:10.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:10.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:11.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:11.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:06:11.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-76 ---Fixer: fix fail because of failed compiling! 
03:06:11.977 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Finish off Fixing======
03:06:12.266 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-76/aggregatedSusInfo.profl
Failed to fix bug Closure-76
