Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-118
15:58:07.005 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 Failed Tests: 2
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/118.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/118.txt
16:04:02.318 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
16:04:02.427 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-118/generalSusInfo.profl
16:04:02.571 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-118/aggregatedSusInfo.profl
16:04:02.576 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Fixing Beginning======
16:04:02.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.UnionType ===173
16:04:03.356 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return true;
return false;
16:04:03.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:04.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:04:04.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:05.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:05.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.UnionType ===172
16:04:05.237 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (t.matchesObjectContext()) {
        return true;
      }
if (t.hasDisplayName()) {
        return true;
      }
if (t.isNoType()) {
        return true;
      }
if (t.isNoResolvedType()) {
        return true;
      }
if (t.isNoObjectType()) {
        return true;
      }
if (t.isEmptyType()) {
        return true;
      }
if (t.isNumberObjectType()) {
        return true;
      }
if (t.isNumberValueType()) {
        return true;
      }
if (t.isFunctionPrototypeType()) {
        return true;
      }
if (t.isStringObjectType()) {
        return true;
      }
if (t.isTheObjectType()) {
        return true;
      }
if (t.isStringValueType()) {
        return true;
      }
if (t.isString()) {
        return true;
      }
if (t.isNumber()) {
        return true;
      }
if (t.isArrayType()) {
        return true;
      }
if (t.isBooleanObjectType()) {
        return true;
      }
if (t.isBooleanValueType()) {
        return true;
      }
if (t.isRegexpType()) {
        return true;
      }
if (t.isDateType()) {
        return true;
      }
if (t.isNullType()) {
        return true;
      }
if (t.isVoidType()) {
        return true;
      }
if (t.isAllType()) {
        return true;
      }
if (t.isUnknownType()) {
        return true;
      }
if (t.isCheckedUnknownType()) {
        return true;
      }
if (t.isUnionType()) {
        return true;
      }
if (t.isStruct()) {
        return true;
      }
if (t.isDict()) {
        return true;
      }
if (t.isGlobalThisType()) {
        return true;
      }
if (t.isFunctionType()) {
        return true;
      }
if (t.isEnumElementType()) {
        return true;
      }
if (t.isEnumType()) {
        return true;
      }
if (t.isNamedType()) {
        return true;
      }
if (t.isRecordType()) {
        return true;
      }
if (t.isTemplatizedType()) {
        return true;
      }
if (t.isTemplateType()) {
        return true;
      }
if (t.hasAnyTemplateTypes()) {
        return true;
      }
if (t.hasAnyTemplateTypesInternal()) {
        return true;
      }
if (t.isObject()) {
        return true;
      }
if (t.isConstructor()) {
        return true;
      }
if (t.isNominalType()) {
        return true;
      }
if (t.isNominalConstructor()) {
        return true;
      }
if (t.isInstanceType()) {
        return true;
      }
if (t.isInterface()) {
        return true;
      }
if (t.isOrdinaryFunction()) {
        return true;
      }
if (t.matchesInt32Context()) {
        return true;
      }
if (t.matchesUint32Context()) {
        return true;
      }
if (t.matchesNumberContext()) {
        return true;
      }
if (t.matchesStringContext()) {
        return true;
      }
if (t.canBeCalled()) {
        return true;
      }
if (t.isNullable()) {
        return true;
      }
if (t.isResolved()) {
        return true;
      }
16:04:05.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:06.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:06.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:07.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:07.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:08.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:08.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:09.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:09.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:10.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:10.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:10.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:10.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:11.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:11.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:12.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:12.728 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:13.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:13.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:14.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:14.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:15.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:15.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:16.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:16.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:17.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:17.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:18.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:18.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:19.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:19.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:20.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:20.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:21.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:21.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:21.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:21.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:22.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:22.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:23.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:23.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:24.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:24.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:25.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:25.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:26.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:26.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:27.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:27.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:28.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:28.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:29.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:29.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:30.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:30.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:31.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:31.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:32.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:32.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:32.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:32.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:33.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:33.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:34.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:34.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:35.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:35.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:36.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:36.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:37.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:37.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:38.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:38.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:39.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:39.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:40.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:40.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:41.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:41.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:41.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:41.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:42.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:42.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:43.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:43.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:44.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:44.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:45.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:45.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:46.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:46.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:47.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:47.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:48.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:48.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:48.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:48.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:49.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:49.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:50.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (t.matchesObjectContext(this.alternates)) {
        return true;
      }
if (t.matchesObjectContext(this.hashcode)) {
        return true;
      }
16:04:50.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:51.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:51.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:52.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (t != null && t.matchesObjectContext()) {
        return true;
      }
if (t != null || t.matchesObjectContext()) {
        return true;
      }
16:04:52.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:53.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:53.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:54.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (t != null) {


}

16:04:54.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:54.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (t == null) {
    return true;
}

if (t == null) {
    return false;
}

if (t == null) {
    throw new IllegalArgumentException("Empty variable: " + t);
}

16:04:54.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:55.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:55.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:56.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:56.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:57.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:04:57.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:58.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:04:58.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.UnionType ===171
16:04:58.710 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (JSType t : alternates) {
      if (t.matchesObjectContext()) {
        return true;
      }
    }
if (alternates != null) {


}

16:04:58.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:04:59.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (alternates == null) {
    return true;
}

if (alternates == null) {
    return false;
}

if (alternates == null) {
    throw new IllegalArgumentException("Empty variable: " + alternates);
}

16:04:59.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:00.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:00.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:01.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:01.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:02.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
rebuildAlternates();
	for (JSType t : alternates) {
      if (t.matchesObjectContext()) {
        return true;
      }
    }
for (JSType t : alternates) {
      if (t.matchesObjectContext()) {
        return true;
      }
    }
	rebuildAlternates();
16:05:02.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:03.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:03.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:04.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

    return false;
	for (JSType t : alternates) {
      if (t.matchesObjectContext()) {
        return true;
      }
    }

MOVE-BUGGY-STATEMENT
16:05:04.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:04.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:05:04.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:05.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:05.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1459
16:05:06.009 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return res;
if (res != null) {


}

16:05:06.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:07.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (res == null) {
    return null;
}

if (res == null) {
    throw new IllegalArgumentException("Empty variable: " + res);
}

16:05:07.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:08.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:08.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:09.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
detachChildren();
	return res;
return res;
	detachChildren();
setQuotedString();
	return res;
return res;
	setQuotedString();
16:05:09.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:10.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:10.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:11.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:11.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:12.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:12.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:14.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:05:14.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:15.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:15.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1430
16:05:15.321 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
if (node2 != null) {


}

16:05:15.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:16.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (node2 == null) {
    return null;
}

if (node2 == null) {
    throw new IllegalArgumentException("Empty variable: " + node2);
}

16:05:16.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:17.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:17.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:19.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:05:19.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:20.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:20.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.JSTypeRegistry ===1421
16:05:20.351 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return true;
return false;
16:05:20.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:21.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:05:21.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:22.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:22.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.JSTypeRegistry ===1420
16:05:22.472 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
poType.setImplicitPrototype(newImplicitProto);
poType.setImplicitPrototype(true, newImplicitProto);
poType.setImplicitPrototype(false, newImplicitProto);
poType.setImplicitPrototype(newImplicitProto, true);
poType.setImplicitPrototype(newImplicitProto, false);
16:05:22.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:23.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:23.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:24.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:24.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:25.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:25.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:26.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
poType.setImplicitPrototype(type);
poType.setImplicitPrototype(OBJECT_INDEX_TEMPLATE);
poType.setImplicitPrototype(this.objectIndexTemplateKey);
poType.setImplicitPrototype(OBJECT_ELEMENT_TEMPLATE);
poType.setImplicitPrototype(this.objectElementTemplateKey);
poType.setImplicitPrototype(PROPERTY_CHECKING_UNION_SIZE);
poType.setImplicitPrototype(this.reporter);
poType.setImplicitPrototype(this.nativeTypes);
poType.setImplicitPrototype(this.namesToTypes);
poType.setImplicitPrototype(this.namespaces);
poType.setImplicitPrototype(this.nonNullableTypeNames);
poType.setImplicitPrototype(this.forwardDeclaredTypes);
poType.setImplicitPrototype(this.typesIndexedByProperty);
poType.setImplicitPrototype(this.eachRefTypeIndexedByProperty);
poType.setImplicitPrototype(this.greatestSubtypeByProperty);
poType.setImplicitPrototype(this.interfaceToImplementors);
poType.setImplicitPrototype(this.unresolvedNamedTypes);
poType.setImplicitPrototype(this.resolvedNamedTypes);
poType.setImplicitPrototype(this.lastGeneration);
poType.setImplicitPrototype(this.templateTypes);
poType.setImplicitPrototype(this.emptyTemplateTypeMap);
poType.setImplicitPrototype(this.tolerateUndefinedValues);
poType.setImplicitPrototype();
poType.setImplicitPrototype(type, newImplicitProto);
poType.setImplicitPrototype(OBJECT_INDEX_TEMPLATE, newImplicitProto);
poType.setImplicitPrototype(this.objectIndexTemplateKey, newImplicitProto);
poType.setImplicitPrototype(OBJECT_ELEMENT_TEMPLATE, newImplicitProto);
poType.setImplicitPrototype(this.objectElementTemplateKey, newImplicitProto);
poType.setImplicitPrototype(PROPERTY_CHECKING_UNION_SIZE, newImplicitProto);
poType.setImplicitPrototype(this.reporter, newImplicitProto);
poType.setImplicitPrototype(this.nativeTypes, newImplicitProto);
poType.setImplicitPrototype(this.namesToTypes, newImplicitProto);
poType.setImplicitPrototype(this.namespaces, newImplicitProto);
poType.setImplicitPrototype(this.nonNullableTypeNames, newImplicitProto);
poType.setImplicitPrototype(this.forwardDeclaredTypes, newImplicitProto);
poType.setImplicitPrototype(this.typesIndexedByProperty, newImplicitProto);
poType.setImplicitPrototype(this.eachRefTypeIndexedByProperty, newImplicitProto);
poType.setImplicitPrototype(this.greatestSubtypeByProperty, newImplicitProto);
poType.setImplicitPrototype(this.interfaceToImplementors, newImplicitProto);
poType.setImplicitPrototype(this.unresolvedNamedTypes, newImplicitProto);
poType.setImplicitPrototype(this.resolvedNamedTypes, newImplicitProto);
poType.setImplicitPrototype(this.lastGeneration, newImplicitProto);
poType.setImplicitPrototype(this.templateTypes, newImplicitProto);
poType.setImplicitPrototype(this.emptyTemplateTypeMap, newImplicitProto);
poType.setImplicitPrototype(this.tolerateUndefinedValues, newImplicitProto);
poType.setImplicitPrototype(newImplicitProto, type);
poType.setImplicitPrototype(newImplicitProto, OBJECT_INDEX_TEMPLATE);
poType.setImplicitPrototype(newImplicitProto, this.objectIndexTemplateKey);
poType.setImplicitPrototype(newImplicitProto, OBJECT_ELEMENT_TEMPLATE);
poType.setImplicitPrototype(newImplicitProto, this.objectElementTemplateKey);
poType.setImplicitPrototype(newImplicitProto, PROPERTY_CHECKING_UNION_SIZE);
poType.setImplicitPrototype(newImplicitProto, this.reporter);
poType.setImplicitPrototype(newImplicitProto, this.nativeTypes);
poType.setImplicitPrototype(newImplicitProto, this.namesToTypes);
poType.setImplicitPrototype(newImplicitProto, this.namespaces);
poType.setImplicitPrototype(newImplicitProto, this.nonNullableTypeNames);
poType.setImplicitPrototype(newImplicitProto, this.forwardDeclaredTypes);
poType.setImplicitPrototype(newImplicitProto, this.typesIndexedByProperty);
poType.setImplicitPrototype(newImplicitProto, this.eachRefTypeIndexedByProperty);
poType.setImplicitPrototype(newImplicitProto, this.greatestSubtypeByProperty);
poType.setImplicitPrototype(newImplicitProto, this.interfaceToImplementors);
poType.setImplicitPrototype(newImplicitProto, this.unresolvedNamedTypes);
poType.setImplicitPrototype(newImplicitProto, this.resolvedNamedTypes);
poType.setImplicitPrototype(newImplicitProto, this.lastGeneration);
poType.setImplicitPrototype(newImplicitProto, this.templateTypes);
poType.setImplicitPrototype(newImplicitProto, this.emptyTemplateTypeMap);
poType.setImplicitPrototype(newImplicitProto, this.tolerateUndefinedValues);
16:05:26.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:27.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:27.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:28.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:28.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:29.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:29.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:30.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:30.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:31.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:31.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:32.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:32.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:33.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:33.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:34.595 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:34.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:35.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:35.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:36.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:36.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:37.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:37.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:38.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:38.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:39.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:39.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:40.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:40.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:41.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:41.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:42.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:42.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:43.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:43.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:44.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:44.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:45.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:45.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:46.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:46.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:47.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:47.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:48.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:48.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:49.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:49.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:50.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:50.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:51.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:51.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:52.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:52.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:53.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:53.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:54.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:54.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:55.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:55.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:56.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:56.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:57.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:57.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:58.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:58.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:05:59.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:05:59.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:00.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:00.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:02.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:02.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:03.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:03.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:04.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:04.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:05.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:05.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:06.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:06.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:07.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:07.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:08.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:08.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:09.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:09.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:10.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:10.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:11.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:11.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:12.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:12.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:13.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:13.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:14.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:14.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:15.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:15.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:16.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:16.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:17.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:17.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:18.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:18.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:19.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:19.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:20.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:20.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:21.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:21.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:22.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:22.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:23.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:23.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:24.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:24.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:25.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:25.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:26.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:26.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:27.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:27.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:28.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:28.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:29.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:29.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:31.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:31.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:32.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:32.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:33.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:33.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:34.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:34.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:35.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
poType.matchRecordTypeConstraint(newImplicitProto);
16:06:35.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:36.568 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (poType != null) {


}

if (newImplicitProto != null) {


}

16:06:36.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:37.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:37.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:38.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (poType == null) {
    return true;
}

if (poType == null) {
    return false;
}

if (poType == null) {
    throw new IllegalArgumentException("Empty variable: " + poType);
}

if (newImplicitProto == null) {
    return true;
}

if (newImplicitProto == null) {
    return false;
}

if (newImplicitProto == null) {
    throw new IllegalArgumentException("Empty variable: " + newImplicitProto);
}

16:06:38.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:39.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:39.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:40.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:40.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:41.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:41.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:42.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:42.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:43.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:43.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:44.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
poType.setImplicitPrototype(newImplicitProto);
	PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      
null
poType.setImplicitPrototype(newImplicitProto);
	poType.clearCachedValues();
      
null

      return true;
	poType.setImplicitPrototype(newImplicitProto);

MOVE-BUGGY-STATEMENT
16:06:44.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:45.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:45.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:46.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:46.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:47.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:06:47.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:48.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:48.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.JSTypeRegistry ===1419
16:06:48.886 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
poType.clearCachedValues();
poType.clearCachedValues(true);
poType.clearCachedValues(false);
16:06:48.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:49.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:49.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:50.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
poType.clearCachedValues(type);
poType.clearCachedValues(newImplicitProto);
poType.clearCachedValues(OBJECT_INDEX_TEMPLATE);
poType.clearCachedValues(this.objectIndexTemplateKey);
poType.clearCachedValues(OBJECT_ELEMENT_TEMPLATE);
poType.clearCachedValues(this.objectElementTemplateKey);
poType.clearCachedValues(PROPERTY_CHECKING_UNION_SIZE);
poType.clearCachedValues(this.reporter);
poType.clearCachedValues(this.nativeTypes);
poType.clearCachedValues(this.namesToTypes);
poType.clearCachedValues(this.namespaces);
poType.clearCachedValues(this.nonNullableTypeNames);
poType.clearCachedValues(this.forwardDeclaredTypes);
poType.clearCachedValues(this.typesIndexedByProperty);
poType.clearCachedValues(this.eachRefTypeIndexedByProperty);
poType.clearCachedValues(this.greatestSubtypeByProperty);
poType.clearCachedValues(this.interfaceToImplementors);
poType.clearCachedValues(this.unresolvedNamedTypes);
poType.clearCachedValues(this.resolvedNamedTypes);
poType.clearCachedValues(this.lastGeneration);
poType.clearCachedValues(this.templateTypes);
poType.clearCachedValues(this.emptyTemplateTypeMap);
poType.clearCachedValues(this.tolerateUndefinedValues);
16:06:50.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:51.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:51.945 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:52.877 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:52.877 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:53.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:53.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:54.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:54.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:56.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:56.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:57.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:57.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:58.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:58.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:06:59.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:06:59.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:00.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:00.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:01.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:01.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:02.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:02.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:03.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:03.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:04.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:04.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:05.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:05.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:06.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:06.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:07.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:07.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:08.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:08.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:09.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:09.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:10.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:10.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:11.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:11.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:12.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:12.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:13.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:13.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:14.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
poType.getPropertyMap();
poType.getCtorImplementedInterfaces();
poType.getCtorExtendedInterfaces();
poType.getJSDocInfo();
poType.getParentScope();
poType.getImplicitPrototype();
poType.getRootNode();
poType.getPropertiesCount();
poType.getReferenceName();
poType.getNormalizedReferenceName();
poType.getDisplayName();
poType.getTypeOfThis();
poType.getConstructor();
poType.getOwnerFunction();
poType.detectImplicitPrototypeCycle();
poType.detectInheritanceCycle();
poType.hasReferenceName();
poType.isUnknownType();
poType.isObject();
poType.hasCachedValues();
poType.isNativeObjectType();
poType.isFunctionPrototypeType();
poType.getOwnPropertyNames();
poType.getPropertyNames();
poType.getPossibleToBooleanOutcomes();
poType.getTemplateTypes();
16:07:14.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:15.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:15.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:16.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:16.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:17.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:17.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:18.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:18.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:19.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:19.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:20.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:20.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:21.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:21.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:22.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:22.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:23.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:23.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:24.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:24.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:26.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:26.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:27.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:27.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:28.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:28.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:29.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:29.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:30.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:30.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:31.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:31.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:32.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:32.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:33.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:33.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:34.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:34.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:35.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:35.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:36.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:36.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:37.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:37.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:38.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:38.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:39.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:39.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:40.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:40.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:41.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (poType != null) {


}

16:07:41.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:42.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (poType == null) {
    return true;
}

if (poType == null) {
    return false;
}

if (poType == null) {
    throw new IllegalArgumentException("Empty variable: " + poType);
}

16:07:42.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:43.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:43.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:44.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:44.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:45.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
poType.clearCachedValues();
	PrototypeObjectType poType = (PrototypeObjectType) type;
      
null

      poType.setImplicitPrototype(newImplicitProto);
	poType.clearCachedValues();

MOVE-BUGGY-STATEMENT

      poType.setImplicitPrototype(newImplicitProto);
      return true;
	poType.clearCachedValues();

MOVE-BUGGY-STATEMENT
16:07:45.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:46.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:46.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:47.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:47.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:48.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:07:48.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:49.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:49.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.JSTypeRegistry ===1418
16:07:49.352 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
PrototypeObjectType poType = (PrototypeObjectType) type;
if (type != null) {


}

16:07:49.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:50.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (type == null) {
    return true;
}

if (type == null) {
    return false;
}

if (type == null) {
    throw new IllegalArgumentException("Empty variable: " + type);
}

16:07:50.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:51.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:51.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:52.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:52.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:53.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
resetForTypeCheck();
	PrototypeObjectType poType = (PrototypeObjectType) type;
PrototypeObjectType poType = (PrototypeObjectType) type;
	resetForTypeCheck();
initializeBuiltInTypes();
	PrototypeObjectType poType = (PrototypeObjectType) type;
PrototypeObjectType poType = (PrototypeObjectType) type;
	initializeBuiltInTypes();
initializeRegistry();
	PrototypeObjectType poType = (PrototypeObjectType) type;
PrototypeObjectType poType = (PrototypeObjectType) type;
	initializeRegistry();
register(type);
register(type);
	PrototypeObjectType poType = (PrototypeObjectType) type;
PrototypeObjectType poType = (PrototypeObjectType) type;
	register(type);
incrementGeneration();
	PrototypeObjectType poType = (PrototypeObjectType) type;
PrototypeObjectType poType = (PrototypeObjectType) type;
	incrementGeneration();
clearNamedTypes();
	PrototypeObjectType poType = (PrototypeObjectType) type;
PrototypeObjectType poType = (PrototypeObjectType) type;
	clearNamedTypes();
clearTemplateTypeNames();
	PrototypeObjectType poType = (PrototypeObjectType) type;
PrototypeObjectType poType = (PrototypeObjectType) type;
	clearTemplateTypeNames();
16:07:53.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:54.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:54.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:55.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:55.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:56.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:56.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:57.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:57.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:58.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:58.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:07:59.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:07:59.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:00.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:00.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:01.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:01.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:02.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:02.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:03.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:03.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:04.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:04.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:05.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:05.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:06.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:06.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:07.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:07.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:08.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:08:08.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:09.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:09.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.JSTypeRegistry ===1417
16:08:09.480 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
if (type != null) {


}

16:08:09.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:10.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (type == null) {
    return true;
}

if (type == null) {
    return false;
}

if (type == null) {
    throw new IllegalArgumentException("Empty variable: " + type);
}

16:08:10.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:11.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:11.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:12.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:12.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:13.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
resetForTypeCheck();
	if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
	resetForTypeCheck();
initializeBuiltInTypes();
	if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
	initializeBuiltInTypes();
initializeRegistry();
	if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
	initializeRegistry();
register(type);
register(type);
	if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
	register(type);
incrementGeneration();
	if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
	incrementGeneration();
clearNamedTypes();
	if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
	clearNamedTypes();
clearTemplateTypeNames();
	if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }
	clearTemplateTypeNames();
16:08:13.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:14.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:14.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:15.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:15.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:16.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:16.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:17.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:17.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:18.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:18.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:19.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:19.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:20.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:20.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:21.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:21.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:22.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:22.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:23.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:23.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:25.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:25.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:26.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:26.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:27.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:27.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:28.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:28.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:29.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

    return false;
	if (type instanceof PrototypeObjectType) {
      PrototypeObjectType poType = (PrototypeObjectType) type;
      poType.clearCachedValues();
      poType.setImplicitPrototype(newImplicitProto);
      return true;
    }

MOVE-BUGGY-STATEMENT
16:08:29.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:30.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:08:30.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:31.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:08:31.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.StringType ===81
16:08:31.319 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return true;
return false;
16:08:31.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:08:32.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
16:08:32.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
16:12:44.700 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [com.google.javascript.jscomp.DisambiguatePropertiesTest::testOneType4, com.google.javascript.jscomp.DisambiguatePropertiesTest::testTwoTypes4]
16:12:44.700 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 39, [- com.google.javascript.jscomp.AmbiguatePropertiesTest::testQuotedPrototypeProperty, - com.google.javascript.jscomp.AmbiguatePropertiesTest::testSetQuotedPropertyOfThis, - com.google.javascript.jscomp.CheckAccessControlsTest::testPrivateAccessForProperties4, - com.google.javascript.jscomp.DisambiguatePropertiesTest::testTwoTypes4, - com.google.javascript.jscomp.DisambiguatePropertiesTest::testOneType4, - com.google.javascript.jscomp.LooseTypeCheckTest::testStringComparison5, - com.google.javascript.jscomp.LooseTypeCheckTest::testStringComparison6, - com.google.javascript.jscomp.LooseTypeCheckTest::testValueOfComparison3, - com.google.javascript.jscomp.LooseTypeCheckTest::testIn1, - com.google.javascript.jscomp.LooseTypeCheckTest::testIn5, - com.google.javascript.jscomp.LooseTypeCheckTest::testPropAccess, - com.google.javascript.jscomp.LooseTypeCheckTest::testPropAccess4, - com.google.javascript.jscomp.RemoveUnusedNamesTest::testAnalyzeUnusedPrototypeProperties, - com.google.javascript.jscomp.RemoveUnusedNamesTest::testStatement, - com.google.javascript.jscomp.RemoveUnusedNamesTest::testAnalyzeUnusedPrototypeProperties3, - com.google.javascript.jscomp.TypeCheckTest::testIn1, - com.google.javascript.jscomp.TypeCheckTest::testIn5, - com.google.javascript.jscomp.TypeCheckTest::testDeleteOperator1, - com.google.javascript.jscomp.TypeCheckTest::testGetpropDict1, - com.google.javascript.jscomp.TypeCheckTest::testGetpropDict2, - com.google.javascript.jscomp.TypeCheckTest::testGetpropDict3, - com.google.javascript.jscomp.TypeCheckTest::testGetpropDict4, - com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct1, - com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct2, - com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct3, - com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct4, - com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct5, - com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct6, - com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct7, - com.google.javascript.jscomp.TypeCheckTest::testInOnStruct, - com.google.javascript.jscomp.TypeCheckTest::testPropAccess, - com.google.javascript.jscomp.TypeCheckTest::testPropAccess4, - com.google.javascript.jscomp.TypeCheckTest::testThis12, - com.google.javascript.jscomp.TypeCheckTest::testStringComparison5, - com.google.javascript.jscomp.TypeCheckTest::testStringComparison6, - com.google.javascript.jscomp.TypeCheckTest::testValueOfComparison3, - com.google.javascript.jscomp.TypeCheckTest::testBug8017789, - com.google.javascript.jscomp.TypeCheckTest::testTypedefBeforeUse, - com.google.javascript.rhino.jstype.JSTypeTest::testStringValueType]
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.AmbiguatePropertiesTest::testQuotedPrototypeProperty
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.AmbiguatePropertiesTest::testSetQuotedPropertyOfThis
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.CheckAccessControlsTest::testPrivateAccessForProperties4
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.DisambiguatePropertiesTest::testTwoTypes4
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.DisambiguatePropertiesTest::testOneType4
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testStringComparison5
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testStringComparison6
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testValueOfComparison3
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testIn1
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testIn5
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testPropAccess
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testPropAccess4
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.RemoveUnusedNamesTest::testAnalyzeUnusedPrototypeProperties
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.RemoveUnusedNamesTest::testStatement
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.RemoveUnusedNamesTest::testAnalyzeUnusedPrototypeProperties3
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIn1
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIn5
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testDeleteOperator1
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testGetpropDict1
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testGetpropDict2
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testGetpropDict3
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testGetpropDict4
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct1
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct2
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct3
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct4
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct5
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct6
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testGetelemStruct7
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testInOnStruct
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testPropAccess
16:12:44.701 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testPropAccess4
16:12:44.702 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testThis12
16:12:44.702 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testStringComparison5
16:12:44.702 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testStringComparison6
16:12:44.702 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testValueOfComparison3
16:12:44.702 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testBug8017789
16:12:44.702 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testTypedefBeforeUse
16:12:44.702 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.rhino.jstype.JSTypeTest::testStringValueType
16:12:44.702 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=37, pp=Unknown
16:12:44.702 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
16:12:45.582 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-118/aggregatedSusInfo.profl
16:12:45.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.jstype.StringType:matchesStringContext()Z in com.google.javascript.rhino.jstype.StringType:81
16:12:45.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 39 Closure-118

16:12:45.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:46.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:12:46.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1446
16:12:46.334 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return new NodeMismatch(this, node2);
if (node2 != null) {


}

16:12:46.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:47.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (node2 == null) {
    return null;
}

if (node2 == null) {
    throw new IllegalArgumentException("Empty variable: " + node2);
}

16:12:47.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:48.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:12:48.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:49.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
addChildToFront(node2);
addChildToFront(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildToFront(node2);
addChildToBack(node2);
addChildToBack(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildToBack(node2);
addChildrenToFront(node2);
addChildrenToFront(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildrenToFront(node2);
addChildrenToBack(node2);
addChildrenToBack(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildrenToBack(node2);
removeChild(node2);
removeChild(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	removeChild(node2);
detachChildren();
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	detachChildren();
setQuotedString();
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	setQuotedString();
16:12:49.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:50.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:12:50.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:51.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:12:51.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:52.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:12:52.436 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:53.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:12:53.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:54.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:12:54.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:55.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:12:55.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:56.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:12:56.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:57.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:12:57.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:58.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:12:58.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:12:59.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:12:59.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:00.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:00.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:01.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:01.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:02.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:02.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:03.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:03.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:04.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:04.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:05.595 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:05.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:06.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:06.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:07.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:07.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:08.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:13:08.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:09.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:09.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.FunctionType ===714
16:13:09.893 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return true;
return false;
16:13:09.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:10.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:13:10.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:11.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:11.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.FunctionType ===787
16:13:11.775 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return leastSuper ? that : this;
if (that != null) {


}

16:13:11.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:12.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (that == null) {
    return null;
}

if (that == null) {
    throw new IllegalArgumentException("Empty variable: " + that);
}

16:13:12.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:13.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:13.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:14.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
setStruct();
	return leastSuper ? that : this;
return leastSuper ? that : this;
	setStruct();
setDict();
	return leastSuper ? that : this;
return leastSuper ? that : this;
	setDict();
addSubType(that);
addSubType(that);
	return leastSuper ? that : this;
return leastSuper ? that : this;
	addSubType(that);
clearCachedValues();
	return leastSuper ? that : this;
return leastSuper ? that : this;
	clearCachedValues();
16:13:14.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:15.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:15.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:16.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:16.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:17.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:17.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:18.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:18.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:18.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:18.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:19.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:19.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:20.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:20.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:21.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:21.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:22.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:13:22.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:23.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:23.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===705
16:13:23.645 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
addExpr(c, 1, Context.OTHER);
addExpr(true, c, 1, Context.OTHER);
addExpr(false, c, 1, Context.OTHER);
addExpr(c, true, 1, Context.OTHER);
addExpr(c, false, 1, Context.OTHER);
addExpr(c, 1, true, Context.OTHER);
addExpr(c, 1, false, Context.OTHER);
addExpr(c, 1, Context.OTHER, true);
addExpr(c, 1, Context.OTHER, false);
16:13:23.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:24.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:24.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:25.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:25.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:26.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:26.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:27.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:27.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:28.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:28.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:29.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:29.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:30.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:30.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:31.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
addExpr(d, 1, Context.OTHER);
addExpr(key, 1, Context.OTHER);
addExpr(last, 1, Context.OTHER);
addExpr(first, 1, Context.OTHER);
addExpr(childCount, 1, Context.OTHER);
addExpr(opstr, 1, Context.OTHER);
addExpr(type, 1, Context.OTHER);
addExpr(n, 1, Context.OTHER);
addExpr(context, 1, Context.OTHER);
addExpr(LT_ESCAPED, 1, Context.OTHER);
addExpr(GT_ESCAPED, 1, Context.OTHER);
addExpr(this.escapedJsStrings, 1, Context.OTHER);
addExpr(HEX_CHARS, 1, Context.OTHER);
addExpr(this.cc, 1, Context.OTHER);
addExpr(this.outputCharsetEncoder, 1, Context.OTHER);
addExpr(this.preferSingleQuotes, 1, Context.OTHER);
addExpr(this.trustedStrings, 1, Context.OTHER);
addExpr(this.languageMode, 1, Context.OTHER);
addExpr( 1, Context.OTHER);
addExpr(d, c, 1, Context.OTHER);
addExpr(key, c, 1, Context.OTHER);
addExpr(last, c, 1, Context.OTHER);
addExpr(first, c, 1, Context.OTHER);
addExpr(childCount, c, 1, Context.OTHER);
addExpr(opstr, c, 1, Context.OTHER);
addExpr(type, c, 1, Context.OTHER);
addExpr(n, c, 1, Context.OTHER);
addExpr(context, c, 1, Context.OTHER);
addExpr(LT_ESCAPED, c, 1, Context.OTHER);
addExpr(GT_ESCAPED, c, 1, Context.OTHER);
addExpr(this.escapedJsStrings, c, 1, Context.OTHER);
addExpr(HEX_CHARS, c, 1, Context.OTHER);
addExpr(this.cc, c, 1, Context.OTHER);
addExpr(this.outputCharsetEncoder, c, 1, Context.OTHER);
addExpr(this.preferSingleQuotes, c, 1, Context.OTHER);
addExpr(this.trustedStrings, c, 1, Context.OTHER);
addExpr(this.languageMode, c, 1, Context.OTHER);
addExpr(c, d, 1, Context.OTHER);
addExpr(c, key, 1, Context.OTHER);
addExpr(c, last, 1, Context.OTHER);
addExpr(c, first, 1, Context.OTHER);
addExpr(c, childCount, 1, Context.OTHER);
addExpr(c, opstr, 1, Context.OTHER);
addExpr(c, type, 1, Context.OTHER);
addExpr(c, n, 1, Context.OTHER);
addExpr(c, context, 1, Context.OTHER);
addExpr(c, LT_ESCAPED, 1, Context.OTHER);
addExpr(c, GT_ESCAPED, 1, Context.OTHER);
addExpr(c, this.escapedJsStrings, 1, Context.OTHER);
addExpr(c, HEX_CHARS, 1, Context.OTHER);
addExpr(c, this.cc, 1, Context.OTHER);
addExpr(c, this.outputCharsetEncoder, 1, Context.OTHER);
addExpr(c, this.preferSingleQuotes, 1, Context.OTHER);
addExpr(c, this.trustedStrings, 1, Context.OTHER);
addExpr(c, this.languageMode, 1, Context.OTHER);
addExpr(c, 1, d, Context.OTHER);
addExpr(c, 1, key, Context.OTHER);
addExpr(c, 1, last, Context.OTHER);
addExpr(c, 1, first, Context.OTHER);
addExpr(c, 1, childCount, Context.OTHER);
addExpr(c, 1, opstr, Context.OTHER);
addExpr(c, 1, type, Context.OTHER);
addExpr(c, 1, n, Context.OTHER);
addExpr(c, 1, context, Context.OTHER);
addExpr(c, 1, LT_ESCAPED, Context.OTHER);
addExpr(c, 1, GT_ESCAPED, Context.OTHER);
addExpr(c, 1, this.escapedJsStrings, Context.OTHER);
addExpr(c, 1, HEX_CHARS, Context.OTHER);
addExpr(c, 1, this.cc, Context.OTHER);
addExpr(c, 1, this.outputCharsetEncoder, Context.OTHER);
addExpr(c, 1, this.preferSingleQuotes, Context.OTHER);
addExpr(c, 1, this.trustedStrings, Context.OTHER);
addExpr(c, 1, this.languageMode, Context.OTHER);
addExpr(c, 1, Context.OTHER, d);
addExpr(c, 1, Context.OTHER, key);
addExpr(c, 1, Context.OTHER, last);
addExpr(c, 1, Context.OTHER, first);
addExpr(c, 1, Context.OTHER, childCount);
addExpr(c, 1, Context.OTHER, opstr);
addExpr(c, 1, Context.OTHER, type);
addExpr(c, 1, Context.OTHER, n);
addExpr(c, 1, Context.OTHER, context);
addExpr(c, 1, Context.OTHER, LT_ESCAPED);
addExpr(c, 1, Context.OTHER, GT_ESCAPED);
addExpr(c, 1, Context.OTHER, this.escapedJsStrings);
addExpr(c, 1, Context.OTHER, HEX_CHARS);
addExpr(c, 1, Context.OTHER, this.cc);
addExpr(c, 1, Context.OTHER, this.outputCharsetEncoder);
addExpr(c, 1, Context.OTHER, this.preferSingleQuotes);
addExpr(c, 1, Context.OTHER, this.trustedStrings);
addExpr(c, 1, Context.OTHER, this.languageMode);
16:13:31.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:32.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:32.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:33.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:33.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:34.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:34.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:35.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:35.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:36.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:36.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:36.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:36.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:37.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:37.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:38.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:38.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:39.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:39.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:40.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:40.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:41.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:41.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:42.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:42.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:43.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:43.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:44.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:44.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:45.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:45.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:46.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:46.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:47.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:47.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:48.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:48.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:49.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:49.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:50.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:50.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:51.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:51.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:51.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:51.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:52.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:52.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:53.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:53.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:54.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:54.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:55.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:55.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:56.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:56.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:57.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:57.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:58.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:58.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:13:59.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:13:59.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:00.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:00.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:01.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:01.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:02.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:02.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:03.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:03.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:04.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:04.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:05.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:05.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:06.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:06.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:07.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:07.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:08.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:08.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:08.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:08.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:09.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:09.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:11.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:11.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:11.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:11.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:12.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:12.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:13.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:13.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:14.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:14.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:15.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:15.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:16.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:16.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:17.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:17.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:18.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:18.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:19.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:19.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:20.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:20.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:21.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:21.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:22.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:22.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:23.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:23.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:24.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:24.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:25.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:25.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:26.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:26.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:27.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:27.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:28.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:28.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:29.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:29.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:30.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:30.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:31.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:31.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:32.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:32.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:33.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:33.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:33.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:33.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:34.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:34.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:35.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:35.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:36.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:36.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:37.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:37.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:38.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:38.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:39.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:39.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:40.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:40.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:41.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:41.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:42.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:42.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:43.511 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:43.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:44.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:44.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:45.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:45.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:46.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:46.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:47.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:47.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:48.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:48.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:49.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:49.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:50.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:50.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:51.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:51.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:52.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:52.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:53.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:53.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:53.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:53.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:54.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:54.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:55.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:55.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:56.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:56.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:57.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (c != null) {


}

16:14:57.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:58.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (c == null) {
    return;
}

if (c == null) {
    throw new IllegalArgumentException("Empty variable: " + c);
}

16:14:58.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:14:59.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:14:59.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:00.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
addExpr(c, 1, Context.OTHER);
	cc.addNumber(d);
              } else {
                
null
16:15:00.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:01.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:15:01.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:02.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:02.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===659
16:15:02.402 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
break;

16:15:02.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:03.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:03.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===658
16:15:03.360 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
addJsString(n);
addJsString(true, n);
addJsString(false, n);
addJsString(n, true);
addJsString(n, false);
16:15:03.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:04.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:04.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:05.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:05.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:06.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:06.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:07.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
addJsString(next);
addJsString(precedence);
addJsString(ambiguousElseClause);
addJsString(hasElse);
addJsString(last);
addJsString(first);
addJsString(childCount);
addJsString(opstr);
addJsString(type);
addJsString(context);
addJsString(LT_ESCAPED);
addJsString(GT_ESCAPED);
addJsString(this.escapedJsStrings);
addJsString(HEX_CHARS);
addJsString(this.cc);
addJsString(this.outputCharsetEncoder);
addJsString(this.preferSingleQuotes);
addJsString(this.trustedStrings);
addJsString(this.languageMode);
addJsString();
addJsString(next, n);
addJsString(precedence, n);
addJsString(ambiguousElseClause, n);
addJsString(hasElse, n);
addJsString(last, n);
addJsString(first, n);
addJsString(childCount, n);
addJsString(opstr, n);
addJsString(type, n);
addJsString(context, n);
addJsString(LT_ESCAPED, n);
addJsString(GT_ESCAPED, n);
addJsString(this.escapedJsStrings, n);
addJsString(HEX_CHARS, n);
addJsString(this.cc, n);
addJsString(this.outputCharsetEncoder, n);
addJsString(this.preferSingleQuotes, n);
addJsString(this.trustedStrings, n);
addJsString(this.languageMode, n);
addJsString(n, next);
addJsString(n, precedence);
addJsString(n, ambiguousElseClause);
addJsString(n, hasElse);
addJsString(n, last);
addJsString(n, first);
addJsString(n, childCount);
addJsString(n, opstr);
addJsString(n, type);
addJsString(n, context);
addJsString(n, LT_ESCAPED);
addJsString(n, GT_ESCAPED);
addJsString(n, this.escapedJsStrings);
addJsString(n, HEX_CHARS);
addJsString(n, this.cc);
addJsString(n, this.outputCharsetEncoder);
addJsString(n, this.preferSingleQuotes);
addJsString(n, this.trustedStrings);
addJsString(n, this.languageMode);
16:15:07.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:08.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:08.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:09.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:09.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:10.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:10.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:11.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:11.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:11.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:11.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:12.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:12.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:13.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:13.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:14.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:14.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:15.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:15.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:16.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:16.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:17.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:17.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:18.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:18.897 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:19.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:19.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:20.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:20.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:21.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:21.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:22.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:22.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:23.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:23.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:24.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:24.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:25.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:25.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:26.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:26.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:27.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:27.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:28.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:28.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:29.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:29.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:30.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:30.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:31.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:31.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:32.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:32.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:33.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:33.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:34.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:34.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:35.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:35.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:36.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:36.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:37.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:37.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:38.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:38.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:39.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:39.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:39.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:39.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:41.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:41.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:42.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:42.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:43.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:43.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:44.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:44.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:45.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:45.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:46.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:46.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:47.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:47.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:47.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:47.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:48.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:48.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:49.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:49.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:50.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:50.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:51.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:51.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:52.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:52.728 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:53.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:53.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:54.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:54.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:55.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:55.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:56.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:56.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:57.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:57.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:58.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:58.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:15:59.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:15:59.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:00.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:00.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:01.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:01.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:02.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:02.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:03.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
getFirstNonEmptyChild(n);
add(n);
addList(n);
addArrayList(n);
addCaseBody(n);
addAllSiblings(n);
isIndirectEval(n);
isOneExactlyFunctionOrDo(n);
16:16:03.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:04.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:04.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:05.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:05.004 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:05.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:05.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:06.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:06.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:07.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:07.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:08.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:08.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:09.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:09.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:10.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

16:16:10.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:11.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

16:16:11.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:11.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:11.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:12.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
addJsString(n);
	Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child");
        
null

        break;
	addJsString(n);

MOVE-BUGGY-STATEMENT
16:16:12.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:13.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:13.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:14.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:16:14.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:15.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:15.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===656
16:16:15.918 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            true, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            false, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, true, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, false, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", true);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", false);
16:16:15.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:16.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:16.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:17.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:17.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:18.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:18.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:19.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:19.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:20.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:20.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:21.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
Preconditions.checkState(
            next, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            precedence, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            ambiguousElseClause, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            hasElse, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            last, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            first, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            opstr, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            type, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            n, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            context, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            LT_ESCAPED, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            GT_ESCAPED, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            this.escapedJsStrings, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            HEX_CHARS, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            this.cc, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            this.outputCharsetEncoder, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            this.preferSingleQuotes, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            this.trustedStrings, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            this.languageMode, childCount == 1, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, next, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, precedence, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, ambiguousElseClause, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, hasElse, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, last, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, first, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, childCount, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, opstr, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, type, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, n, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, context, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, LT_ESCAPED, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, GT_ESCAPED, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, this.escapedJsStrings, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, HEX_CHARS, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, this.cc, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, this.outputCharsetEncoder, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, this.preferSingleQuotes, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, this.trustedStrings, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, this.languageMode, "Object lit key must have 1 child");
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", next);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", precedence);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", ambiguousElseClause);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", hasElse);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", last);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", first);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", childCount);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", opstr);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", type);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", n);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", context);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", LT_ESCAPED);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", GT_ESCAPED);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", this.escapedJsStrings);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", HEX_CHARS);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", this.cc);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", this.outputCharsetEncoder);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", this.preferSingleQuotes);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", this.trustedStrings);
Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child", this.languageMode);
16:16:21.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:22.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:22.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:23.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:23.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:24.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:24.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:25.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:25.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:26.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:26.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:27.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:27.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:28.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:28.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:29.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:29.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:30.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:30.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:31.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:31.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:31.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:31.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:32.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:32.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:33.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:33.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:34.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:34.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:35.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:35.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:36.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:36.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:37.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:37.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:38.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:38.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:39.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:39.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:40.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:40.595 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:41.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:41.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:42.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:42.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:43.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:43.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:44.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:44.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:45.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:45.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:46.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:46.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:47.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:47.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:48.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:48.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:49.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:49.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:50.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:50.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:50.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:50.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:51.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:51.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:52.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:52.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:53.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:53.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:54.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:54.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:55.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:55.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:56.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:56.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:57.741 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:57.741 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:58.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:58.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:16:59.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:16:59.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:00.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:00.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:01.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:01.398 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:02.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:02.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:03.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:03.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:04.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:04.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:05.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:05.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:06.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:06.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:07.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:07.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:08.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:08.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:09.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:09.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:10.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:10.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:10.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:10.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:11.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:11.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:12.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:12.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:13.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:13.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:14.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:14.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:15.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:15.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:16.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:16.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:17.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:17.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:18.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (childCount == 0) {
    new IllegalArgumentException("");
}

if (childCount != 0) {

    
}

if (childCount > 0) {

    
}

16:17:18.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:19.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:19.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:20.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:20.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:21.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

        addJsString(n);
	Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child");

MOVE-BUGGY-STATEMENT

        addJsString(n);
        break;
	Preconditions.checkState(
            childCount == 1, "Object lit key must have 1 child");

MOVE-BUGGY-STATEMENT
16:17:21.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:22.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:22.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:23.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:17:23.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:24.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:24.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.TypeValidator ===346
16:17:24.405 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
expectString(t, indexNode, indexType, "property access");
expectString(true, t, indexNode, indexType, "property access");
expectString(false, t, indexNode, indexType, "property access");
expectString(t, true, indexNode, indexType, "property access");
expectString(t, false, indexNode, indexType, "property access");
expectString(t, indexNode, true, indexType, "property access");
expectString(t, indexNode, false, indexType, "property access");
expectString(t, indexNode, indexType, true, "property access");
expectString(t, indexNode, indexType, false, "property access");
expectString(t, indexNode, indexType, "property access", true);
expectString(t, indexNode, indexType, "property access", false);
16:17:24.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:25.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:25.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:26.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:26.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:27.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:27.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:28.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:28.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:28.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:28.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:29.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:29.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:30.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:30.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:31.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:31.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:32.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:32.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:33.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
expectString(dereferenced, indexNode, indexType, "property access");
expectString(n, indexNode, indexType, "property access");
expectString(objType, indexNode, indexType, "property access");
expectString(this.compiler, indexNode, indexType, "property access");
expectString(this.typeRegistry, indexNode, indexType, "property access");
expectString(this.allValueTypes, indexNode, indexType, "property access");
expectString(this.shouldReport, indexNode, indexType, "property access");
expectString(this.nullOrUndefined, indexNode, indexType, "property access");
expectString(this.mismatches, indexNode, indexType, "property access");
expectString(FOUND_REQUIRED, indexNode, indexType, "property access");
expectString(INVALID_CAST, indexNode, indexType, "property access");
expectString(TYPE_MISMATCH_WARNING, indexNode, indexType, "property access");
expectString(MISSING_EXTENDS_TAG_WARNING, indexNode, indexType, "property access");
expectString(DUP_VAR_DECLARATION, indexNode, indexType, "property access");
expectString(HIDDEN_PROPERTY_MISMATCH, indexNode, indexType, "property access");
expectString(INTERFACE_METHOD_NOT_IMPLEMENTED, indexNode, indexType, "property access");
expectString(HIDDEN_INTERFACE_PROPERTY_MISMATCH, indexNode, indexType, "property access");
expectString(UNKNOWN_TYPEOF_VALUE, indexNode, indexType, "property access");
expectString(ILLEGAL_PROPERTY_ACCESS, indexNode, indexType, "property access");
expectString(ALL_DIAGNOSTICS, indexNode, indexType, "property access");
expectString( indexNode, indexType, "property access");
expectString(dereferenced, t, indexNode, indexType, "property access");
expectString(n, t, indexNode, indexType, "property access");
expectString(objType, t, indexNode, indexType, "property access");
expectString(this.compiler, t, indexNode, indexType, "property access");
expectString(this.typeRegistry, t, indexNode, indexType, "property access");
expectString(this.allValueTypes, t, indexNode, indexType, "property access");
expectString(this.shouldReport, t, indexNode, indexType, "property access");
expectString(this.nullOrUndefined, t, indexNode, indexType, "property access");
expectString(this.mismatches, t, indexNode, indexType, "property access");
expectString(FOUND_REQUIRED, t, indexNode, indexType, "property access");
expectString(INVALID_CAST, t, indexNode, indexType, "property access");
expectString(TYPE_MISMATCH_WARNING, t, indexNode, indexType, "property access");
expectString(MISSING_EXTENDS_TAG_WARNING, t, indexNode, indexType, "property access");
expectString(DUP_VAR_DECLARATION, t, indexNode, indexType, "property access");
expectString(HIDDEN_PROPERTY_MISMATCH, t, indexNode, indexType, "property access");
expectString(INTERFACE_METHOD_NOT_IMPLEMENTED, t, indexNode, indexType, "property access");
expectString(HIDDEN_INTERFACE_PROPERTY_MISMATCH, t, indexNode, indexType, "property access");
expectString(UNKNOWN_TYPEOF_VALUE, t, indexNode, indexType, "property access");
expectString(ILLEGAL_PROPERTY_ACCESS, t, indexNode, indexType, "property access");
expectString(ALL_DIAGNOSTICS, t, indexNode, indexType, "property access");
expectString(t, dereferenced, indexType, "property access");
expectString(t, n, indexType, "property access");
expectString(t, objType, indexType, "property access");
expectString(t, this.compiler, indexType, "property access");
expectString(t, this.typeRegistry, indexType, "property access");
expectString(t, this.allValueTypes, indexType, "property access");
expectString(t, this.shouldReport, indexType, "property access");
expectString(t, this.nullOrUndefined, indexType, "property access");
expectString(t, this.mismatches, indexType, "property access");
expectString(t, FOUND_REQUIRED, indexType, "property access");
expectString(t, INVALID_CAST, indexType, "property access");
expectString(t, TYPE_MISMATCH_WARNING, indexType, "property access");
expectString(t, MISSING_EXTENDS_TAG_WARNING, indexType, "property access");
expectString(t, DUP_VAR_DECLARATION, indexType, "property access");
expectString(t, HIDDEN_PROPERTY_MISMATCH, indexType, "property access");
expectString(t, INTERFACE_METHOD_NOT_IMPLEMENTED, indexType, "property access");
expectString(t, HIDDEN_INTERFACE_PROPERTY_MISMATCH, indexType, "property access");
expectString(t, UNKNOWN_TYPEOF_VALUE, indexType, "property access");
expectString(t, ILLEGAL_PROPERTY_ACCESS, indexType, "property access");
expectString(t, ALL_DIAGNOSTICS, indexType, "property access");
expectString(t,  indexType, "property access");
expectString(t, dereferenced, indexNode, indexType, "property access");
expectString(t, n, indexNode, indexType, "property access");
expectString(t, objType, indexNode, indexType, "property access");
expectString(t, this.compiler, indexNode, indexType, "property access");
expectString(t, this.typeRegistry, indexNode, indexType, "property access");
expectString(t, this.allValueTypes, indexNode, indexType, "property access");
expectString(t, this.shouldReport, indexNode, indexType, "property access");
expectString(t, this.nullOrUndefined, indexNode, indexType, "property access");
expectString(t, this.mismatches, indexNode, indexType, "property access");
expectString(t, FOUND_REQUIRED, indexNode, indexType, "property access");
expectString(t, INVALID_CAST, indexNode, indexType, "property access");
expectString(t, TYPE_MISMATCH_WARNING, indexNode, indexType, "property access");
expectString(t, MISSING_EXTENDS_TAG_WARNING, indexNode, indexType, "property access");
expectString(t, DUP_VAR_DECLARATION, indexNode, indexType, "property access");
expectString(t, HIDDEN_PROPERTY_MISMATCH, indexNode, indexType, "property access");
expectString(t, INTERFACE_METHOD_NOT_IMPLEMENTED, indexNode, indexType, "property access");
expectString(t, HIDDEN_INTERFACE_PROPERTY_MISMATCH, indexNode, indexType, "property access");
expectString(t, UNKNOWN_TYPEOF_VALUE, indexNode, indexType, "property access");
expectString(t, ILLEGAL_PROPERTY_ACCESS, indexNode, indexType, "property access");
expectString(t, ALL_DIAGNOSTICS, indexNode, indexType, "property access");
expectString(t, indexNode, dereferenced, "property access");
expectString(t, indexNode, n, "property access");
expectString(t, indexNode, objType, "property access");
expectString(t, indexNode, this.compiler, "property access");
expectString(t, indexNode, this.typeRegistry, "property access");
expectString(t, indexNode, this.allValueTypes, "property access");
expectString(t, indexNode, this.shouldReport, "property access");
expectString(t, indexNode, this.nullOrUndefined, "property access");
expectString(t, indexNode, this.mismatches, "property access");
expectString(t, indexNode, FOUND_REQUIRED, "property access");
expectString(t, indexNode, INVALID_CAST, "property access");
expectString(t, indexNode, TYPE_MISMATCH_WARNING, "property access");
expectString(t, indexNode, MISSING_EXTENDS_TAG_WARNING, "property access");
expectString(t, indexNode, DUP_VAR_DECLARATION, "property access");
expectString(t, indexNode, HIDDEN_PROPERTY_MISMATCH, "property access");
expectString(t, indexNode, INTERFACE_METHOD_NOT_IMPLEMENTED, "property access");
expectString(t, indexNode, HIDDEN_INTERFACE_PROPERTY_MISMATCH, "property access");
expectString(t, indexNode, UNKNOWN_TYPEOF_VALUE, "property access");
expectString(t, indexNode, ILLEGAL_PROPERTY_ACCESS, "property access");
expectString(t, indexNode, ALL_DIAGNOSTICS, "property access");
expectString(t, indexNode,  "property access");
expectString(t, indexNode, dereferenced, indexType, "property access");
expectString(t, indexNode, n, indexType, "property access");
expectString(t, indexNode, objType, indexType, "property access");
expectString(t, indexNode, this.compiler, indexType, "property access");
expectString(t, indexNode, this.typeRegistry, indexType, "property access");
expectString(t, indexNode, this.allValueTypes, indexType, "property access");
expectString(t, indexNode, this.shouldReport, indexType, "property access");
expectString(t, indexNode, this.nullOrUndefined, indexType, "property access");
expectString(t, indexNode, this.mismatches, indexType, "property access");
expectString(t, indexNode, FOUND_REQUIRED, indexType, "property access");
expectString(t, indexNode, INVALID_CAST, indexType, "property access");
expectString(t, indexNode, TYPE_MISMATCH_WARNING, indexType, "property access");
expectString(t, indexNode, MISSING_EXTENDS_TAG_WARNING, indexType, "property access");
expectString(t, indexNode, DUP_VAR_DECLARATION, indexType, "property access");
expectString(t, indexNode, HIDDEN_PROPERTY_MISMATCH, indexType, "property access");
expectString(t, indexNode, INTERFACE_METHOD_NOT_IMPLEMENTED, indexType, "property access");
expectString(t, indexNode, HIDDEN_INTERFACE_PROPERTY_MISMATCH, indexType, "property access");
expectString(t, indexNode, UNKNOWN_TYPEOF_VALUE, indexType, "property access");
expectString(t, indexNode, ILLEGAL_PROPERTY_ACCESS, indexType, "property access");
expectString(t, indexNode, ALL_DIAGNOSTICS, indexType, "property access");
expectString(t, indexNode, indexType, dereferenced, "property access");
expectString(t, indexNode, indexType, n, "property access");
expectString(t, indexNode, indexType, objType, "property access");
expectString(t, indexNode, indexType, this.compiler, "property access");
expectString(t, indexNode, indexType, this.typeRegistry, "property access");
expectString(t, indexNode, indexType, this.allValueTypes, "property access");
expectString(t, indexNode, indexType, this.shouldReport, "property access");
expectString(t, indexNode, indexType, this.nullOrUndefined, "property access");
expectString(t, indexNode, indexType, this.mismatches, "property access");
expectString(t, indexNode, indexType, FOUND_REQUIRED, "property access");
expectString(t, indexNode, indexType, INVALID_CAST, "property access");
expectString(t, indexNode, indexType, TYPE_MISMATCH_WARNING, "property access");
expectString(t, indexNode, indexType, MISSING_EXTENDS_TAG_WARNING, "property access");
expectString(t, indexNode, indexType, DUP_VAR_DECLARATION, "property access");
expectString(t, indexNode, indexType, HIDDEN_PROPERTY_MISMATCH, "property access");
expectString(t, indexNode, indexType, INTERFACE_METHOD_NOT_IMPLEMENTED, "property access");
expectString(t, indexNode, indexType, HIDDEN_INTERFACE_PROPERTY_MISMATCH, "property access");
expectString(t, indexNode, indexType, UNKNOWN_TYPEOF_VALUE, "property access");
expectString(t, indexNode, indexType, ILLEGAL_PROPERTY_ACCESS, "property access");
expectString(t, indexNode, indexType, ALL_DIAGNOSTICS, "property access");
expectString(t, indexNode, indexType, "property access", dereferenced);
expectString(t, indexNode, indexType, "property access", n);
expectString(t, indexNode, indexType, "property access", objType);
expectString(t, indexNode, indexType, "property access", this.compiler);
expectString(t, indexNode, indexType, "property access", this.typeRegistry);
expectString(t, indexNode, indexType, "property access", this.allValueTypes);
expectString(t, indexNode, indexType, "property access", this.shouldReport);
expectString(t, indexNode, indexType, "property access", this.nullOrUndefined);
expectString(t, indexNode, indexType, "property access", this.mismatches);
expectString(t, indexNode, indexType, "property access", FOUND_REQUIRED);
expectString(t, indexNode, indexType, "property access", INVALID_CAST);
expectString(t, indexNode, indexType, "property access", TYPE_MISMATCH_WARNING);
expectString(t, indexNode, indexType, "property access", MISSING_EXTENDS_TAG_WARNING);
expectString(t, indexNode, indexType, "property access", DUP_VAR_DECLARATION);
expectString(t, indexNode, indexType, "property access", HIDDEN_PROPERTY_MISMATCH);
expectString(t, indexNode, indexType, "property access", INTERFACE_METHOD_NOT_IMPLEMENTED);
expectString(t, indexNode, indexType, "property access", HIDDEN_INTERFACE_PROPERTY_MISMATCH);
expectString(t, indexNode, indexType, "property access", UNKNOWN_TYPEOF_VALUE);
expectString(t, indexNode, indexType, "property access", ILLEGAL_PROPERTY_ACCESS);
expectString(t, indexNode, indexType, "property access", ALL_DIAGNOSTICS);
16:17:33.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:34.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:34.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:35.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:35.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:36.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:36.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:37.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:37.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:38.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:38.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:39.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:39.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:40.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:40.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:41.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:41.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:42.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:42.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:43.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:43.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:43.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:43.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:44.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:44.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:45.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:45.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:46.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:46.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:47.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:47.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:48.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:48.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:49.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:49.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:50.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:50.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:51.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:51.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:52.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:52.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:53.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:53.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:54.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:54.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:54.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:54.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:55.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:55.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:56.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:56.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:57.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:57.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:58.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:58.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:17:59.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:17:59.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:00.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:00.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:01.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:01.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:02.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:02.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:03.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:03.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:03.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:03.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:04.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:04.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:05.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:05.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:06.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:06.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:07.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:07.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:08.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:08.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:09.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:09.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:10.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:10.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:11.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:11.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:12.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:12.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:13.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:13.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:14.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:14.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:15.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:15.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:16.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:16.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:17.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:17.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:18.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:18.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:19.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:19.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:20.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:20.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:20.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:20.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:21.945 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:21.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:22.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:22.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:23.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:23.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:24.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:24.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:25.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:25.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:26.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:26.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:27.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:27.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:28.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:28.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:29.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:29.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:30.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:30.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:31.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:31.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:32.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:32.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:33.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:33.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:34.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:34.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:35.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:35.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:36.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:36.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:37.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:37.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:37.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:37.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:38.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:38.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:39.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:39.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:40.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:40.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:41.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:41.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:42.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:42.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:43.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:43.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:44.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:44.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:45.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:45.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:45.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:45.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:46.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:46.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:47.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:47.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:48.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:48.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:49.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:49.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:50.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:50.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:51.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:51.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:51.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:51.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:52.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:52.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:53.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:53.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:54.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:54.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:55.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:55.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:56.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:56.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:57.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:57.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:58.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:58.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:58.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:58.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:18:59.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:18:59.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:00.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:00.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:01.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:01.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:02.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:02.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:03.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:03.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:04.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:04.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:04.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:04.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:05.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:05.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:06.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:06.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:07.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:07.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:08.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:08.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:09.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:09.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:09.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:09.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:10.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:10.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:11.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:11.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:12.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:12.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:13.511 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:13.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:14.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:14.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:15.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:15.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:16.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:16.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:17.004 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:17.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:17.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:17.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:18.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:18.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:19.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:19.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:20.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:20.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:21.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:21.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:22.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:22.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:23.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:23.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:24.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:24.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:24.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:24.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:25.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:25.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:26.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:26.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:27.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:27.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:28.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:28.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:29.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:29.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:30.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:30.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:31.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:31.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:32.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:32.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:32.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:32.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:33.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:33.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:34.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:34.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:35.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:35.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:36.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:36.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:37.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:37.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:38.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:38.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:38.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:38.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:39.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:39.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:40.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:40.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:41.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:41.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:42.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:42.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:43.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:43.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:44.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:44.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:45.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:45.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:45.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:45.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:46.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:46.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:47.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:47.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:48.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:48.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:49.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:49.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:50.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:50.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:51.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:51.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:52.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:52.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:52.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:52.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:53.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:53.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:54.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:54.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:55.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:55.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:56.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:56.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:57.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:57.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:57.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:57.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:58.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:19:58.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:19:59.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
expectActualObject(t, indexNode, indexType, "property access");
expectAnyObject(t, indexNode, indexType, "property access");
expectNumber(t, indexNode, indexType, "property access");
expectBitwiseable(t, indexNode, indexType, "property access");
expectStringOrNumber(t, indexNode, indexType, "property access");
expectObject(t, indexNode, indexType, "property access");
16:19:59.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:00.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:00.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:01.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:01.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:02.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:02.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:03.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:03.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:03.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:03.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:04.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (t != null) {


}

if (indexNode != null) {


}

if (indexType != null) {


}

16:20:04.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:05.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:05.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:06.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:06.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:07.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (t == null) {
    return;
}

if (t == null) {
    throw new IllegalArgumentException("Empty variable: " + t);
}

if (indexNode == null) {
    return;
}

if (indexNode == null) {
    throw new IllegalArgumentException("Empty variable: " + indexNode);
}

if (indexType == null) {
    return;
}

if (indexType == null) {
    throw new IllegalArgumentException("Empty variable: " + indexType);
}

16:20:07.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:08.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:08.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:09.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:09.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:10.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:10.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:10.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:10.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:11.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:11.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:12.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
	expectString(t, indexNode, indexType, "property access");

MOVE-BUGGY-STATEMENT
16:20:12.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:13.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:20:13.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:14.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:14.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.InstanceObjectType ===117
16:20:14.423 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return getConstructor().isNativeObjectType()
        && "Array".equals(getReferenceName());

16:20:14.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:15.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:15.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.TypeCheck ===954
16:20:15.120 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return;

16:20:15.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:16.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:16.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.TypeCheck ===949
16:20:16.158 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (functionType.makesStructs() && !rvalueType.isStruct()) {
              String funName = functionType.getTypeOfThis().toString();
              compiler.report(t.makeError(assign, CONFLICTING_SHAPE_TYPE,
                                          "struct", funName));
            }
if (functionType.makesStructs() || !rvalueType.isStruct()) {
              String funName = functionType.getTypeOfThis().toString();
              compiler.report(t.makeError(assign, CONFLICTING_SHAPE_TYPE,
                                          "struct", funName));
            }
16:20:16.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:17.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (functionType != null) {


}

if (rvalueType != null) {


}

16:20:17.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:18.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:18.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:19.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (functionType == null) {
    return;
}

if (functionType == null) {
    throw new IllegalArgumentException("Empty variable: " + functionType);
}

if (rvalueType == null) {
    return;
}

if (rvalueType == null) {
    throw new IllegalArgumentException("Empty variable: " + rvalueType);
}

16:20:19.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:20.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:20.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:21.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:21.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:22.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:22.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:23.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (functionType.makesStructs() && !rvalueType.isStruct()) {
              String funName = functionType.getTypeOfThis().toString();
              compiler.report(t.makeError(assign, CONFLICTING_SHAPE_TYPE,
                                          "struct", funName));
            }
	JSType rvalueType = rvalue.getJSType();
            validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
            // Only assign structs to the prototype of a @struct constructor
            
null
if (functionType.makesStructs() && !rvalueType.isStruct()) {
              String funName = functionType.getTypeOfThis().toString();
              compiler.report(t.makeError(assign, CONFLICTING_SHAPE_TYPE,
                                          "struct", funName));
            }
	validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
            // Only assign structs to the prototype of a @struct constructor
            
null

            return;
	if (functionType.makesStructs() && !rvalueType.isStruct()) {
              String funName = functionType.getTypeOfThis().toString();
              compiler.report(t.makeError(assign, CONFLICTING_SHAPE_TYPE,
                                          "struct", funName));
            }

MOVE-BUGGY-STATEMENT
16:20:23.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:24.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:24.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:25.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:25.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:26.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:20:26.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:27.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:27.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.TypeCheck ===946
16:20:27.251 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(true, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(false, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, true, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, false, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, true, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, false, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                true, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                false, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, true);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, false);
16:20:27.252 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:28.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:28.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:29.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:29.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:30.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:30.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:31.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:31.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:32.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:32.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:33.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:33.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:34.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:34.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:35.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:35.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:36.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:36.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:37.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
validator.expectObject(functionType, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(pname, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(property, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(objectJsType, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(object, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(lvalue, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(info, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(assign, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(UNEXPECTED_TOKEN, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(DETERMINISTIC_TEST, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INEXISTENT_ENUM_ELEMENT, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INEXISTENT_PROPERTY, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INEXISTENT_PROPERTY_WITH_SUGGESTION, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(NOT_A_CONSTRUCTOR, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(BIT_OPERATION, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(NOT_CALLABLE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(CONSTRUCTOR_NOT_CALLABLE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(FUNCTION_MASKS_VARIABLE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(MULTIPLE_VAR_DEF, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(ENUM_DUP, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(ENUM_NOT_CONSTANT, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INVALID_INTERFACE_MEMBER_DECLARATION, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INTERFACE_FUNCTION_NOT_EMPTY, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(CONFLICTING_SHAPE_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(CONFLICTING_EXTENDED_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(CONFLICTING_IMPLEMENTED_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(BAD_IMPLEMENTED_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(HIDDEN_SUPERCLASS_PROPERTY, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(HIDDEN_INTERFACE_PROPERTY, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(HIDDEN_SUPERCLASS_PROPERTY_MISMATCH, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(UNKNOWN_OVERRIDE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INTERFACE_METHOD_OVERRIDE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(UNKNOWN_EXPR_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(UNRESOLVED_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(WRONG_ARGUMENT_COUNT, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(ILLEGAL_IMPLICIT_CAST, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INCOMPATIBLE_EXTENDED_PROPERTY_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(EXPECTED_THIS_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(IN_USED_WITH_STRUCT, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(ILLEGAL_PROPERTY_CREATION, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(ILLEGAL_OBJLIT_KEY, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(ALL_DIAGNOSTICS, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.compiler, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.reverseInterpreter, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.typeRegistry, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.topScope, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.scopeCreator, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.reportMissingOverride, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.reportUnknownTypes, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.reportMissingProperties, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.inferJSDocInfo, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.typedCount, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.nullCount, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.unknownCount, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.inExterns, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.noTypeCheckSection, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.editDistance, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject( rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(functionType, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(pname, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(property, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(objectJsType, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(object, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(lvalue, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(info, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(assign, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(UNEXPECTED_TOKEN, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(DETERMINISTIC_TEST, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INEXISTENT_ENUM_ELEMENT, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INEXISTENT_PROPERTY, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INEXISTENT_PROPERTY_WITH_SUGGESTION, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(NOT_A_CONSTRUCTOR, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(BIT_OPERATION, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(NOT_CALLABLE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(CONSTRUCTOR_NOT_CALLABLE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(FUNCTION_MASKS_VARIABLE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(MULTIPLE_VAR_DEF, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(ENUM_DUP, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(ENUM_NOT_CONSTANT, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INVALID_INTERFACE_MEMBER_DECLARATION, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INTERFACE_FUNCTION_NOT_EMPTY, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(CONFLICTING_SHAPE_TYPE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(CONFLICTING_EXTENDED_TYPE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(CONFLICTING_IMPLEMENTED_TYPE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(BAD_IMPLEMENTED_TYPE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(HIDDEN_SUPERCLASS_PROPERTY, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(HIDDEN_INTERFACE_PROPERTY, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(HIDDEN_SUPERCLASS_PROPERTY_MISMATCH, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(UNKNOWN_OVERRIDE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INTERFACE_METHOD_OVERRIDE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(UNKNOWN_EXPR_TYPE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(UNRESOLVED_TYPE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(WRONG_ARGUMENT_COUNT, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(ILLEGAL_IMPLICIT_CAST, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(INCOMPATIBLE_EXTENDED_PROPERTY_TYPE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(EXPECTED_THIS_TYPE, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(IN_USED_WITH_STRUCT, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(ILLEGAL_PROPERTY_CREATION, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(ILLEGAL_OBJLIT_KEY, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(ALL_DIAGNOSTICS, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.compiler, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.reverseInterpreter, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.typeRegistry, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.topScope, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.scopeCreator, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.reportMissingOverride, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.reportUnknownTypes, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.reportMissingProperties, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.inferJSDocInfo, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.typedCount, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.nullCount, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.unknownCount, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.inExterns, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.noTypeCheckSection, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(this.editDistance, t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, functionType, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, pname, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, property, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, objectJsType, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, object, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, lvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, info, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, assign, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, UNEXPECTED_TOKEN, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, DETERMINISTIC_TEST, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INEXISTENT_ENUM_ELEMENT, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INEXISTENT_PROPERTY, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INEXISTENT_PROPERTY_WITH_SUGGESTION, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, NOT_A_CONSTRUCTOR, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, BIT_OPERATION, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, NOT_CALLABLE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, CONSTRUCTOR_NOT_CALLABLE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, FUNCTION_MASKS_VARIABLE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, MULTIPLE_VAR_DEF, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, ENUM_DUP, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, ENUM_NOT_CONSTANT, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INVALID_INTERFACE_MEMBER_DECLARATION, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INTERFACE_FUNCTION_NOT_EMPTY, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, CONFLICTING_SHAPE_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, CONFLICTING_EXTENDED_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, CONFLICTING_IMPLEMENTED_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, BAD_IMPLEMENTED_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, HIDDEN_SUPERCLASS_PROPERTY, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, HIDDEN_INTERFACE_PROPERTY, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, UNKNOWN_OVERRIDE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INTERFACE_METHOD_OVERRIDE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, UNKNOWN_EXPR_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, UNRESOLVED_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, WRONG_ARGUMENT_COUNT, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, ILLEGAL_IMPLICIT_CAST, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, EXPECTED_THIS_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, IN_USED_WITH_STRUCT, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, ILLEGAL_PROPERTY_CREATION, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, ILLEGAL_OBJLIT_KEY, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, ALL_DIAGNOSTICS, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.compiler, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.reverseInterpreter, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.typeRegistry, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.topScope, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.scopeCreator, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.reportMissingOverride, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.reportUnknownTypes, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.reportMissingProperties, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.inferJSDocInfo, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.typedCount, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.nullCount, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.unknownCount, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.inExterns, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.noTypeCheckSection, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.editDistance, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t,  rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, functionType, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, pname, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, property, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, objectJsType, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, object, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, lvalue, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, info, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, assign, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, UNEXPECTED_TOKEN, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, DETERMINISTIC_TEST, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INEXISTENT_ENUM_ELEMENT, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INEXISTENT_PROPERTY, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INEXISTENT_PROPERTY_WITH_SUGGESTION, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, NOT_A_CONSTRUCTOR, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, BIT_OPERATION, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, NOT_CALLABLE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, CONSTRUCTOR_NOT_CALLABLE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, FUNCTION_MASKS_VARIABLE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, MULTIPLE_VAR_DEF, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, ENUM_DUP, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, ENUM_NOT_CONSTANT, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INVALID_INTERFACE_MEMBER_DECLARATION, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INTERFACE_FUNCTION_NOT_EMPTY, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, CONFLICTING_SHAPE_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, CONFLICTING_EXTENDED_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, CONFLICTING_IMPLEMENTED_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, BAD_IMPLEMENTED_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, HIDDEN_SUPERCLASS_PROPERTY, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, HIDDEN_INTERFACE_PROPERTY, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, UNKNOWN_OVERRIDE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INTERFACE_METHOD_OVERRIDE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, UNKNOWN_EXPR_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, UNRESOLVED_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, WRONG_ARGUMENT_COUNT, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, ILLEGAL_IMPLICIT_CAST, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, EXPECTED_THIS_TYPE, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, IN_USED_WITH_STRUCT, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, ILLEGAL_PROPERTY_CREATION, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, ILLEGAL_OBJLIT_KEY, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, ALL_DIAGNOSTICS, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.compiler, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.reverseInterpreter, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.typeRegistry, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.topScope, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.scopeCreator, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.reportMissingOverride, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.reportUnknownTypes, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.reportMissingProperties, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.inferJSDocInfo, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.typedCount, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.nullCount, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.unknownCount, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.inExterns, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.noTypeCheckSection, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, this.editDistance, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, functionType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, pname,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, property,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, objectJsType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, object,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, lvalue,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, info,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, assign,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, UNEXPECTED_TOKEN,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, DETERMINISTIC_TEST,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INEXISTENT_ENUM_ELEMENT,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INEXISTENT_PROPERTY,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INEXISTENT_PROPERTY_WITH_SUGGESTION,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, NOT_A_CONSTRUCTOR,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, BIT_OPERATION,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, NOT_CALLABLE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, CONSTRUCTOR_NOT_CALLABLE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, FUNCTION_MASKS_VARIABLE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, MULTIPLE_VAR_DEF,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, ENUM_DUP,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, ENUM_NOT_CONSTANT,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INVALID_INTERFACE_MEMBER_DECLARATION,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INTERFACE_FUNCTION_NOT_EMPTY,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, CONFLICTING_SHAPE_TYPE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, CONFLICTING_EXTENDED_TYPE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, CONFLICTING_IMPLEMENTED_TYPE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, BAD_IMPLEMENTED_TYPE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, HIDDEN_SUPERCLASS_PROPERTY,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, HIDDEN_INTERFACE_PROPERTY,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, UNKNOWN_OVERRIDE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INTERFACE_METHOD_OVERRIDE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, UNKNOWN_EXPR_TYPE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, UNRESOLVED_TYPE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, WRONG_ARGUMENT_COUNT,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, ILLEGAL_IMPLICIT_CAST,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, EXPECTED_THIS_TYPE,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, IN_USED_WITH_STRUCT,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, ILLEGAL_PROPERTY_CREATION,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, ILLEGAL_OBJLIT_KEY,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, ALL_DIAGNOSTICS,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.compiler,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.reverseInterpreter,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.typeRegistry,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.topScope,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.scopeCreator,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.reportMissingOverride,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.reportUnknownTypes,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.reportMissingProperties,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.inferJSDocInfo,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.typedCount,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.nullCount,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.unknownCount,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.inExterns,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.noTypeCheckSection,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.editDistance,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, 
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, functionType, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, pname, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, property, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, objectJsType, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, object, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, lvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, info, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, assign, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, UNEXPECTED_TOKEN, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, DETERMINISTIC_TEST, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INEXISTENT_ENUM_ELEMENT, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INEXISTENT_PROPERTY, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INEXISTENT_PROPERTY_WITH_SUGGESTION, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, NOT_A_CONSTRUCTOR, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, BIT_OPERATION, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, NOT_CALLABLE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, CONSTRUCTOR_NOT_CALLABLE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, FUNCTION_MASKS_VARIABLE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, MULTIPLE_VAR_DEF, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, ENUM_DUP, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, ENUM_NOT_CONSTANT, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INVALID_INTERFACE_MEMBER_DECLARATION, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INTERFACE_FUNCTION_NOT_EMPTY, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, CONFLICTING_SHAPE_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, CONFLICTING_EXTENDED_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, CONFLICTING_IMPLEMENTED_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, BAD_IMPLEMENTED_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, HIDDEN_SUPERCLASS_PROPERTY, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, HIDDEN_INTERFACE_PROPERTY, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, UNKNOWN_OVERRIDE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INTERFACE_METHOD_OVERRIDE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, UNKNOWN_EXPR_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, UNRESOLVED_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, WRONG_ARGUMENT_COUNT, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, ILLEGAL_IMPLICIT_CAST, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, EXPECTED_THIS_TYPE, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, IN_USED_WITH_STRUCT, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, ILLEGAL_PROPERTY_CREATION, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, ILLEGAL_OBJLIT_KEY, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, ALL_DIAGNOSTICS, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.compiler, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.reverseInterpreter, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.typeRegistry, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.topScope, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.scopeCreator, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.reportMissingOverride, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.reportUnknownTypes, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.reportMissingProperties, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.inferJSDocInfo, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.typedCount, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.nullCount, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.unknownCount, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.inExterns, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.noTypeCheckSection, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, this.editDistance, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                functionType);
validator.expectObject(t, rvalue, rvalueType,
                pname);
validator.expectObject(t, rvalue, rvalueType,
                property);
validator.expectObject(t, rvalue, rvalueType,
                objectJsType);
validator.expectObject(t, rvalue, rvalueType,
                object);
validator.expectObject(t, rvalue, rvalueType,
                lvalue);
validator.expectObject(t, rvalue, rvalueType,
                info);
validator.expectObject(t, rvalue, rvalueType,
                assign);
validator.expectObject(t, rvalue, rvalueType,
                UNEXPECTED_TOKEN);
validator.expectObject(t, rvalue, rvalueType,
                DETERMINISTIC_TEST);
validator.expectObject(t, rvalue, rvalueType,
                INEXISTENT_ENUM_ELEMENT);
validator.expectObject(t, rvalue, rvalueType,
                INEXISTENT_PROPERTY);
validator.expectObject(t, rvalue, rvalueType,
                INEXISTENT_PROPERTY_WITH_SUGGESTION);
validator.expectObject(t, rvalue, rvalueType,
                NOT_A_CONSTRUCTOR);
validator.expectObject(t, rvalue, rvalueType,
                BIT_OPERATION);
validator.expectObject(t, rvalue, rvalueType,
                NOT_CALLABLE);
validator.expectObject(t, rvalue, rvalueType,
                CONSTRUCTOR_NOT_CALLABLE);
validator.expectObject(t, rvalue, rvalueType,
                FUNCTION_MASKS_VARIABLE);
validator.expectObject(t, rvalue, rvalueType,
                MULTIPLE_VAR_DEF);
validator.expectObject(t, rvalue, rvalueType,
                ENUM_DUP);
validator.expectObject(t, rvalue, rvalueType,
                ENUM_NOT_CONSTANT);
validator.expectObject(t, rvalue, rvalueType,
                INVALID_INTERFACE_MEMBER_DECLARATION);
validator.expectObject(t, rvalue, rvalueType,
                INTERFACE_FUNCTION_NOT_EMPTY);
validator.expectObject(t, rvalue, rvalueType,
                CONFLICTING_SHAPE_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                CONFLICTING_EXTENDED_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                CONFLICTING_IMPLEMENTED_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                BAD_IMPLEMENTED_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                HIDDEN_SUPERCLASS_PROPERTY);
validator.expectObject(t, rvalue, rvalueType,
                HIDDEN_INTERFACE_PROPERTY);
validator.expectObject(t, rvalue, rvalueType,
                HIDDEN_SUPERCLASS_PROPERTY_MISMATCH);
validator.expectObject(t, rvalue, rvalueType,
                UNKNOWN_OVERRIDE);
validator.expectObject(t, rvalue, rvalueType,
                INTERFACE_METHOD_OVERRIDE);
validator.expectObject(t, rvalue, rvalueType,
                UNKNOWN_EXPR_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                UNRESOLVED_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                WRONG_ARGUMENT_COUNT);
validator.expectObject(t, rvalue, rvalueType,
                ILLEGAL_IMPLICIT_CAST);
validator.expectObject(t, rvalue, rvalueType,
                INCOMPATIBLE_EXTENDED_PROPERTY_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                EXPECTED_THIS_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                IN_USED_WITH_STRUCT);
validator.expectObject(t, rvalue, rvalueType,
                ILLEGAL_PROPERTY_CREATION);
validator.expectObject(t, rvalue, rvalueType,
                ILLEGAL_OBJLIT_KEY);
validator.expectObject(t, rvalue, rvalueType,
                ALL_DIAGNOSTICS);
validator.expectObject(t, rvalue, rvalueType,
                this.compiler);
validator.expectObject(t, rvalue, rvalueType,
                this.reverseInterpreter);
validator.expectObject(t, rvalue, rvalueType,
                this.typeRegistry);
validator.expectObject(t, rvalue, rvalueType,
                this.topScope);
validator.expectObject(t, rvalue, rvalueType,
                this.scopeCreator);
validator.expectObject(t, rvalue, rvalueType,
                this.reportMissingOverride);
validator.expectObject(t, rvalue, rvalueType,
                this.reportUnknownTypes);
validator.expectObject(t, rvalue, rvalueType,
                this.reportMissingProperties);
validator.expectObject(t, rvalue, rvalueType,
                this.inferJSDocInfo);
validator.expectObject(t, rvalue, rvalueType,
                this.typedCount);
validator.expectObject(t, rvalue, rvalueType,
                this.nullCount);
validator.expectObject(t, rvalue, rvalueType,
                this.unknownCount);
validator.expectObject(t, rvalue, rvalueType,
                this.inExterns);
validator.expectObject(t, rvalue, rvalueType,
                this.noTypeCheckSection);
validator.expectObject(t, rvalue, rvalueType,
                this.editDistance);
validator.expectObject(t, rvalue, rvalueType,
                );
validator.expectObject(t, rvalue, rvalueType,
                functionType, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                pname, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                property, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                objectJsType, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                object, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                lvalue, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                info, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                assign, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                UNEXPECTED_TOKEN, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                DETERMINISTIC_TEST, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                INEXISTENT_ENUM_ELEMENT, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                INEXISTENT_PROPERTY, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                INEXISTENT_PROPERTY_WITH_SUGGESTION, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                NOT_A_CONSTRUCTOR, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                BIT_OPERATION, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                NOT_CALLABLE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                CONSTRUCTOR_NOT_CALLABLE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                FUNCTION_MASKS_VARIABLE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                MULTIPLE_VAR_DEF, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                ENUM_DUP, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                ENUM_NOT_CONSTANT, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                INVALID_INTERFACE_MEMBER_DECLARATION, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                INTERFACE_FUNCTION_NOT_EMPTY, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                CONFLICTING_SHAPE_TYPE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                CONFLICTING_EXTENDED_TYPE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                CONFLICTING_IMPLEMENTED_TYPE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                BAD_IMPLEMENTED_TYPE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                HIDDEN_SUPERCLASS_PROPERTY, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                HIDDEN_INTERFACE_PROPERTY, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                HIDDEN_SUPERCLASS_PROPERTY_MISMATCH, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                UNKNOWN_OVERRIDE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                INTERFACE_METHOD_OVERRIDE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                UNKNOWN_EXPR_TYPE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                UNRESOLVED_TYPE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                WRONG_ARGUMENT_COUNT, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                ILLEGAL_IMPLICIT_CAST, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                INCOMPATIBLE_EXTENDED_PROPERTY_TYPE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                EXPECTED_THIS_TYPE, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                IN_USED_WITH_STRUCT, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                ILLEGAL_PROPERTY_CREATION, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                ILLEGAL_OBJLIT_KEY, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                ALL_DIAGNOSTICS, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.compiler, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.reverseInterpreter, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.typeRegistry, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.topScope, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.scopeCreator, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.reportMissingOverride, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.reportUnknownTypes, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.reportMissingProperties, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.inferJSDocInfo, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.typedCount, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.nullCount, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.unknownCount, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.inExterns, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.noTypeCheckSection, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                this.editDistance, OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, functionType);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, pname);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, property);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, objectJsType);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, object);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, lvalue);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, info);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, assign);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, UNEXPECTED_TOKEN);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, DETERMINISTIC_TEST);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, INEXISTENT_ENUM_ELEMENT);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, INEXISTENT_PROPERTY);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, INEXISTENT_PROPERTY_WITH_SUGGESTION);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, NOT_A_CONSTRUCTOR);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, BIT_OPERATION);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, NOT_CALLABLE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, CONSTRUCTOR_NOT_CALLABLE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, FUNCTION_MASKS_VARIABLE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, MULTIPLE_VAR_DEF);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, ENUM_DUP);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, ENUM_NOT_CONSTANT);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, INVALID_INTERFACE_MEMBER_DECLARATION);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, INTERFACE_FUNCTION_NOT_EMPTY);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, CONFLICTING_SHAPE_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, CONFLICTING_EXTENDED_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, CONFLICTING_IMPLEMENTED_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, BAD_IMPLEMENTED_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, HIDDEN_SUPERCLASS_PROPERTY);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, HIDDEN_INTERFACE_PROPERTY);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, HIDDEN_SUPERCLASS_PROPERTY_MISMATCH);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, UNKNOWN_OVERRIDE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, INTERFACE_METHOD_OVERRIDE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, UNKNOWN_EXPR_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, UNRESOLVED_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, WRONG_ARGUMENT_COUNT);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, ILLEGAL_IMPLICIT_CAST);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, EXPECTED_THIS_TYPE);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, IN_USED_WITH_STRUCT);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, ILLEGAL_PROPERTY_CREATION);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, ILLEGAL_OBJLIT_KEY);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, ALL_DIAGNOSTICS);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.compiler);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.reverseInterpreter);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.typeRegistry);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.topScope);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.scopeCreator);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.reportMissingOverride);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.reportUnknownTypes);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.reportMissingProperties);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.inferJSDocInfo);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.typedCount);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.nullCount);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.unknownCount);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.inExterns);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.noTypeCheckSection);
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT, this.editDistance);
16:20:37.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:38.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:38.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:39.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:39.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:40.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:40.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:41.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:41.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:41.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:41.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:42.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:42.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:43.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:43.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:44.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:44.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:45.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:45.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:46.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:46.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:47.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:47.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:48.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:48.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:49.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:49.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:50.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:50.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:51.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:51.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:52.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:52.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:53.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:53.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:54.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:54.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:55.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:55.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:56.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:56.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:57.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:57.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:58.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:58.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:20:59.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:20:59.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:00.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:00.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:01.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:01.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:02.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:02.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:03.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:03.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:04.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:04.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:05.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:05.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:06.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:06.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:07.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:07.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:08.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:08.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:09.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:09.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:10.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:10.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:11.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:11.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:12.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:12.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:13.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:13.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:14.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:14.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:15.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:15.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:16.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:16.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:17.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:17.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:18.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:18.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:19.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:19.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:20.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:20.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:21.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:21.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:22.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:22.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:23.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:23.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:24.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:24.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:25.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:25.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:26.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:26.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:27.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:27.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:28.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:28.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:29.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:29.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:30.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:30.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:31.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:31.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:32.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:32.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:33.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:33.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:34.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:34.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:35.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:35.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:36.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:36.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:37.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:37.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:38.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:38.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:39.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:39.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:40.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:40.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:41.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:41.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:41.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:42.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:42.971 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:42.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:43.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:43.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:44.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:44.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:45.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:45.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:46.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:46.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:47.878 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:47.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:48.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:48.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:49.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:49.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:50.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:50.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:51.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:51.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:52.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:52.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:53.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:53.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:54.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:54.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:55.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:55.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:56.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:56.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:57.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:57.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:58.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:58.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:21:59.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:21:59.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:00.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:00.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:01.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:01.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:02.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:02.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:03.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:03.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:04.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:04.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:05.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:05.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:06.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:06.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:07.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:07.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:08.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:08.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:09.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:09.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:10.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:10.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:11.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:11.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:12.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:12.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:13.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:13.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:14.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:14.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:15.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:15.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:16.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:16.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:17.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:17.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:18.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:18.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:19.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:19.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:20.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:20.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:21.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:21.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:22.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:22.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:23.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:23.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:24.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:24.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:25.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:25.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:26.436 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:26.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:27.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:27.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:28.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:28.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:29.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:29.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:30.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:30.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:31.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:31.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:32.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:32.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:33.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:33.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:34.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:34.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:35.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:35.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:36.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:36.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:37.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:37.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:38.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:38.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:39.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:39.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:40.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:40.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:41.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:41.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:42.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:42.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:43.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:43.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:44.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:44.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:45.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:45.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:46.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:46.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:47.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:47.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:48.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:48.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:49.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:49.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:50.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:50.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:51.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:51.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:52.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:52.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:53.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:53.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:54.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:54.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:54.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:54.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:55.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:55.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:56.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:56.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:57.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:57.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:58.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:58.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:22:59.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:22:59.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:00.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:00.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:01.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:01.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:02.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:02.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:03.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:03.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:04.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:04.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:05.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:05.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:06.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:06.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:07.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:07.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:08.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:08.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:09.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:09.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:10.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:10.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:11.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:11.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:12.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:12.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:13.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:13.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:14.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:14.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:15.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:15.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:16.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:16.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:17.511 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:17.511 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:18.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:18.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:19.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:19.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:20.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:20.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:21.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:21.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:22.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:22.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:23.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:23.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:24.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:24.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:25.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:25.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:26.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:26.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:27.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:27.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:28.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:28.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:29.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:29.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:30.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:30.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:31.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:31.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:32.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:32.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:33.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:33.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:34.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:34.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:35.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:35.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:36.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:36.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:37.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:37.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:38.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:38.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:39.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:39.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:40.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:40.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:41.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:41.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:41.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:41.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:42.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:42.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:43.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:43.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:44.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:44.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:45.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:45.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:46.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:46.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:47.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:47.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:48.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:48.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:49.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:49.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:50.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:50.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:51.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:51.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:52.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:52.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:53.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:53.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:54.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:54.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:55.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:55.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:56.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:56.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:57.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:57.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:58.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:58.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:23:59.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:23:59.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:00.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:00.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:01.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:01.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:02.318 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:02.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:03.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:03.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:04.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:04.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:05.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:05.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:06.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:06.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:07.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:07.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:08.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:08.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:09.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:09.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:10.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:10.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:11.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:11.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:12.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:12.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:13.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:13.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:14.252 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:14.252 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:15.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:15.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:16.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:16.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:17.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:17.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:18.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:18.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:19.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:19.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:20.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:20.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:21.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:21.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:22.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:22.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:23.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:23.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:24.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:24.157 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:25.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:25.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:26.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:26.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:27.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:27.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:28.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:28.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:29.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:29.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:30.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:30.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:31.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:31.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:32.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:32.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:33.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:33.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:34.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:34.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:35.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:35.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:36.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:36.035 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:37.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:37.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:38.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:38.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:38.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:38.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:39.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:39.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:40.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:40.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:41.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:41.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:42.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:42.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:43.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:43.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:44.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:44.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:45.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:45.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:46.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:46.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:47.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:47.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:48.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:48.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:49.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:49.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:50.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:50.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:51.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:51.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:52.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:52.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:53.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:53.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:54.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:54.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:55.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:55.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:56.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:56.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:57.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:57.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:58.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:58.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:24:59.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:24:59.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:00.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:00.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:01.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:01.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:02.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:02.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:03.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:03.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:04.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:04.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:05.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:05.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:06.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:06.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:07.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:07.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:08.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:08.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:09.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:09.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:10.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:10.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:11.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:11.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:12.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:12.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:13.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:13.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:14.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:14.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:15.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:15.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:16.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:16.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:17.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:17.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:18.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:18.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:19.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:19.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:20.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:20.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:21.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:21.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:22.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:22.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:23.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:23.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:24.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:24.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:25.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:25.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:26.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:26.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:27.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:27.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:28.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:28.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:29.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:29.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:30.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:30.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:31.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:31.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:32.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:32.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:33.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:33.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:34.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:34.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:35.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:35.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:36.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:36.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:37.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:37.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:38.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:38.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:39.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:39.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:40.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:40.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:41.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:41.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:42.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:42.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:43.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:43.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:44.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:44.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:45.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:45.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:46.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:46.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:47.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:47.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:48.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:48.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:49.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:49.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:50.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:50.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:51.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:51.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:52.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:52.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:53.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:53.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:53.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:53.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:54.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:54.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:55.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:55.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:56.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:56.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:57.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:57.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:58.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:58.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:25:59.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:25:59.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:00.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:00.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:01.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:01.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:02.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:02.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:03.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:03.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:04.753 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:04.753 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:05.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:05.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:06.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:06.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:07.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:07.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:08.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:08.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:09.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:09.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:10.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:10.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:11.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:11.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:12.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:12.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:13.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:13.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:14.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:14.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:15.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:15.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:16.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:16.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:17.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:17.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:18.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:18.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:19.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:19.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:20.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:20.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:21.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:21.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:22.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:22.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:23.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:23.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:24.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:24.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:25.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:25.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:26.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:26.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:27.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:27.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:28.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:28.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:29.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:29.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:30.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:30.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:31.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:31.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:32.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:32.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:33.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:34.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:35.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:35.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:36.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:36.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:37.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:37.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:38.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:38.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:39.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:39.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:40.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:40.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:41.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:41.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:42.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:42.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:42.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:42.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:43.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:43.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:44.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:44.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:45.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:45.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:46.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:46.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:47.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:47.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:48.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:48.897 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:49.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:49.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:50.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:50.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:51.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:51.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:52.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:52.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:53.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:53.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:54.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:54.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:55.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:55.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:56.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:56.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:57.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:57.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:58.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:58.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:26:59.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:26:59.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:00.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:00.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:01.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:01.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:02.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:02.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:03.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:03.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:04.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:04.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:05.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:05.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:06.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:06.511 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:07.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:07.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:08.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:08.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:09.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:09.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:10.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:10.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:11.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:11.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:12.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:12.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:13.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:13.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:13.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:13.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:14.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:14.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:16.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:16.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:17.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:17.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:18.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:18.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:19.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:19.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:20.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:20.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:21.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:21.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:22.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:22.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:23.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:23.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:24.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:24.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:25.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:25.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:26.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:26.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:27.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:27.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:28.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:28.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:29.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:29.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:30.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:30.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:31.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:31.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:32.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:32.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:33.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:33.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:34.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:34.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:35.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:35.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:36.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:36.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:37.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:37.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:38.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:38.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:39.157 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:39.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:40.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:40.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:41.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:41.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:42.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:42.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:43.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:43.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:44.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:44.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:45.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:45.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:46.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:46.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:47.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:47.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:48.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:48.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:49.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:49.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:50.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:50.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:50.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:50.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:51.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:51.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:52.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:52.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:53.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:53.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:54.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:54.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:55.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:55.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:56.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:56.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:57.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:57.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:58.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:58.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:27:59.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:27:59.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:00.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:00.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:01.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:01.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:02.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:02.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:03.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:03.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:04.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:04.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:05.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:05.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:06.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:06.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:07.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:07.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:08.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:08.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:09.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:09.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:10.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:10.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:11.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:11.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:12.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:12.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:13.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:13.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:14.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:14.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:15.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:15.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:16.877 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:16.878 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:17.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:17.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:18.897 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:18.897 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:19.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:19.928 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:20.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:20.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:21.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:21.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:22.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:22.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:23.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:23.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:24.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:24.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:25.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:25.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:26.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:26.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:28.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:28.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:29.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:29.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:30.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:30.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:31.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:31.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:32.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:32.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:33.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:33.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:34.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:34.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:35.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:35.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:36.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:36.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:37.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:37.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:38.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:38.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:39.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:39.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:40.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:40.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:41.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:41.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:42.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:42.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:43.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:43.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:44.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:44.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:44.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:44.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:45.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:45.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:46.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:46.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:47.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:47.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:48.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:48.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:49.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:49.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:50.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:50.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:51.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:51.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:52.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:52.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:53.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:53.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:54.753 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:54.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:55.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:55.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:56.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:56.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:57.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:57.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:58.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:58.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:28:59.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:28:59.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:00.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:00.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:01.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:01.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:02.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:02.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:03.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:03.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:04.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:04.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:05.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:05.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:06.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:06.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:07.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
validator.expectActualObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectAnyObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectString(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectNumber(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectBitwiseable(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
validator.expectStringOrNumber(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
16:29:07.693 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:08.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:08.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:09.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:09.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:10.666 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:10.666 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:11.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:11.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:12.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:12.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:13.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (validator != null) {


}

if (t != null) {


}

if (rvalue != null) {


}

if (rvalueType != null) {


}

if (OVERRIDING_PROTOTYPE_WITH_NON_OBJECT != null) {


}

16:29:13.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:14.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:14.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:15.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:15.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:16.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:16.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:17.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:17.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:18.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (validator == null) {
    return;
}

if (validator == null) {
    throw new IllegalArgumentException("Empty variable: " + validator);
}

if (t == null) {
    return;
}

if (t == null) {
    throw new IllegalArgumentException("Empty variable: " + t);
}

if (rvalue == null) {
    return;
}

if (rvalue == null) {
    throw new IllegalArgumentException("Empty variable: " + rvalue);
}

if (rvalueType == null) {
    return;
}

if (rvalueType == null) {
    throw new IllegalArgumentException("Empty variable: " + rvalueType);
}

if (OVERRIDING_PROTOTYPE_WITH_NON_OBJECT == null) {
    return;
}

if (OVERRIDING_PROTOTYPE_WITH_NON_OBJECT == null) {
    throw new IllegalArgumentException("Empty variable: " + OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
}

16:29:18.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:19.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:19.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:20.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:20.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:21.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:21.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:22.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:22.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:23.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:23.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:24.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:24.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:25.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:25.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:26.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:26.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:27.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:27.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:28.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
	JSType rvalueType = rvalue.getJSType();
            
null

            // Only assign structs to the prototype of a @struct constructor
            if (functionType.makesStructs() && !rvalueType.isStruct()) {
              String funName = functionType.getTypeOfThis().toString();
              compiler.report(t.makeError(assign, CONFLICTING_SHAPE_TYPE,
                                          "struct", funName));
            }
	validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);

MOVE-BUGGY-STATEMENT

            // Only assign structs to the prototype of a @struct constructor
            if (functionType.makesStructs() && !rvalueType.isStruct()) {
              String funName = functionType.getTypeOfThis().toString();
              compiler.report(t.makeError(assign, CONFLICTING_SHAPE_TYPE,
                                          "struct", funName));
            }
            return;
	validator.expectObject(t, rvalue, rvalueType,
                OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);

MOVE-BUGGY-STATEMENT
16:29:28.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:29.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:29.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:30.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:30.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:31.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:29:31.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:32.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:32.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.TypeCheck ===945
16:29:32.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
JSType rvalueType = rvalue.getJSType();
JSType rvalueType = rvalue.getInputId();
JSType rvalueType = rvalue.children();
JSType rvalueType = rvalue.siblings();
JSType rvalueType = rvalue.getJSDocInfo();
JSType rvalueType = rvalue.getAncestors();
JSType rvalueType = rvalue.getFirstChild();
JSType rvalueType = rvalue.getLastChild();
JSType rvalueType = rvalue.getNext();
JSType rvalueType = rvalue.getLastSibling();
JSType rvalueType = rvalue.getParent();
JSType rvalueType = rvalue.detachFromParent();
JSType rvalueType = rvalue.removeFirstChild();
JSType rvalueType = rvalue.removeChildren();
JSType rvalueType = rvalue.cloneNode();
JSType rvalueType = rvalue.cloneTree();
JSType rvalueType = rvalue.getString();
JSType rvalueType = rvalue.toString();
JSType rvalueType = rvalue.toStringTree();
JSType rvalueType = rvalue.toStringTreeImpl();
JSType rvalueType = rvalue.getSourceFileName();
JSType rvalueType = rvalue.getQualifiedName();
JSType rvalueType = rvalue.getType();
JSType rvalueType = rvalue.getLength();
JSType rvalueType = rvalue.getLineno();
JSType rvalueType = rvalue.getCharno();
JSType rvalueType = rvalue.getSourceOffset();
JSType rvalueType = rvalue.getSourcePosition();
JSType rvalueType = rvalue.getChildCount();
JSType rvalueType = rvalue.getChangeTime();
JSType rvalueType = rvalue.getSideEffectFlags();
JSType rvalueType = rvalue.getPropListHeadForTesting();
JSType rvalueType = rvalue.getSortedPropTypes();
JSType rvalueType = rvalue.detachChildren();
JSType rvalueType = rvalue.setQuotedString();
JSType rvalueType = rvalue.hasChildren();
JSType rvalueType = rvalue.isFromExterns();
JSType rvalueType = rvalue.hasOneChild();
JSType rvalueType = rvalue.hasMoreThanOneChild();
JSType rvalueType = rvalue.isQualifiedName();
JSType rvalueType = rvalue.isUnscopedQualifiedName();
JSType rvalueType = rvalue.isVarArgs();
JSType rvalueType = rvalue.isOptionalArg();
JSType rvalueType = rvalue.isSyntheticBlock();
JSType rvalueType = rvalue.wasEmptyNode();
JSType rvalueType = rvalue.isOnlyModifiesThisCall();
JSType rvalueType = rvalue.isOnlyModifiesArgumentsCall();
JSType rvalueType = rvalue.isNoSideEffectsCall();
JSType rvalueType = rvalue.isLocalResultCall();
JSType rvalueType = rvalue.mayMutateArguments();
JSType rvalueType = rvalue.mayMutateGlobalStateOrThrow();
JSType rvalueType = rvalue.isQuotedString();
JSType rvalueType = rvalue.isAdd();
JSType rvalueType = rvalue.isAnd();
JSType rvalueType = rvalue.isArrayLit();
JSType rvalueType = rvalue.isAssign();
JSType rvalueType = rvalue.isAssignAdd();
JSType rvalueType = rvalue.isBlock();
JSType rvalueType = rvalue.isBreak();
JSType rvalueType = rvalue.isCall();
JSType rvalueType = rvalue.isCase();
JSType rvalueType = rvalue.isCast();
JSType rvalueType = rvalue.isCatch();
JSType rvalueType = rvalue.isComma();
JSType rvalueType = rvalue.isContinue();
JSType rvalueType = rvalue.isDebugger();
JSType rvalueType = rvalue.isDec();
JSType rvalueType = rvalue.isDefaultCase();
JSType rvalueType = rvalue.isDelProp();
JSType rvalueType = rvalue.isDo();
JSType rvalueType = rvalue.isEmpty();
JSType rvalueType = rvalue.isExprResult();
JSType rvalueType = rvalue.isFalse();
JSType rvalueType = rvalue.isFor();
JSType rvalueType = rvalue.isFunction();
JSType rvalueType = rvalue.isGetterDef();
JSType rvalueType = rvalue.isGetElem();
JSType rvalueType = rvalue.isGetProp();
JSType rvalueType = rvalue.isHook();
JSType rvalueType = rvalue.isIf();
JSType rvalueType = rvalue.isIn();
JSType rvalueType = rvalue.isInc();
JSType rvalueType = rvalue.isInstanceOf();
JSType rvalueType = rvalue.isLabel();
JSType rvalueType = rvalue.isLabelName();
JSType rvalueType = rvalue.isName();
JSType rvalueType = rvalue.isNE();
JSType rvalueType = rvalue.isNew();
JSType rvalueType = rvalue.isNot();
JSType rvalueType = rvalue.isNull();
JSType rvalueType = rvalue.isNumber();
JSType rvalueType = rvalue.isObjectLit();
JSType rvalueType = rvalue.isOr();
JSType rvalueType = rvalue.isParamList();
JSType rvalueType = rvalue.isRegExp();
JSType rvalueType = rvalue.isReturn();
JSType rvalueType = rvalue.isScript();
JSType rvalueType = rvalue.isSetterDef();
JSType rvalueType = rvalue.isString();
JSType rvalueType = rvalue.isStringKey();
JSType rvalueType = rvalue.isSwitch();
JSType rvalueType = rvalue.isThis();
JSType rvalueType = rvalue.isThrow();
JSType rvalueType = rvalue.isTrue();
JSType rvalueType = rvalue.isTry();
JSType rvalueType = rvalue.isTypeOf();
JSType rvalueType = rvalue.isVar();
JSType rvalueType = rvalue.isVoid();
JSType rvalueType = rvalue.isWhile();
JSType rvalueType = rvalue.isWith();
JSType rvalueType = rvalue.getDirectives();
JSType rvalueType = rvalue.getStaticSourceFile();
JSType rvalueType = rvalue.getDouble();
JSType rvalueType = rvalue.getJsDocBuilderForNode();
16:29:33.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:34.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:34.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:35.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:35.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:36.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:36.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:37.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:37.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:38.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:38.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:39.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:39.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:40.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:40.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:41.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:41.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:42.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:42.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:43.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:43.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:44.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:44.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:45.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:45.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:45.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:45.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:46.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:46.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:47.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:47.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:48.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:48.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:49.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:49.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:50.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:50.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:51.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:51.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:52.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:52.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:53.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:53.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:54.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:54.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:55.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:55.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:56.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:56.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:57.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:57.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:58.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:58.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:29:59.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:29:59.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:00.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:00.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:01.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:01.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:02.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:02.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:03.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:03.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:04.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:04.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:05.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:05.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:06.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:06.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:07.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:07.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:08.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:08.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:09.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:09.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:10.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:10.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:11.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:11.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:12.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:12.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:13.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:13.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:14.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:14.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:15.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:15.398 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:16.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:16.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:17.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:17.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:18.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:18.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:19.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:19.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:20.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:20.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:21.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:21.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:22.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:22.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:23.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:23.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:24.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:24.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:25.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:25.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:26.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:26.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:27.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:27.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:28.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:28.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:29.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:29.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:30.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:30.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:31.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:31.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:32.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:32.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:33.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:33.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:34.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:34.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:35.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:35.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:36.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:36.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:37.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:37.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:38.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:38.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:39.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:39.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:40.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:40.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:41.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:41.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:42.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:42.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:43.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:43.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:44.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:44.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:45.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:45.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:46.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:46.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:47.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:47.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:48.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:48.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:49.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:49.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:50.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:50.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:51.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:51.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:52.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:52.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:53.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:53.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:54.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:54.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:55.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:55.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:56.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:56.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:57.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:57.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:58.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:58.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:30:59.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:30:59.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:00.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:00.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:01.157 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:01.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:02.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:02.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:03.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:03.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:04.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:04.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:05.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:05.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:06.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:06.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:07.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:07.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:08.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:08.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:09.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:09.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:10.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:10.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:11.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:11.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:12.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:12.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:13.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:13.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:14.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:14.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:15.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:15.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:16.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:16.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:17.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:17.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:18.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:18.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:19.197 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:19.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:20.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:20.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:21.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:21.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:22.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:22.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:23.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:23.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:24.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:24.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:25.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
JSType rvalueType = rvalue.getJSType(rvalueType);
JSType rvalueType = rvalue.getJSType(functionType);
JSType rvalueType = rvalue.getJSType(pname);
JSType rvalueType = rvalue.getJSType(property);
JSType rvalueType = rvalue.getJSType(objectJsType);
JSType rvalueType = rvalue.getJSType(object);
JSType rvalueType = rvalue.getJSType(lvalue);
JSType rvalueType = rvalue.getJSType(info);
JSType rvalueType = rvalue.getJSType(t);
JSType rvalueType = rvalue.getJSType(assign);
JSType rvalueType = rvalue.getJSType(UNEXPECTED_TOKEN);
JSType rvalueType = rvalue.getJSType(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
JSType rvalueType = rvalue.getJSType(DETERMINISTIC_TEST);
JSType rvalueType = rvalue.getJSType(INEXISTENT_ENUM_ELEMENT);
JSType rvalueType = rvalue.getJSType(INEXISTENT_PROPERTY);
JSType rvalueType = rvalue.getJSType(INEXISTENT_PROPERTY_WITH_SUGGESTION);
JSType rvalueType = rvalue.getJSType(NOT_A_CONSTRUCTOR);
JSType rvalueType = rvalue.getJSType(BIT_OPERATION);
JSType rvalueType = rvalue.getJSType(NOT_CALLABLE);
JSType rvalueType = rvalue.getJSType(CONSTRUCTOR_NOT_CALLABLE);
JSType rvalueType = rvalue.getJSType(FUNCTION_MASKS_VARIABLE);
JSType rvalueType = rvalue.getJSType(MULTIPLE_VAR_DEF);
JSType rvalueType = rvalue.getJSType(ENUM_DUP);
JSType rvalueType = rvalue.getJSType(ENUM_NOT_CONSTANT);
JSType rvalueType = rvalue.getJSType(INVALID_INTERFACE_MEMBER_DECLARATION);
JSType rvalueType = rvalue.getJSType(INTERFACE_FUNCTION_NOT_EMPTY);
JSType rvalueType = rvalue.getJSType(CONFLICTING_SHAPE_TYPE);
JSType rvalueType = rvalue.getJSType(CONFLICTING_EXTENDED_TYPE);
JSType rvalueType = rvalue.getJSType(CONFLICTING_IMPLEMENTED_TYPE);
JSType rvalueType = rvalue.getJSType(BAD_IMPLEMENTED_TYPE);
JSType rvalueType = rvalue.getJSType(HIDDEN_SUPERCLASS_PROPERTY);
JSType rvalueType = rvalue.getJSType(HIDDEN_INTERFACE_PROPERTY);
JSType rvalueType = rvalue.getJSType(HIDDEN_SUPERCLASS_PROPERTY_MISMATCH);
JSType rvalueType = rvalue.getJSType(UNKNOWN_OVERRIDE);
JSType rvalueType = rvalue.getJSType(INTERFACE_METHOD_OVERRIDE);
JSType rvalueType = rvalue.getJSType(UNKNOWN_EXPR_TYPE);
JSType rvalueType = rvalue.getJSType(UNRESOLVED_TYPE);
JSType rvalueType = rvalue.getJSType(WRONG_ARGUMENT_COUNT);
JSType rvalueType = rvalue.getJSType(ILLEGAL_IMPLICIT_CAST);
JSType rvalueType = rvalue.getJSType(INCOMPATIBLE_EXTENDED_PROPERTY_TYPE);
JSType rvalueType = rvalue.getJSType(EXPECTED_THIS_TYPE);
JSType rvalueType = rvalue.getJSType(IN_USED_WITH_STRUCT);
JSType rvalueType = rvalue.getJSType(ILLEGAL_PROPERTY_CREATION);
JSType rvalueType = rvalue.getJSType(ILLEGAL_OBJLIT_KEY);
JSType rvalueType = rvalue.getJSType(ALL_DIAGNOSTICS);
JSType rvalueType = rvalue.getJSType(this.compiler);
JSType rvalueType = rvalue.getJSType(this.validator);
JSType rvalueType = rvalue.getJSType(this.reverseInterpreter);
JSType rvalueType = rvalue.getJSType(this.typeRegistry);
JSType rvalueType = rvalue.getJSType(this.topScope);
JSType rvalueType = rvalue.getJSType(this.scopeCreator);
JSType rvalueType = rvalue.getJSType(this.reportMissingOverride);
JSType rvalueType = rvalue.getJSType(this.reportUnknownTypes);
JSType rvalueType = rvalue.getJSType(this.reportMissingProperties);
JSType rvalueType = rvalue.getJSType(this.inferJSDocInfo);
JSType rvalueType = rvalue.getJSType(this.typedCount);
JSType rvalueType = rvalue.getJSType(this.nullCount);
JSType rvalueType = rvalue.getJSType(this.unknownCount);
JSType rvalueType = rvalue.getJSType(this.inExterns);
JSType rvalueType = rvalue.getJSType(this.noTypeCheckSection);
JSType rvalueType = rvalue.getJSType(this.editDistance);
16:31:25.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:26.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:26.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:27.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:27.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:28.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:28.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:29.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:29.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:30.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:30.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:31.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:31.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:32.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:32.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:33.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:33.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:34.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:34.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:35.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:35.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:36.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:36.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:37.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:37.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:38.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:38.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:39.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:39.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:40.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:40.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:41.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:41.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:42.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:42.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:43.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:43.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:43.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:43.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:44.945 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:44.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:45.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:45.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:46.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:46.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:47.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:47.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:48.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:48.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:49.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:49.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:50.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:50.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:51.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:51.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:52.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:52.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:53.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:53.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:54.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:54.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:55.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:55.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:56.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:56.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:57.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:57.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:58.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:58.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:31:59.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:31:59.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:00.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:00.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:01.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:01.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:02.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:02.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:03.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:03.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:04.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:04.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:05.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:05.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:06.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:06.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:07.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:07.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:08.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:08.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:09.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:09.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:10.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:10.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:11.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:11.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:12.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:12.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:13.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:13.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:14.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:14.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:15.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:15.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:16.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:16.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:17.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:17.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:18.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:18.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:19.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:19.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:20.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:20.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:21.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:21.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:23.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:23.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:24.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:24.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:25.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:25.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:26.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
JSType rvalueType = rvalueType.getJSType();
JSType rvalueType = functionType.getJSType();
JSType rvalueType = pname.getJSType();
JSType rvalueType = property.getJSType();
JSType rvalueType = objectJsType.getJSType();
JSType rvalueType = object.getJSType();
JSType rvalueType = lvalue.getJSType();
JSType rvalueType = info.getJSType();
JSType rvalueType = t.getJSType();
JSType rvalueType = assign.getJSType();
JSType rvalueType = UNEXPECTED_TOKEN.getJSType();
JSType rvalueType = OVERRIDING_PROTOTYPE_WITH_NON_OBJECT.getJSType();
JSType rvalueType = DETERMINISTIC_TEST.getJSType();
JSType rvalueType = INEXISTENT_ENUM_ELEMENT.getJSType();
JSType rvalueType = INEXISTENT_PROPERTY.getJSType();
JSType rvalueType = INEXISTENT_PROPERTY_WITH_SUGGESTION.getJSType();
JSType rvalueType = NOT_A_CONSTRUCTOR.getJSType();
JSType rvalueType = BIT_OPERATION.getJSType();
JSType rvalueType = NOT_CALLABLE.getJSType();
JSType rvalueType = CONSTRUCTOR_NOT_CALLABLE.getJSType();
JSType rvalueType = FUNCTION_MASKS_VARIABLE.getJSType();
JSType rvalueType = MULTIPLE_VAR_DEF.getJSType();
JSType rvalueType = ENUM_DUP.getJSType();
JSType rvalueType = ENUM_NOT_CONSTANT.getJSType();
JSType rvalueType = INVALID_INTERFACE_MEMBER_DECLARATION.getJSType();
JSType rvalueType = INTERFACE_FUNCTION_NOT_EMPTY.getJSType();
JSType rvalueType = CONFLICTING_SHAPE_TYPE.getJSType();
JSType rvalueType = CONFLICTING_EXTENDED_TYPE.getJSType();
JSType rvalueType = CONFLICTING_IMPLEMENTED_TYPE.getJSType();
JSType rvalueType = BAD_IMPLEMENTED_TYPE.getJSType();
JSType rvalueType = HIDDEN_SUPERCLASS_PROPERTY.getJSType();
JSType rvalueType = HIDDEN_INTERFACE_PROPERTY.getJSType();
JSType rvalueType = HIDDEN_SUPERCLASS_PROPERTY_MISMATCH.getJSType();
JSType rvalueType = UNKNOWN_OVERRIDE.getJSType();
JSType rvalueType = INTERFACE_METHOD_OVERRIDE.getJSType();
JSType rvalueType = UNKNOWN_EXPR_TYPE.getJSType();
JSType rvalueType = UNRESOLVED_TYPE.getJSType();
JSType rvalueType = WRONG_ARGUMENT_COUNT.getJSType();
JSType rvalueType = ILLEGAL_IMPLICIT_CAST.getJSType();
JSType rvalueType = INCOMPATIBLE_EXTENDED_PROPERTY_TYPE.getJSType();
JSType rvalueType = EXPECTED_THIS_TYPE.getJSType();
JSType rvalueType = IN_USED_WITH_STRUCT.getJSType();
JSType rvalueType = ILLEGAL_PROPERTY_CREATION.getJSType();
JSType rvalueType = ILLEGAL_OBJLIT_KEY.getJSType();
JSType rvalueType = ALL_DIAGNOSTICS.getJSType();
JSType rvalueType = this.compiler.getJSType();
JSType rvalueType = this.validator.getJSType();
JSType rvalueType = this.reverseInterpreter.getJSType();
JSType rvalueType = this.typeRegistry.getJSType();
JSType rvalueType = this.topScope.getJSType();
JSType rvalueType = this.scopeCreator.getJSType();
JSType rvalueType = this.reportMissingOverride.getJSType();
JSType rvalueType = this.reportUnknownTypes.getJSType();
JSType rvalueType = this.reportMissingProperties.getJSType();
JSType rvalueType = this.inferJSDocInfo.getJSType();
JSType rvalueType = this.typedCount.getJSType();
JSType rvalueType = this.nullCount.getJSType();
JSType rvalueType = this.unknownCount.getJSType();
JSType rvalueType = this.inExterns.getJSType();
JSType rvalueType = this.noTypeCheckSection.getJSType();
JSType rvalueType = this.editDistance.getJSType();
16:32:26.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:27.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:27.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:28.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:28.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:29.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:29.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:30.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:30.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:31.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:31.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:32.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:32.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:33.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:33.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:34.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:34.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:35.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:35.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:36.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:36.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:37.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:37.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:38.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:38.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:39.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:39.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:40.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:40.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:41.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:41.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:42.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:42.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:43.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:43.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:43.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:43.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:44.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:44.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:45.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:45.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:46.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:46.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:47.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:47.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:48.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:48.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:49.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:49.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:50.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:50.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:51.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:51.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:52.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:52.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:53.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:53.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:54.741 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:54.742 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:55.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:55.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:56.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:56.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:57.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:57.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:58.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:58.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:32:59.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:32:59.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:00.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:00.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:01.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:01.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:02.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:02.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:03.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:03.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:04.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:04.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:05.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:05.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:06.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:06.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:07.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:07.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:08.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:08.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:09.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:09.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:10.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:10.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:11.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:11.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:12.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:12.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:13.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:13.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:14.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:14.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:15.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:15.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:16.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:16.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:17.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:17.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:18.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:18.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:19.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:19.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:20.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:20.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:21.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:21.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:22.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:22.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:23.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:23.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:24.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:24.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:25.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:25.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:26.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (rvalue != null) {


}

16:33:26.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:27.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (rvalue == null) {
    return;
}

if (rvalue == null) {
    throw new IllegalArgumentException("Empty variable: " + rvalue);
}

16:33:27.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:28.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:28.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:29.877 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:33:29.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:30.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:30.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===798
16:33:30.921 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
16:33:30.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:31.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:33:31.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:32.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:32.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.jstype.FunctionType ===1152
16:33:32.796 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
getInstanceType().clearCachedValues();
getInstanceType().clearCachedValues(true);
getInstanceType().clearCachedValues(false);
16:33:32.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:33.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:33.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:34.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
getInstanceType().clearCachedValues(this.call);
getInstanceType().clearCachedValues(this.prototypeSlot);
getInstanceType().clearCachedValues(this.kind);
getInstanceType().clearCachedValues(this.propAccess);
getInstanceType().clearCachedValues(this.typeOfThis);
getInstanceType().clearCachedValues(this.source);
getInstanceType().clearCachedValues(this.implementedInterfaces);
getInstanceType().clearCachedValues(this.extendedInterfaces);
getInstanceType().clearCachedValues(this.subTypes);
16:33:34.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:35.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:35.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:36.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:36.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:37.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:37.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:38.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:38.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:38.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:38.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:39.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:39.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:40.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:40.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:41.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:41.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:42.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:33:42.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:43.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:43.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===815
16:33:43.263 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return Double.NaN;
tagAsStrict();
	return Double.NaN;
return Double.NaN;
	tagAsStrict();
16:33:43.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:44.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:44.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:45.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:33:45.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:45.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:45.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.TypeValidator ===345
16:33:46.007 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (objType.matchesObjectContext()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.hasDisplayName()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isNoType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isNoResolvedType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isNoObjectType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isEmptyType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isNumberObjectType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isNumberValueType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isFunctionPrototypeType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isStringObjectType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isTheObjectType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isStringValueType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isString()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isNumber()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isArrayType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isBooleanObjectType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isBooleanValueType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isRegexpType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isDateType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isNullType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isVoidType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isAllType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isUnknownType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isCheckedUnknownType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isUnionType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isStruct()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isDict()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isGlobalThisType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isFunctionType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isEnumElementType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isEnumType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isNamedType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isRecordType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isTemplatizedType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isTemplateType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.hasAnyTemplateTypes()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.hasAnyTemplateTypesInternal()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isObject()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isConstructor()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isNominalType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isNominalConstructor()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isInstanceType()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isInterface()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isOrdinaryFunction()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesInt32Context()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesUint32Context()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesNumberContext()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesStringContext()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.canBeCalled()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isNullable()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.isResolved()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
16:33:46.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:46.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:46.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:47.753 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:47.753 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:48.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:48.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:49.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:49.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:50.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:50.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:51.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:51.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:52.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:52.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:52.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:52.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:53.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:53.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:54.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:54.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:55.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:55.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:56.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:56.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:57.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:57.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:58.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:58.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:58.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:58.945 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:33:59.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:33:59.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:00.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:00.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:01.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:01.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:02.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:02.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:03.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:03.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:04.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:04.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:05.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:05.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:05.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:05.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:06.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:06.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:07.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:07.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:08.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:08.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:09.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:09.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:10.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:10.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:11.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:11.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:12.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:12.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:13.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:13.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:13.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:13.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:14.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:14.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:15.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:15.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:16.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:16.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:17.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:17.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:18.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:18.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:19.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:19.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:20.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:20.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:20.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:20.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:21.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:21.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:22.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:22.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:23.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:23.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:24.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:24.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:25.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:25.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:26.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:26.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:27.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:27.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:27.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:27.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:28.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:28.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:29.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (objType.matchesObjectContext(dereferenced)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(indexNode)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(t)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(n)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(indexType)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(this.compiler)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(this.typeRegistry)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(this.allValueTypes)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(this.shouldReport)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(this.nullOrUndefined)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(this.mismatches)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(FOUND_REQUIRED)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(INVALID_CAST)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(TYPE_MISMATCH_WARNING)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(MISSING_EXTENDS_TAG_WARNING)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(DUP_VAR_DECLARATION)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(HIDDEN_PROPERTY_MISMATCH)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(INTERFACE_METHOD_NOT_IMPLEMENTED)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(HIDDEN_INTERFACE_PROPERTY_MISMATCH)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(UNKNOWN_TYPEOF_VALUE)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(ILLEGAL_PROPERTY_ACCESS)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType.matchesObjectContext(ALL_DIAGNOSTICS)) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
16:34:29.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:30.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:30.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:31.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:31.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:32.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:32.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:33.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:33.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:34.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:34.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:34.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:34.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:35.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:35.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:36.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:36.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:37.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:37.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:38.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:38.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:39.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:39.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:40.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:40.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:41.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:41.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:41.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:41.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:42.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:42.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:43.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:43.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:44.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:44.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:45.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:45.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:46.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:46.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:47.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:47.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:47.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:47.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:48.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (objType != null && objType.matchesObjectContext()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
if (objType != null || objType.matchesObjectContext()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
16:34:48.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:49.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:49.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:50.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (objType != null) {


}

16:34:50.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:51.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (objType == null) {
    return;
}

if (objType == null) {
    throw new IllegalArgumentException("Empty variable: " + objType);
}

16:34:51.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:52.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:52.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:53.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
if (objType.matchesObjectContext()) {
        expectString(t, indexNode, indexType, "property access");
      } else {
        mismatch(t, n, "only arrays or objects can be accessed",
            objType,
            typeRegistry.createUnionType(ARRAY_TYPE, OBJECT_TYPE));
      }
	expectNumber(t, indexNode, indexType, "array access");
      } else 
null
16:34:53.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:53.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 

16:34:53.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:34:53.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-118 ---Fixer: fix fail because of failed compiling! 
16:34:53.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DisambiguateProperties ===78
16:34:53.850 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
DisambiguateProperties<T> implements CompilerPass {
  // To prevent the logs from filling up, we cap the number of warnings
  // that we tell the user to fix per-property.
  private static final int MAX_INVALDIATION_WARNINGS_PER_PROPERTY = 10;

  private static final Logger logger = Logger.getLogger(
      DisambiguateProperties.class.getName());

  static class Warnings {
    // TODO(user): {1} and {2} are not exactly useful for most people.
    static final DiagnosticType INVALIDATION = DiagnosticType.disabled(
        "JSC_INVALIDATION",
        "Property disambiguator skipping all instances of property {0} "
        + "because of type {1} node {2}. {3}");

    static final DiagnosticType INVALIDATION_ON_TYPE = DiagnosticType.disabled(
        "JSC_INVALIDATION_TYPE",
        "Property disambiguator skipping instances of property {0} "
        + "on type {1}. {2}");
  }

  private final AbstractCompiler compiler;
  private final TypeSystem<T> typeSystem;

  /**
   * Map of a type to all the related errors that invalidated the type
   * for disambiguation. It has be Object because of the generic nature of
   * this pass.
   */
  private Multimap<Object, JSError> invalidationMap;

  /**
   * In practice any large code base will have thousands and thousands of
   * type invalidations, which makes reporting all of the errors useless.
   * However, certain properties are worth specifically guarding because of the
   * large amount of code that can be removed as dead code. This list contains
   * the properties (eg: "toString") that we care about; if any of these
   * properties is invalidated it causes an error.
   */
  private final Map<String, CheckLevel> propertiesToErrorFor;

  private class Property {
    /** The name of the property. */
    final String name;

    /** All types on which the field exists, grouped together if related. */
    private UnionFind<T> types;

    /**
     * A set of types for which renaming this field should be skipped. This
     * list is first filled by fields defined in the externs file.
     */
    Set<T> typesToSkip = Sets.newHashSet();

    /**
     * If true, do not rename any instance of this field, as it has been
     * referenced from an unknown type.
     */
    boolean skipRenaming;

    /** Set of nodes for this field that need renaming. */
    Set<Node> renameNodes = Sets.newHashSet();

    /**
     * Map from node to the highest type in the prototype chain containing the
     * field for that node. In the case of a union, the type is the highest type
     * of one of the types in the union.
     */
    final Map<Node, T> rootTypes = Maps.newHashMap();

    Property(String name) {
      this.name = name;
    }

    /** Returns the types on which this field is referenced. */
    UnionFind<T> getTypes() {
      if (types == null) {
        types = new StandardUnionFind<T>();
      }
      return types;
    }

    /**
     * Record that this property is referenced from this type.
     * @return true if the type was recorded for this property, else false,
     *     which would happen if the type was invalidating.
     */
    boolean addType(T type, T top, T relatedType) {
      checkState(!skipRenaming, "Attempt to record skipped property: %s", name);
      if (typeSystem.isInvalidatingType(top)) {
        invalidate();
        return false;
      } else {
        if (typeSystem.isTypeToSkip(top)) {
          addTypeToSkip(top);
        }

        if (relatedType == null) {
          getTypes().add(top);
        } else {
          getTypes().union(top, relatedType);
        }
        typeSystem.recordInterfaces(type, top, this);
        return true;
      }
    }

    /** Records the given type as one to skip for this property. */
    void addTypeToSkip(T type) {
      for (T skipType : typeSystem.getTypesToSkipForType(type)) {
        typesToSkip.add(skipType);
        getTypes().union(skipType, type);
      }
    }

    /** Invalidates any types related to invalid types. */
    void expandTypesToSkip() {
      // If we are not going to rename any properties, then we do not need to
      // update the list of invalid types, as they are all invalid.
      if (shouldRename()) {
        int count = 0;
        while (true) {
          // It should usually only take one time through this do-while.
          checkState(++count < 10, "Stuck in loop expanding types to skip.");

          // Make sure that the representative type for each type to skip is
          // marked as being skipped.
          Set<T> rootTypesToSkip = Sets.newHashSet();
          for (T subType : typesToSkip) {
            rootTypesToSkip.add(types.find(subType));
          }
          typesToSkip.addAll(rootTypesToSkip);

          Set<T> newTypesToSkip = Sets.newHashSet();
          Set<T> allTypes = types.elements();
          int originalTypesSize = allTypes.size();
          for (T subType : allTypes) {
            if (!typesToSkip.contains(subType)
                && typesToSkip.contains(types.find(subType))) {
              newTypesToSkip.add(subType);
            }
          }

          for (T newType : newTypesToSkip) {
            addTypeToSkip(newType);
          }

          // If there were not any new types added, we are done here.
          if (types.elements().size() == originalTypesSize) {
            break;
          }
        }
      }
    }

    /** Returns true if any instance of this property should be renamed. */
    boolean shouldRename() {
      return !skipRenaming && types != null
          && types.allEquivalenceClasses().size() > 1;
    }

    /**
     * Returns true if this property should be renamed on this type.
     * expandTypesToSkip() should be called before this, if anything has been
     * added to the typesToSkip list.
     */
    boolean shouldRename(T type) {
      return !skipRenaming && !typesToSkip.contains(type);
    }

    /**
     * Invalidates a field from renaming.  Used for field references on an
     * object with unknown type.
     */
    boolean invalidate() {
      boolean changed = !skipRenaming;
      skipRenaming = true;
      types = null;
      return changed;
    }

    /**
     * Schedule the node to potentially be renamed.
     * @param node the node to rename
     * @param type the highest type in the prototype chain for which the
     *     property is defined
     * @return True if type was accepted without invalidation or if the property
     *     was already invalidated.  False if this property was invalidated this
     *     time.
     */
    boolean scheduleRenaming(Node node, T type) {
      if (!skipRenaming) {
        if (typeSystem.isInvalidatingType(type)) {
          invalidate();
          return false;
        }
        renameNodes.add(node);
        rootTypes.put(node, type);
      }
      return true;
    }
  }

  private Map<String, Property> properties = Maps.newHashMap();

  static DisambiguateProperties<JSType> forJSTypeSystem(
      AbstractCompiler compiler,
      Map<String, CheckLevel> propertiesToErrorFor) {
    return new DisambiguateProperties<JSType>(
        compiler, new JSTypeSystem(compiler), propertiesToErrorFor);
  }

  static DisambiguateProperties<ConcreteType> forConcreteTypeSystem(
      AbstractCompiler compiler, TightenTypes tt,
      Map<String, CheckLevel> propertiesToErrorFor) {
    return new DisambiguateProperties<ConcreteType>(
        compiler, new ConcreteTypeSystem(tt, compiler.getCodingConvention()),
            propertiesToErrorFor);
  }

  /**
   * This constructor should only be called by one of the helper functions
   * above for either the JSType system, or the concrete type system.
   */
  private DisambiguateProperties(AbstractCompiler compiler,
      TypeSystem<T> typeSystem, Map<String, CheckLevel> propertiesToErrorFor) {
    this.compiler = compiler;
    this.typeSystem = typeSystem;
    this.propertiesToErrorFor = propertiesToErrorFor;
    if (!this.propertiesToErrorFor.isEmpty()) {
      this.invalidationMap = LinkedHashMultimap.create();
    } else {
      this.invalidationMap = null;
    }
  }

  @Override
  public void process(Node externs, Node root) {
    Preconditions.checkState(
        compiler.getLifeCycleStage() == LifeCycleStage.NORMALIZED);
    for (TypeMismatch mis : compiler.getTypeValidator().getMismatches()) {
      addInvalidatingType(mis.typeA, mis.src);
      addInvalidatingType(mis.typeB, mis.src);
    }

    NodeTraversal.traverse(compiler, externs, new FindExternProperties());
    NodeTraversal.traverse(compiler, root, new FindRenameableProperties());
    renameProperties();
  }

  private void recordInvalidationError(JSType t, JSError error) {
    if (!t.isObject()) {
      return;
    }
    if (invalidationMap != null) {
      invalidationMap.put(t, error);
    }
  }

  /**
   * Invalidates the given type, so that no properties on it will be renamed.
   */
  private void addInvalidatingType(JSType type, JSError error) {
    type = type.restrictByNotNullOrUndefined();
    if (type.isUnionType()) {
      for (JSType alt : type.toMaybeUnionType().getAlternates()) {
        addInvalidatingType(alt, error);
      }
    } else if (type.isEnumElementType()) {
      addInvalidatingType(
          type.toMaybeEnumElementType().getPrimitiveType(), error);
    } else {
      typeSystem.addInvalidatingType(type);
      recordInvalidationError(type, error);
      ObjectType objType = ObjectType.cast(type);
      if (objType != null && objType.getImplicitPrototype() != null) {
        typeSystem.addInvalidatingType(objType.getImplicitPrototype());
        recordInvalidationError(objType.getImplicitPrototype(), error);
      }
    }
  }


  /** Returns the property for the given name, creating it if necessary. */
  protected Property getProperty(String name) {
    if (!properties.containsKey(name)) {
      properties.put(name, new Property(name));
    }
    return properties.get(name);
  }

  /** Public for testing. */
  T getTypeWithProperty(String field, T type) {
    return typeSystem.getTypeWithProperty(field, type);
  }

  /** Tracks the current type system scope while traversing. */
  private abstract class AbstractScopingCallback implements ScopedCallback {
    protected final Stack<StaticScope<T>> scopes =
        new Stack<StaticScope<T>>();

    @Override
    public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
      return true;
    }

    @Override
    public void enterScope(NodeTraversal t) {
      if (t.inGlobalScope()) {
        scopes.push(typeSystem.getRootScope());
      } else {
        scopes.push(typeSystem.getFunctionScope(t.getScopeRoot()));
      }
    }

    @Override
    public void exitScope(NodeTraversal t) {
      scopes.pop();
    }

    /** Returns the current scope at this point in the file. */
    protected StaticScope<T> getScope() {
      return scopes.peek();
    }
  }

  /**
   * Finds all properties defined in the externs file and sets them as
   * ineligible for renaming from the type on which they are defined.
   */
  private class FindExternProperties extends AbstractScopingCallback {
    @Override public void visit(NodeTraversal t, Node n, Node parent) {
      // TODO(johnlenz): Support object-literal property definitions.
      if (n.isGetProp()) {
        String field = n.getLastChild().getString();
        T type = typeSystem.getType(getScope(), n.getFirstChild(), field);
        Property prop = getProperty(field);
        if (typeSystem.isInvalidatingType(type)) {
          prop.invalidate();
        } else {
          prop.addTypeToSkip(type);

          // If this is a prototype property, then we want to skip assignments
          // to the instance type as well.  These assignments are not usually
          // seen in the extern code itself, so we must handle them here.
          if ((type = typeSystem.getInstanceFromPrototype(type)) != null) {
            prop.getTypes().add(type);
            prop.typesToSkip.add(type);
          }
        }
      }
    }
  }

  /**
   * Traverses the tree, building a map from field names to Nodes for all
   * fields that can be renamed.
   */
  private class FindRenameableProperties extends AbstractScopingCallback {
    @Override
    public void visit(NodeTraversal t, Node n, Node parent) {
      if (n.isGetProp()) {
        handleGetProp(t, n);
      } else if (n.isObjectLit()) {
        handleObjectLit(t, n);
      }
    }

    /**
     * Processes a GETPROP node.
     */
    private void handleGetProp(NodeTraversal t, Node n) {
      String name = n.getLastChild().getString();
      T type = typeSystem.getType(getScope(), n.getFirstChild(), name);

      Property prop = getProperty(name);
      if (!prop.scheduleRenaming(n.getLastChild(),
                                 processProperty(t, prop, type, null))) {
        if (propertiesToErrorFor.containsKey(name)) {
          String suggestion = "";
          if (type instanceof JSType) {
            JSType jsType = (JSType) type;
            if (jsType.isAllType() || jsType.isUnknownType()) {
              if (n.getFirstChild().isThis()) {
                suggestion = "The \"this\" object is unknown in the function," +
                    "consider using @this";
              } else {
                String qName = n.getFirstChild().getQualifiedName();
                suggestion = "Consider casting " + qName +
                    " if you know it's type.";
              }
            } else {
              List<String> errors = Lists.newArrayList();
              printErrorLocations(errors, jsType);
              if (!errors.isEmpty()) {
                suggestion = "Consider fixing errors for the following types:\n";
                suggestion += Joiner.on("\n").join(errors);
              }
            }
          }
          compiler.report(JSError.make(
              t.getSourceName(), n, propertiesToErrorFor.get(name),
              Warnings.INVALIDATION, name,
              (type == null ? "null" : type.toString()),
              n.toString(), suggestion));
        }
      }
    }

    /**
     * Processes a OBJECTLIT node.
     */
    private void handleObjectLit(NodeTraversal t, Node n) {
      for (Node child = n.getFirstChild();
          child != null;
          child = child.getNext()) {
        // Maybe STRING, GET, SET

        // We should never see a mix of numbers and strings.
        String name = child.getString();
        T type = typeSystem.getType(getScope(), n, name);

        Property prop = getProperty(name);
        if (!prop.scheduleRenaming(child,
                                   processProperty(t, prop, type, null))) {
          // TODO(user): It doesn't look like the user can do much in this
          // case right now.
          if (propertiesToErrorFor.containsKey(name)) {
            compiler.report(JSError.make(
                t.getSourceName(), child, propertiesToErrorFor.get(name),
                Warnings.INVALIDATION, name,
                (type == null ? "null" : type.toString()), n.toString(), ""));
          }
        }
      }
    }

    private void printErrorLocations(List<String> errors, JSType t) {
      if (!t.isObject() || t.isAllType()) {
        return;
      }

      if (t.isUnionType()) {
        for (JSType alt : t.toMaybeUnionType().getAlternates()) {
          printErrorLocations(errors, alt);
        }
        return;
      }

      for (JSError error : invalidationMap.get(t)) {
        if (errors.size() > MAX_INVALDIATION_WARNINGS_PER_PROPERTY) {
          return;
        }

        errors.add(
            t.toString() + " at " + error.sourceName + ":" + error.lineNumber);
      }
    }

    /**
     * Processes a property, adding it to the list of properties to rename.
     * @return a representative type for the property reference, which will be
     *   the highest type on the prototype chain of the provided type.  In the
     *   case of a union type, it will be the highest type on the prototype
     *   chain of one of the members of the union.
     */
    private T processProperty(
        NodeTraversal t, Property prop, T type, T relatedType) {
      type = typeSystem.restrictByNotNullOrUndefined(type);
      if (prop.skipRenaming || typeSystem.isInvalidatingType(type)) {
        return null;
      }

      Iterable<T> alternatives = typeSystem.getTypeAlternatives(type);
      if (alternatives != null) {
        T firstType = relatedType;
        for (T subType : alternatives) {
          T lastType = processProperty(t, prop, subType, firstType);
          if (lastType != null) {
            firstType = firstType == null ? lastType : firstType;
          }
        }
        return firstType;
      } else {
        T topType = typeSystem.getTypeWithProperty(prop.name, type);
        if (typeSystem.isInvalidatingType(topType)) {
          return null;
        }
        prop.addType(type, topType, relatedType);
        return topType;
      }
    }
  }

  /** Renames all properties with references on more than one type. */
  void renameProperties() {
    int propsRenamed = 0, propsSkipped = 0, instancesRenamed = 0,
        instancesSkipped = 0, singleTypeProps = 0;

    Set<String> reported = Sets.newHashSet();
    for (Property prop : properties.values()) {
      if (prop.shouldRename()) {
        Map<T, String> propNames = buildPropNames(prop.getTypes(), prop.name);

        ++propsRenamed;
        prop.expandTypesToSkip();
        for (Node node : prop.renameNodes) {
          T rootType = prop.rootTypes.get(node);
          if (prop.shouldRename(rootType)) {
            String newName = propNames.get(rootType);
            node.setString(newName);
            compiler.reportCodeChange();
            ++instancesRenamed;
          } else {
            ++instancesSkipped;

            CheckLevel checkLevelForProp = propertiesToErrorFor.get(prop.name);
            if (checkLevelForProp != null &&
                checkLevelForProp != CheckLevel.OFF &&
                !reported.contains(prop.name)) {
              reported.add(prop.name);
              compiler.report(JSError.make(
                  NodeUtil.getSourceName(node), node,
                  checkLevelForProp,
                  Warnings.INVALIDATION_ON_TYPE, prop.name,
                  rootType.toString(), ""));
            }
          }
        }
      } else {
        if (prop.skipRenaming) {
          ++propsSkipped;
        } else {
          ++singleTypeProps;
        }
      }
    }
    logger.fine("Renamed " + instancesRenamed + " instances of "
                + propsRenamed + " properties.");
    logger.fine("Skipped renaming " + instancesSkipped + " invalidated "
                + "properties, " + propsSkipped + " instances of properties "
                + "that were skipped for specific types and " + singleTypeProps
                + " properties that were referenced from only one type.");
  }

  /**
   * Chooses a name to use for renaming in each equivalence class and maps
   * each type in that class to it.
   */
  private Map<T, String> buildPropNames(UnionFind<T> types, String name) {
    Map<T, String> names = Maps.newHashMap();
    for (Set<T> set : types.allEquivalenceClasses()) {
      checkState(!set.isEmpty());

      String typeName = null;
      for (T type : set) {
        if (typeName == null || type.toString().compareTo(typeName) < 0) {
          typeName = type.toString();
        }
      }

      String newName;
      if ("{...}".equals(typeName)) {
        newName = name;
      } else {
        newName = typeName.replaceAll("[^\\w$]", "_") + "$" + name;
      }

      for (T type : set) {
        names.put(type, newName);
      }
    }
    return names;
  }

  /** Returns a map from field name to types for which it will be renamed. */
  Multimap<String, Collection<T>> getRenamedTypesForTesting() {
    Multimap<String, Collection<T>> ret = HashMultimap.create();
    for (Map.Entry<String, Property> entry : properties.entrySet()) {
      Property prop = entry.getValue();
      if (!prop.skipRenaming) {
        for (Collection<T> c : prop.getTypes().allEquivalenceClasses()) {
          if (!c.isEmpty() && !prop.typesToSkip.contains(c.iterator().next())) {
            ret.put(entry.getKey(), c);
          }
        }
      }
    }
    return ret;
  }

  /** Interface for providing the type information needed by this pass. */
  private interface TypeSystem<T> {
    // TODO(user): add a getUniqueName(T type) method that is guaranteed
    // to be unique, performant and human-readable.

    /** Returns the top-most scope used by the type system (if any). */
    StaticScope<T> getRootScope();

    /** Returns the new scope started at the given function node. */
    StaticScope<T> getFunctionScope(Node node);

    /**
     * Returns the type of the given node.
     * @param prop Only types with this property need to be returned. In general
     *     with type tightening, this will require no special processing, but in
     *     the case of an unknown JSType, we might need to add in the native
     *     types since we don't track them, but only if they have the given
     *     property.
     */
    T getType(StaticScope<T> scope, Node node, String prop);

    /**
     * Returns true if a field reference on this type will invalidate all
     * references to that field as candidates for renaming. This is true if the
     * type is unknown or all-inclusive, as variables with such a type could be
     * references to any object.
     */
    boolean isInvalidatingType(T type);

    /**
     * Informs the given type system that a type is invalidating due to a type
     * mismatch found during type checking.
     */
    void addInvalidatingType(JSType type);

    /**
     * Returns a set of types that should be skipped given the given type.
     * This is necessary for interfaces when using JSTypes, as all super
     * interfaces must also be skipped.
     */
    ImmutableSet<T> getTypesToSkipForType(T type);

    /**
     * Determines whether the given type is one whose properties should not be
     * considered for renaming.
     */
    boolean isTypeToSkip(T type);

    /** Remove null and undefined from the options in the given type. */
    T restrictByNotNullOrUndefined(T type);

    /**
     * Returns the alternatives if this is a type that represents multiple
     * types, and null if not. Union and interface types can correspond to
     * multiple other types.
     */
    Iterable<T> getTypeAlternatives(T type);

    /**
     * Returns the type in the chain from the given type that contains the given
     * field or null if it is not found anywhere.
     */
    T getTypeWithProperty(String field, T type);

    /**
     * Returns the type of the instance of which this is the prototype or null
     * if this is not a function prototype.
     */
    T getInstanceFromPrototype(T type);

    /**
     * Records that this property could be referenced from any interface that
     * this type, or any type in its superclass chain, implements.
     */
    void recordInterfaces(T type, T relatedType,
                          DisambiguateProperties<T>.Property p);
  }

  /** Implementation of TypeSystem using JSTypes. */
  private static class JSTypeSystem implements TypeSystem<JSType> {
    private final Set<JSType> invalidatingTypes;
    private JSTypeRegistry registry;

    public JSTypeSystem(AbstractCompiler compiler) {
      registry = compiler.getTypeRegistry();
      invalidatingTypes = Sets.newHashSet(
          registry.getNativeType(JSTypeNative.ALL_TYPE),
          registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),
          registry.getNativeType(JSTypeNative.NO_TYPE),
          registry.getNativeType(JSTypeNative.FUNCTION_PROTOTYPE),
          registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE),
          registry.getNativeType(JSTypeNative.OBJECT_PROTOTYPE),
          registry.getNativeType(JSTypeNative.TOP_LEVEL_PROTOTYPE),
          registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));

    }

    @Override public void addInvalidatingType(JSType type) {
      checkState(!type.isUnionType());
      invalidatingTypes.add(type);
    }

    @Override public StaticScope<JSType> getRootScope() { return null; }

    @Override public StaticScope<JSType> getFunctionScope(Node node) {
      return null;
    }

    @Override public JSType getType(
        StaticScope<JSType> scope, Node node, String prop) {
      if (node.getJSType() == null) {
        return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);
      }
      return node.getJSType();
    }

    @Override public boolean isInvalidatingType(JSType type) {
      if (type == null || invalidatingTypes.contains(type) ||
          type.isUnknownType() /* unresolved types */) {
        return true;
      }

      ObjectType objType = ObjectType.cast(type);
      return objType != null && !objType.hasReferenceName();
    }

    @Override public ImmutableSet<JSType> getTypesToSkipForType(JSType type) {
      type = type.restrictByNotNullOrUndefined();
      if (type.isUnionType()) {
        Set<JSType> types = Sets.newHashSet(type);
        for (JSType alt : type.toMaybeUnionType().getAlternates()) {
          types.addAll(getTypesToSkipForTypeNonUnion(alt));
        }
        return ImmutableSet.copyOf(types);
      } else if (type.isEnumElementType()) {
        return getTypesToSkipForType(
            type.toMaybeEnumElementType().getPrimitiveType());
      }
      return ImmutableSet.copyOf(getTypesToSkipForTypeNonUnion(type));
    }

    private Set<JSType> getTypesToSkipForTypeNonUnion(JSType type) {
      Set<JSType> types = Sets.newHashSet();
      JSType skipType = type;
      while (skipType != null) {
        types.add(skipType);

        ObjectType objSkipType = skipType.toObjectType();
        if (objSkipType != null) {
          skipType = objSkipType.getImplicitPrototype();
        } else {
          break;
        }
      }
      return types;
    }

    @Override public boolean isTypeToSkip(JSType type) {
      return type.isEnumType() || (type.autoboxesTo() != null);
    }

    @Override public JSType restrictByNotNullOrUndefined(JSType type) {
      return type.restrictByNotNullOrUndefined();
    }

    @Override public Iterable<JSType> getTypeAlternatives(JSType type) {
      if (type.isUnionType()) {
        return type.toMaybeUnionType().getAlternates();
      } else {
        ObjectType objType = type.toObjectType();
        if (objType != null &&
            objType.getConstructor() != null &&
            objType.getConstructor().isInterface()) {
          List<JSType> list = Lists.newArrayList();
          for (FunctionType impl
                   : registry.getDirectImplementors(objType)) {
            list.add(impl.getInstanceType());
          }
          return list;
        } else {
          return null;
        }
      }
    }

    @Override public ObjectType getTypeWithProperty(String field, JSType type) {
      if (type == null) {
        return null;
      }

      if (type.isEnumElementType()) {
        return getTypeWithProperty(
            field, type.toMaybeEnumElementType().getPrimitiveType());
      }

      if (!(type instanceof ObjectType)) {
        if (type.autoboxesTo() != null) {
          type = type.autoboxesTo();
        } else {
          return null;
        }
      }

      // Ignore the prototype itself at all times.
      if ("prototype".equals(field)) {
        return null;
      }

      // We look up the prototype chain to find the highest place (if any) that
      // this appears.  This will make references to overridden properties look
      // like references to the initial property, so they are renamed alike.
      ObjectType foundType = null;
      ObjectType objType = ObjectType.cast(type);
      if (objType != null && objType.getConstructor() != null
          && objType.getConstructor().isInterface()) {
        ObjectType topInterface = FunctionType.getTopDefiningInterface(
            objType, field);
        if (topInterface != null && topInterface.getConstructor() != null) {
          foundType = topInterface.getConstructor().getPrototype();
        }
      } else {
        while (objType != null && objType.getImplicitPrototype() != objType) {
          if (objType.hasOwnProperty(field)) {
            foundType = objType;
          }
          objType = objType.getImplicitPrototype();
        }
      }

      // If the property does not exist on the referenced type but the original
      // type is an object type, see if any subtype has the property.
      if (foundType == null) {
        ObjectType maybeType = ObjectType.cast(
            registry.getGreatestSubtypeWithProperty(type, field));
        // getGreatestSubtypeWithProperty does not guarantee that the property
        // is defined on the returned type, it just indicates that it might be,
        // so we have to double check.
        if (maybeType != null && maybeType.hasOwnProperty(field)) {
          foundType = maybeType;
        }
      }
      return foundType;
    }

    @Override public JSType getInstanceFromPrototype(JSType type) {
      if (type.isFunctionPrototypeType()) {
        ObjectType prototype = (ObjectType) type;
        FunctionType owner = prototype.getOwnerFunction();
        if (owner.isConstructor() || owner.isInterface()) {
          return prototype.getOwnerFunction().getInstanceType();
        }
      }
      return null;
    }

    @Override
    public void recordInterfaces(JSType type, JSType relatedType,
                                 DisambiguateProperties<JSType>.Property p) {
      ObjectType objType = ObjectType.cast(type);
      if (objType != null) {
        FunctionType constructor;
        if (objType.isFunctionType()) {
          constructor = objType.toMaybeFunctionType();
        } else if (objType.isFunctionPrototypeType()) {
          constructor = objType.getOwnerFunction();
        } else {
          constructor = objType.getConstructor();
        }
        while (constructor != null) {
          for (ObjectType itype : constructor.getImplementedInterfaces()) {
            JSType top = getTypeWithProperty(p.name, itype);
            if (top != null) {
              p.addType(itype, top, relatedType);
            } else {
              recordInterfaces(itype, relatedType, p);
            }

            // If this interface invalidated this property, return now.
            if (p.skipRenaming) {
              return;
            }
          }
          if (constructor.isInterface() || constructor.isConstructor()) {
            constructor = constructor.getSuperClassConstructor();
          } else {
            constructor = null;
          }
        }
      }
    }
  }

  /** Implementation of TypeSystem using concrete types. */
  private static class ConcreteTypeSystem implements TypeSystem<ConcreteType> {
    private final TightenTypes tt;
    private int nextUniqueId;
    private CodingConvention codingConvention;
    private final Set<JSType> invalidatingTypes = Sets.newHashSet();

    // An array of native types that are not tracked by type tightening, and
    // thus need to be added in if an unknown type is encountered.
    private static final JSTypeNative [] nativeTypes = new JSTypeNative[] {
        JSTypeNative.BOOLEAN_OBJECT_TYPE,
        JSTypeNative.NUMBER_OBJECT_TYPE,
        JSTypeNative.STRING_OBJECT_TYPE
    };

    public ConcreteTypeSystem(TightenTypes tt, CodingConvention convention) {
      this.tt = tt;
      this.codingConvention = convention;
    }

    @Override public void addInvalidatingType(JSType type) {
      checkState(!type.isUnionType());
      invalidatingTypes.add(type);
    }

    @Override public StaticScope<ConcreteType> getRootScope() {
      return tt.getTopScope();
    }

    @Override public StaticScope<ConcreteType> getFunctionScope(Node decl) {
      ConcreteFunctionType func = tt.getConcreteFunction(decl);
      return (func != null) ?
          func.getScope() : (StaticScope<ConcreteType>) null;
    }

    @Override
    public ConcreteType getType(
        StaticScope<ConcreteType> scope, Node node, String prop) {
      if (scope != null) {
        ConcreteType c = tt.inferConcreteType(
            (TightenTypes.ConcreteScope) scope, node);
        return maybeAddAutoboxes(c, node, prop);
      } else {
        return null;
      }
    }

    /**
     * Add concrete types for autoboxing types if necessary. The concrete type
     * system does not track native types, like string, so add them if they are
     * present in the JSType for the node.
     */
    private ConcreteType maybeAddAutoboxes(
        ConcreteType cType, Node node, String prop) {
      JSType jsType = node.getJSType();
      if (jsType == null) {
        return cType;
      } else if (jsType.isUnknownType()) {
        for (JSTypeNative nativeType : nativeTypes) {
          ConcreteType concrete = tt.getConcreteInstance(
              tt.getTypeRegistry().getNativeObjectType(nativeType));
          if (concrete != null && !concrete.getPropertyType(prop).isNone()) {
            cType = cType.unionWith(concrete);
          }
        }
        return cType;
      }

      return maybeAddAutoboxes(cType, jsType, prop);
    }

    private ConcreteType maybeAddAutoboxes(
        ConcreteType cType, JSType jsType, String prop) {
      jsType = jsType.restrictByNotNullOrUndefined();
      if (jsType.isUnionType()) {
        for (JSType alt : jsType.toMaybeUnionType().getAlternates()) {
          cType = maybeAddAutoboxes(cType, alt, prop);
        }
        return cType;
      } else if (jsType.isEnumElementType()) {
        return maybeAddAutoboxes(
            cType, jsType.toMaybeEnumElementType().getPrimitiveType(), prop);
      }

      if (jsType.autoboxesTo() != null) {
        JSType autoboxed = jsType.autoboxesTo();
        return cType.unionWith(tt.getConcreteInstance((ObjectType) autoboxed));
      } else if (jsType.unboxesTo() != null) {
        return cType.unionWith(tt.getConcreteInstance((ObjectType) jsType));
      }

      return cType;
    }

    @Override public boolean isInvalidatingType(ConcreteType type) {
      // We will disallow types on functions so that 'prototype' is not renamed.
      // TODO(user): Support properties on functions as well.
      return (type == null) || type.isAll() || type.isFunction()
        || (type.isInstance()
            && invalidatingTypes.contains(type.toInstance().instanceType));
    }

    @Override
    public ImmutableSet<ConcreteType> getTypesToSkipForType(ConcreteType type) {
      return ImmutableSet.of(type);
    }

    @Override public boolean isTypeToSkip(ConcreteType type) {
      // Skip anonymous object literals and enum types.
      return type.isInstance()
        && !(type.toInstance().isFunctionPrototype()
             || type.toInstance().instanceType.isInstanceType());
    }

    @Override
    public ConcreteType restrictByNotNullOrUndefined(ConcreteType type) {
      // These are not represented in concrete types.
      return type;
    }

    @Override
    public Iterable<ConcreteType> getTypeAlternatives(ConcreteType type) {
      if (type.isUnion()) {
        return ((ConcreteUnionType) type).getAlternatives();
      } else {
        return null;
      }
    }

    @Override public ConcreteType getTypeWithProperty(String field,
                                                      ConcreteType type) {
      if (type.isInstance()) {
        ConcreteInstanceType instanceType = (ConcreteInstanceType) type;
        return instanceType.getInstanceTypeWithProperty(field);
      } else if (type.isFunction()) {
        if ("prototype".equals(field)
            || codingConvention.isSuperClassReference(field)) {
          return type;
        }
      } else if (type.isNone()) {
        // If the receiver is none, then this code is never reached.  We will
        // return a new fake type to ensure that this access is renamed
        // differently from any other, so it can be easily removed.
        return new ConcreteUniqueType(++nextUniqueId);
      } else if (type.isUnion()) {
        // If only one has the property, return that.
        for (ConcreteType t : ((ConcreteUnionType) type).getAlternatives()) {
          ConcreteType ret = getTypeWithProperty(field, t);
          if (ret != null) {
            return ret;
          }
        }
      }
      return null;
    }

    @Override public ConcreteType getInstanceFromPrototype(ConcreteType type) {
      if (type.isInstance()) {
        ConcreteInstanceType instanceType = (ConcreteInstanceType) type;
        if (instanceType.isFunctionPrototype()) {
          return instanceType.getConstructorType().getInstanceType();
        }
      }
      return null;
    }

    @Override
    public void recordInterfaces(ConcreteType type, ConcreteType relatedType,
        DisambiguateProperties<ConcreteType>.Property p) {
      // No need to record interfaces when using concrete types.
    }
  }
}
