Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-36
01:52:19.197 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/36.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/36.txt
01:56:05.527 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
01:56:05.684 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-36/generalSusInfo.profl
01:56:05.813 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-36/aggregatedSusInfo.profl
01:56:05.822 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Fixing Beginning======
01:56:05.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===132
01:56:07.203 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case SIDE_EFFECT_FLAGS:
if (SIDE_EFFECT_FLAGS == 0) {
    new IllegalArgumentException("");
}

if (SIDE_EFFECT_FLAGS != 0) {

    
}

if (SIDE_EFFECT_FLAGS > 0) {

    
}

01:56:07.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:09.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:09.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:09.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:09.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:09.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
setType(SIDE_EFFECT_FLAGS);
setType(SIDE_EFFECT_FLAGS);
	case SIDE_EFFECT_FLAGS:
case SIDE_EFFECT_FLAGS:
	setType(SIDE_EFFECT_FLAGS);
removeProp(SIDE_EFFECT_FLAGS);
removeProp(SIDE_EFFECT_FLAGS);
	case SIDE_EFFECT_FLAGS:
case SIDE_EFFECT_FLAGS:
	removeProp(SIDE_EFFECT_FLAGS);
setLength(SIDE_EFFECT_FLAGS);
setLength(SIDE_EFFECT_FLAGS);
	case SIDE_EFFECT_FLAGS:
case SIDE_EFFECT_FLAGS:
	setLength(SIDE_EFFECT_FLAGS);
setLineno(SIDE_EFFECT_FLAGS);
setLineno(SIDE_EFFECT_FLAGS);
	case SIDE_EFFECT_FLAGS:
case SIDE_EFFECT_FLAGS:
	setLineno(SIDE_EFFECT_FLAGS);
setCharno(SIDE_EFFECT_FLAGS);
setCharno(SIDE_EFFECT_FLAGS);
	case SIDE_EFFECT_FLAGS:
case SIDE_EFFECT_FLAGS:
	setCharno(SIDE_EFFECT_FLAGS);
setSourceEncodedPosition(SIDE_EFFECT_FLAGS);
setSourceEncodedPosition(SIDE_EFFECT_FLAGS);
	case SIDE_EFFECT_FLAGS:
case SIDE_EFFECT_FLAGS:
	setSourceEncodedPosition(SIDE_EFFECT_FLAGS);
setSourceEncodedPositionForTree(SIDE_EFFECT_FLAGS);
setSourceEncodedPositionForTree(SIDE_EFFECT_FLAGS);
	case SIDE_EFFECT_FLAGS:
case SIDE_EFFECT_FLAGS:
	setSourceEncodedPositionForTree(SIDE_EFFECT_FLAGS);
detachChildren();
	case SIDE_EFFECT_FLAGS:
case SIDE_EFFECT_FLAGS:
	detachChildren();
setSideEffectFlags(SIDE_EFFECT_FLAGS);
setSideEffectFlags(SIDE_EFFECT_FLAGS);
	case SIDE_EFFECT_FLAGS:
case SIDE_EFFECT_FLAGS:
	setSideEffectFlags(SIDE_EFFECT_FLAGS);
setQuotedString();
	case SIDE_EFFECT_FLAGS:
case SIDE_EFFECT_FLAGS:
	setQuotedString();
01:56:09.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:10.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:10.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:11.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:11.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:12.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:12.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:13.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:13.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:14.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:14.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:15.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:15.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:16.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:16.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:17.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:17.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:18.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:18.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:19.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:19.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:20.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:20.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:21.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:21.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:22.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:22.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:23.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:23.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:24.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:24.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:25.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:25.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:26.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:26.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:27.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:27.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:28.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:28.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:29.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:29.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:30.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:30.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:31.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:31.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:32.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:32.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:33.741 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:33.742 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:34.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:34.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:35.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:35.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:36.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:36.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:37.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

01:56:37.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:38.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:38.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===131
01:56:38.897 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case ORIGINALNAME_PROP:
if (ORIGINALNAME_PROP == 0) {
    new IllegalArgumentException("");
}

if (ORIGINALNAME_PROP != 0) {

    
}

if (ORIGINALNAME_PROP > 0) {

    
}

01:56:38.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:39.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:39.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:40.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:40.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:40.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
setType(ORIGINALNAME_PROP);
setType(ORIGINALNAME_PROP);
	case ORIGINALNAME_PROP:
case ORIGINALNAME_PROP:
	setType(ORIGINALNAME_PROP);
removeProp(ORIGINALNAME_PROP);
removeProp(ORIGINALNAME_PROP);
	case ORIGINALNAME_PROP:
case ORIGINALNAME_PROP:
	removeProp(ORIGINALNAME_PROP);
setLength(ORIGINALNAME_PROP);
setLength(ORIGINALNAME_PROP);
	case ORIGINALNAME_PROP:
case ORIGINALNAME_PROP:
	setLength(ORIGINALNAME_PROP);
setLineno(ORIGINALNAME_PROP);
setLineno(ORIGINALNAME_PROP);
	case ORIGINALNAME_PROP:
case ORIGINALNAME_PROP:
	setLineno(ORIGINALNAME_PROP);
setCharno(ORIGINALNAME_PROP);
setCharno(ORIGINALNAME_PROP);
	case ORIGINALNAME_PROP:
case ORIGINALNAME_PROP:
	setCharno(ORIGINALNAME_PROP);
setSourceEncodedPosition(ORIGINALNAME_PROP);
setSourceEncodedPosition(ORIGINALNAME_PROP);
	case ORIGINALNAME_PROP:
case ORIGINALNAME_PROP:
	setSourceEncodedPosition(ORIGINALNAME_PROP);
setSourceEncodedPositionForTree(ORIGINALNAME_PROP);
setSourceEncodedPositionForTree(ORIGINALNAME_PROP);
	case ORIGINALNAME_PROP:
case ORIGINALNAME_PROP:
	setSourceEncodedPositionForTree(ORIGINALNAME_PROP);
detachChildren();
	case ORIGINALNAME_PROP:
case ORIGINALNAME_PROP:
	detachChildren();
setSideEffectFlags(ORIGINALNAME_PROP);
setSideEffectFlags(ORIGINALNAME_PROP);
	case ORIGINALNAME_PROP:
case ORIGINALNAME_PROP:
	setSideEffectFlags(ORIGINALNAME_PROP);
setQuotedString();
	case ORIGINALNAME_PROP:
case ORIGINALNAME_PROP:
	setQuotedString();
01:56:40.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:41.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:41.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:42.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:42.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:43.664 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:43.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:44.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:44.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:45.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:45.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:46.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:46.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:47.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:47.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:48.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:48.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:49.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:49.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:50.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:50.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:51.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:51.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:52.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:52.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:53.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:53.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:54.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:54.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:55.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:55.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:56.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:56.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:57.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:57.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:58.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:58.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:59.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:56:59.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:00.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:00.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:01.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:01.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:02.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:02.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:03.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:03.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:04.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:04.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:05.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:05.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:06.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:06.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:07.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:07.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:08.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

01:57:08.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:09.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:09.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.NodeUtil ===3097
01:57:09.573 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return (expr == parent.getFirstChild())
            ? true : isExpressionResultUsed(parent);
if (expr != null) {


}

if (parent != null) {


}

if (parent != null) {


}

01:57:09.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:09.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:09.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:10.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:10.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:10.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (expr == null) {
    return true;
}

if (expr == null) {
    return false;
}

if (expr == null) {
    throw new IllegalArgumentException("Empty variable: " + expr);
}

if (parent == null) {
    return true;
}

if (parent == null) {
    return false;
}

if (parent == null) {
    throw new IllegalArgumentException("Empty variable: " + parent);
}

if (parent == null) {
    return true;
}

if (parent == null) {
    return false;
}

if (parent == null) {
    throw new IllegalArgumentException("Empty variable: " + parent);
}

01:57:10.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:11.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:11.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:12.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:12.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:13.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:13.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:15.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:15.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:16.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:16.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:17.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:17.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:18.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:18.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:19.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:19.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:20.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
maybeAddFinally(expr);
maybeAddFinally(expr);
	return (expr == parent.getFirstChild())
            ? true : isExpressionResultUsed(parent);
return (expr == parent.getFirstChild())
            ? true : isExpressionResultUsed(parent);
	maybeAddFinally(expr);
redeclareVarsInsideBranch(expr);
redeclareVarsInsideBranch(expr);
	return (expr == parent.getFirstChild())
            ? true : isExpressionResultUsed(parent);
return (expr == parent.getFirstChild())
            ? true : isExpressionResultUsed(parent);
	redeclareVarsInsideBranch(expr);
01:57:20.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:21.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:21.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:22.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:22.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:23.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:23.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:24.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:24.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:25.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:25.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:26.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

01:57:26.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:28.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:28.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.OptimizeParameters ===356
01:57:28.036 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
01:57:28.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:28.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

01:57:28.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:29.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:29.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===182
01:57:29.619 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case RETURN:
if (RETURN == 0) {
    new IllegalArgumentException("");
}

if (RETURN != 0) {

    
}

if (RETURN > 0) {

    
}

01:57:29.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:30.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:30.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:30.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:30.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:30.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

01:57:30.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:31.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:31.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1446
01:57:31.497 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return res;
if (res != null) {


}

01:57:31.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:32.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (res == null) {
    return null;
}

if (res == null) {
    throw new IllegalArgumentException("Empty variable: " + res);
}

01:57:32.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:33.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:33.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:34.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
detachChildren();
	return res;
return res;
	detachChildren();
setQuotedString();
	return res;
return res;
	setQuotedString();
01:57:34.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:35.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:35.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:36.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:36.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:37.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:37.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:38.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

01:57:38.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:39.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:39.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1417
01:57:39.284 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
if (node2 != null) {


}

01:57:39.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:40.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (node2 == null) {
    return null;
}

if (node2 == null) {
    throw new IllegalArgumentException("Empty variable: " + node2);
}

01:57:40.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:41.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:41.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:42.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

01:57:42.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:43.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:43.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===229
01:57:43.104 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case ASSIGN:
if (ASSIGN == 0) {
    new IllegalArgumentException("");
}

if (ASSIGN != 0) {

    
}

if (ASSIGN > 0) {

    
}

01:57:43.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:43.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:43.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:44.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:44.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:44.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

01:57:44.318 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:44.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:44.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DeadAssignmentsElimination ===90
01:57:45.004 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return;

01:57:45.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:45.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:45.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.ComposeWarningsGuard ===125
01:57:45.824 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
01:57:45.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:46.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

01:57:46.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:47.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:47.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.ClosureCodingConvention ===268
01:57:47.499 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return callArg.getNext().getQualifiedName();
return callArg.getNext().getQualifiedName(callName);
return callArg.getNext().getQualifiedName(callArg);
return callArg.getNext().getQualifiedName(callNode);
return callArg.getNext().getQualifiedName(OBJECTLIT_EXPECTED);
return callArg.getNext().getQualifiedName(this.propertyTestFunctions);
01:57:47.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:48.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:48.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:49.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:49.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:50.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:50.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:50.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:50.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:51.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
return getExportPropertyFunction().getNext().getQualifiedName();
return getExportSymbolFunction().getNext().getQualifiedName();
return getAbstractMethodName().getNext().getQualifiedName();
return getGlobalObject().getNext().getQualifiedName();
return getAssertionFunctions().getNext().getQualifiedName();
01:57:51.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:52.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:52.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:53.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:53.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:54.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:54.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:54.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:54.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:55.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
return callArg.getNext().getQualifiedName(true);
return callArg.getNext().getQualifiedName(false);
01:57:55.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:56.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:56.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:57.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (callArg != null) {


}

01:57:57.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:58.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (callArg == null) {
    return null;
}

if (callArg == null) {
    throw new IllegalArgumentException("Empty variable: " + callArg);
}

01:57:58.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:59.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:57:59.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:59.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

01:57:59.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:00.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:00.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.MustBeReachingVariableDef ===258
01:58:00.796 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return;

01:58:00.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:01.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:01.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.MustBeReachingVariableDef ===257
01:58:01.665 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
computeMustDef(n.getLastChild(), cfgNode, output, true);
computeMustDef(true, n.getLastChild(), cfgNode, output, true);
computeMustDef(false, n.getLastChild(), cfgNode, output, true);
computeMustDef(n.getLastChild(), true, cfgNode, output, true);
computeMustDef(n.getLastChild(), false, cfgNode, output, true);
computeMustDef(n.getLastChild(), cfgNode, true, output, true);
computeMustDef(n.getLastChild(), cfgNode, false, output, true);
computeMustDef(n.getLastChild(), cfgNode, output, false);
computeMustDef(n.getLastChild(), cfgNode, output);
computeMustDef(n.getLastChild(), cfgNode, output, true, true);
computeMustDef(n.getLastChild(), cfgNode, output, false, true);
computeMustDef(n.getLastChild(), cfgNode, output, true, true);
computeMustDef(n.getLastChild(), cfgNode, output, true, false);
01:58:01.666 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:02.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:02.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:03.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:03.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:04.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:04.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:04.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:04.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:05.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:05.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:06.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:06.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:07.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:07.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:08.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:08.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:09.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:09.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:09.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:09.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:10.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:10.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:11.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
computeMustDef(n, n.getLastChild(), cfgNode, output, true);
computeMustDef(conditional, n.getLastChild(), cfgNode, output, true);
computeMustDef(this.jsScope, n.getLastChild(), cfgNode, output, true);
computeMustDef(this.compiler, n.getLastChild(), cfgNode, output, true);
computeMustDef(this.escaped, n.getLastChild(), cfgNode, output, true);
computeMustDef(n.getLastChild(), n, output, true);
computeMustDef(n.getLastChild(), conditional, output, true);
computeMustDef(n.getLastChild(), this.jsScope, output, true);
computeMustDef(n.getLastChild(), this.compiler, output, true);
computeMustDef(n.getLastChild(), this.escaped, output, true);
computeMustDef(n.getLastChild(),  output, true);
computeMustDef(n.getLastChild(), n, cfgNode, output, true);
computeMustDef(n.getLastChild(), conditional, cfgNode, output, true);
computeMustDef(n.getLastChild(), this.jsScope, cfgNode, output, true);
computeMustDef(n.getLastChild(), this.compiler, cfgNode, output, true);
computeMustDef(n.getLastChild(), this.escaped, cfgNode, output, true);
computeMustDef(n.getLastChild(), cfgNode, n, true);
computeMustDef(n.getLastChild(), cfgNode, conditional, true);
computeMustDef(n.getLastChild(), cfgNode, this.jsScope, true);
computeMustDef(n.getLastChild(), cfgNode, this.compiler, true);
computeMustDef(n.getLastChild(), cfgNode, this.escaped, true);
computeMustDef(n.getLastChild(), cfgNode,  true);
computeMustDef(n.getLastChild(), cfgNode, n, output, true);
computeMustDef(n.getLastChild(), cfgNode, conditional, output, true);
computeMustDef(n.getLastChild(), cfgNode, this.jsScope, output, true);
computeMustDef(n.getLastChild(), cfgNode, this.compiler, output, true);
computeMustDef(n.getLastChild(), cfgNode, this.escaped, output, true);
computeMustDef(n.getLastChild(), cfgNode, output, n, true);
computeMustDef(n.getLastChild(), cfgNode, output, conditional, true);
computeMustDef(n.getLastChild(), cfgNode, output, this.jsScope, true);
computeMustDef(n.getLastChild(), cfgNode, output, this.compiler, true);
computeMustDef(n.getLastChild(), cfgNode, output, this.escaped, true);
computeMustDef(n.getLastChild(), cfgNode, output, true, n);
computeMustDef(n.getLastChild(), cfgNode, output, true, conditional);
computeMustDef(n.getLastChild(), cfgNode, output, true, this.jsScope);
computeMustDef(n.getLastChild(), cfgNode, output, true, this.compiler);
computeMustDef(n.getLastChild(), cfgNode, output, true, this.escaped);
01:58:11.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:12.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:12.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:13.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:13.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:14.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:14.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:14.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:14.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:15.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:15.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:16.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:16.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:17.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:17.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:18.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:18.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:19.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:19.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:19.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:19.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:20.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:20.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:21.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:21.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:22.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:22.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:23.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:23.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:24.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:24.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:24.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:24.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:25.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:25.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:26.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:26.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:27.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:27.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:28.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:28.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:28.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:28.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:29.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:29.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:30.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:30.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:31.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:31.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:32.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:32.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:33.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:33.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:33.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:33.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:34.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:34.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:35.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:35.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:36.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:36.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:37.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:37.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:38.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:38.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:38.878 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:38.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:39.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:39.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:40.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:40.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:41.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:41.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:42.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (cfgNode != null) {


}

if (output != null) {


}

01:58:42.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:42.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:42.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:43.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:43.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:44.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (cfgNode == null) {
    return;
}

if (cfgNode == null) {
    throw new IllegalArgumentException("Empty variable: " + cfgNode);
}

if (output == null) {
    return;
}

if (output == null) {
    throw new IllegalArgumentException("Empty variable: " + output);
}

01:58:44.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:44.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:44.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:45.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:45.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:46.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:46.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:47.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:47.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:48.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:48.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:49.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
computeMustDef(n.getLastChild(), cfgNode, output, true);
	computeMustDef(n.getFirstChild(), cfgNode, output, conditional);
        
null

        return;
	computeMustDef(n.getLastChild(), cfgNode, output, true);

MOVE-BUGGY-STATEMENT
01:58:49.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:49.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:49.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:50.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

01:58:50.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:51.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:51.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.MustBeReachingVariableDef ===256
01:58:51.574 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
computeMustDef(n.getFirstChild(), cfgNode, output, conditional);
computeMustDef(true, n.getFirstChild(), cfgNode, output, conditional);
computeMustDef(false, n.getFirstChild(), cfgNode, output, conditional);
computeMustDef(n.getFirstChild(), true, cfgNode, output, conditional);
computeMustDef(n.getFirstChild(), false, cfgNode, output, conditional);
computeMustDef(n.getFirstChild(), cfgNode, true, output, conditional);
computeMustDef(n.getFirstChild(), cfgNode, false, output, conditional);
computeMustDef(n.getFirstChild(), cfgNode, output, true, conditional);
computeMustDef(n.getFirstChild(), cfgNode, output, false, conditional);
computeMustDef(n.getFirstChild(), cfgNode, output, conditional, true);
computeMustDef(n.getFirstChild(), cfgNode, output, conditional, false);
01:58:51.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:52.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:52.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:53.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:53.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:54.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:54.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:54.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:54.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:55.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:55.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:56.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:56.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:57.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:57.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:58.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:58.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:58.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:58:58.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:59.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
computeMustDef(n, n.getFirstChild(), cfgNode, output, conditional);
computeMustDef(this.jsScope, n.getFirstChild(), cfgNode, output, conditional);
computeMustDef(this.compiler, n.getFirstChild(), cfgNode, output, conditional);
computeMustDef(this.escaped, n.getFirstChild(), cfgNode, output, conditional);
computeMustDef(n.getFirstChild(), n, output, conditional);
computeMustDef(n.getFirstChild(), this.jsScope, output, conditional);
computeMustDef(n.getFirstChild(), this.compiler, output, conditional);
computeMustDef(n.getFirstChild(), this.escaped, output, conditional);
computeMustDef(n.getFirstChild(),  output, conditional);
computeMustDef(n.getFirstChild(), n, cfgNode, output, conditional);
computeMustDef(n.getFirstChild(), this.jsScope, cfgNode, output, conditional);
computeMustDef(n.getFirstChild(), this.compiler, cfgNode, output, conditional);
computeMustDef(n.getFirstChild(), this.escaped, cfgNode, output, conditional);
computeMustDef(n.getFirstChild(), cfgNode, n, conditional);
computeMustDef(n.getFirstChild(), cfgNode, this.jsScope, conditional);
computeMustDef(n.getFirstChild(), cfgNode, this.compiler, conditional);
computeMustDef(n.getFirstChild(), cfgNode, this.escaped, conditional);
computeMustDef(n.getFirstChild(), cfgNode,  conditional);
computeMustDef(n.getFirstChild(), cfgNode, n, output, conditional);
computeMustDef(n.getFirstChild(), cfgNode, this.jsScope, output, conditional);
computeMustDef(n.getFirstChild(), cfgNode, this.compiler, output, conditional);
computeMustDef(n.getFirstChild(), cfgNode, this.escaped, output, conditional);
computeMustDef(n.getFirstChild(), cfgNode, output, n);
computeMustDef(n.getFirstChild(), cfgNode, output, this.jsScope);
computeMustDef(n.getFirstChild(), cfgNode, output, this.compiler);
computeMustDef(n.getFirstChild(), cfgNode, output, this.escaped);
computeMustDef(n.getFirstChild(), cfgNode, output, );
computeMustDef(n.getFirstChild(), cfgNode, output, n, conditional);
computeMustDef(n.getFirstChild(), cfgNode, output, this.jsScope, conditional);
computeMustDef(n.getFirstChild(), cfgNode, output, this.compiler, conditional);
computeMustDef(n.getFirstChild(), cfgNode, output, this.escaped, conditional);
computeMustDef(n.getFirstChild(), cfgNode, output, conditional, n);
computeMustDef(n.getFirstChild(), cfgNode, output, conditional, this.jsScope);
computeMustDef(n.getFirstChild(), cfgNode, output, conditional, this.compiler);
computeMustDef(n.getFirstChild(), cfgNode, output, conditional, this.escaped);
01:58:59.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:00.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:00.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:01.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:01.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:02.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:02.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:03.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:03.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:03.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:03.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:04.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:04.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:05.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:05.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:06.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:06.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:07.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:07.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:07.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:07.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:08.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:08.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:09.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:09.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:10.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:10.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:11.318 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:11.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:12.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:12.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:12.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:12.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:13.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:13.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:14.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:14.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:15.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:15.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:16.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:16.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:17.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:17.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:17.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:17.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:18.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:18.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:19.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:19.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:20.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:20.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:21.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:21.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:21.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:21.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:22.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:22.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:23.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:23.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:23.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:24.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:24.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:24.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:25.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:25.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:26.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:26.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:27.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:27.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:28.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (cfgNode != null) {


}

if (output != null) {


}

01:59:28.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:28.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:28.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:29.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:29.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:30.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (cfgNode == null) {
    return;
}

if (cfgNode == null) {
    throw new IllegalArgumentException("Empty variable: " + cfgNode);
}

if (output == null) {
    return;
}

if (output == null) {
    throw new IllegalArgumentException("Empty variable: " + output);
}

01:59:30.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:30.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:30.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:31.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:31.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:32.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:32.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:33.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:33.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:34.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:34.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:35.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

        computeMustDef(n.getLastChild(), cfgNode, output, true);
	computeMustDef(n.getFirstChild(), cfgNode, output, conditional);

MOVE-BUGGY-STATEMENT

        computeMustDef(n.getLastChild(), cfgNode, output, true);
        return;
	computeMustDef(n.getFirstChild(), cfgNode, output, conditional);

MOVE-BUGGY-STATEMENT
01:59:35.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:35.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:35.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:36.742 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

01:59:36.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:37.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:37.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.MaybeReachingVariableUse ===192
01:59:37.588 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return;

01:59:37.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:38.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:38.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.MaybeReachingVariableUse ===191
01:59:38.333 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
computeMayUse(n.getFirstChild(), cfgNode, output, conditional);
computeMayUse(true, n.getFirstChild(), cfgNode, output, conditional);
computeMayUse(false, n.getFirstChild(), cfgNode, output, conditional);
computeMayUse(n.getFirstChild(), true, cfgNode, output, conditional);
computeMayUse(n.getFirstChild(), false, cfgNode, output, conditional);
computeMayUse(n.getFirstChild(), cfgNode, true, output, conditional);
computeMayUse(n.getFirstChild(), cfgNode, false, output, conditional);
computeMayUse(n.getFirstChild(), cfgNode, output, true, conditional);
computeMayUse(n.getFirstChild(), cfgNode, output, false, conditional);
computeMayUse(n.getFirstChild(), cfgNode, output, conditional, true);
computeMayUse(n.getFirstChild(), cfgNode, output, conditional, false);
01:59:38.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:39.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:39.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:39.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:39.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:40.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:40.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:41.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:41.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:42.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:42.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:42.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:42.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:43.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:43.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:44.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:44.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:45.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:45.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:45.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
computeMayUse(n, n.getFirstChild(), cfgNode, output, conditional);
computeMayUse(this.jsScope, n.getFirstChild(), cfgNode, output, conditional);
computeMayUse(this.escaped, n.getFirstChild(), cfgNode, output, conditional);
computeMayUse(n.getFirstChild(), n, output, conditional);
computeMayUse(n.getFirstChild(), this.jsScope, output, conditional);
computeMayUse(n.getFirstChild(), this.escaped, output, conditional);
computeMayUse(n.getFirstChild(),  output, conditional);
computeMayUse(n.getFirstChild(), n, cfgNode, output, conditional);
computeMayUse(n.getFirstChild(), this.jsScope, cfgNode, output, conditional);
computeMayUse(n.getFirstChild(), this.escaped, cfgNode, output, conditional);
computeMayUse(n.getFirstChild(), cfgNode, n, conditional);
computeMayUse(n.getFirstChild(), cfgNode, this.jsScope, conditional);
computeMayUse(n.getFirstChild(), cfgNode, this.escaped, conditional);
computeMayUse(n.getFirstChild(), cfgNode,  conditional);
computeMayUse(n.getFirstChild(), cfgNode, n, output, conditional);
computeMayUse(n.getFirstChild(), cfgNode, this.jsScope, output, conditional);
computeMayUse(n.getFirstChild(), cfgNode, this.escaped, output, conditional);
computeMayUse(n.getFirstChild(), cfgNode, output, n);
computeMayUse(n.getFirstChild(), cfgNode, output, this.jsScope);
computeMayUse(n.getFirstChild(), cfgNode, output, this.escaped);
computeMayUse(n.getFirstChild(), cfgNode, output, );
computeMayUse(n.getFirstChild(), cfgNode, output, n, conditional);
computeMayUse(n.getFirstChild(), cfgNode, output, this.jsScope, conditional);
computeMayUse(n.getFirstChild(), cfgNode, output, this.escaped, conditional);
computeMayUse(n.getFirstChild(), cfgNode, output, conditional, n);
computeMayUse(n.getFirstChild(), cfgNode, output, conditional, this.jsScope);
computeMayUse(n.getFirstChild(), cfgNode, output, conditional, this.escaped);
01:59:45.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:46.742 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:46.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:47.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:47.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:48.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:48.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:49.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:49.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:49.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:49.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:50.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:50.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:51.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:51.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:51.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:51.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:52.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:52.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:53.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:53.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:54.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:54.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:55.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:55.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:55.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:55.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:56.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:56.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:57.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:57.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:58.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:58.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:58.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:58.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:59.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
01:59:59.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:00.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:00.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:01.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:01.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:01.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:01.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:02.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:02.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:03.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:03.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:03.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:03.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:04.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:04.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:05.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:05.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:06.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (cfgNode != null) {


}

if (output != null) {


}

02:00:06.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:06.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:06.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:07.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:07.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:07.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (cfgNode == null) {
    return;
}

if (cfgNode == null) {
    throw new IllegalArgumentException("Empty variable: " + cfgNode);
}

if (output == null) {
    return;
}

if (output == null) {
    throw new IllegalArgumentException("Empty variable: " + output);
}

02:00:07.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:08.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:08.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:09.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:09.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:10.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:10.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:10.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:10.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:11.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:11.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:12.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
computeMayUse(n.getFirstChild(), cfgNode, output, conditional);
	computeMayUse(n.getLastChild(), cfgNode, output, true);
        
null

        return;
	computeMayUse(n.getFirstChild(), cfgNode, output, conditional);

MOVE-BUGGY-STATEMENT
02:00:12.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:13.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:13.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:13.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:00:13.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:14.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:14.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.MaybeReachingVariableUse ===190
02:00:14.791 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
computeMayUse(n.getLastChild(), cfgNode, output, true);
computeMayUse(true, n.getLastChild(), cfgNode, output, true);
computeMayUse(false, n.getLastChild(), cfgNode, output, true);
computeMayUse(n.getLastChild(), true, cfgNode, output, true);
computeMayUse(n.getLastChild(), false, cfgNode, output, true);
computeMayUse(n.getLastChild(), cfgNode, true, output, true);
computeMayUse(n.getLastChild(), cfgNode, false, output, true);
computeMayUse(n.getLastChild(), cfgNode, output, false);
computeMayUse(n.getLastChild(), cfgNode, output);
computeMayUse(n.getLastChild(), cfgNode, output, true, true);
computeMayUse(n.getLastChild(), cfgNode, output, false, true);
computeMayUse(n.getLastChild(), cfgNode, output, true, true);
computeMayUse(n.getLastChild(), cfgNode, output, true, false);
02:00:14.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:15.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:15.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:16.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:16.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:17.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:17.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:17.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:17.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:18.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:18.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:19.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:19.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:20.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:20.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:20.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:20.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:21.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:21.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:22.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:22.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:23.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:23.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:23.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
computeMayUse(n, n.getLastChild(), cfgNode, output, true);
computeMayUse(conditional, n.getLastChild(), cfgNode, output, true);
computeMayUse(this.jsScope, n.getLastChild(), cfgNode, output, true);
computeMayUse(this.escaped, n.getLastChild(), cfgNode, output, true);
computeMayUse(n.getLastChild(), n, output, true);
computeMayUse(n.getLastChild(), conditional, output, true);
computeMayUse(n.getLastChild(), this.jsScope, output, true);
computeMayUse(n.getLastChild(), this.escaped, output, true);
computeMayUse(n.getLastChild(),  output, true);
computeMayUse(n.getLastChild(), n, cfgNode, output, true);
computeMayUse(n.getLastChild(), conditional, cfgNode, output, true);
computeMayUse(n.getLastChild(), this.jsScope, cfgNode, output, true);
computeMayUse(n.getLastChild(), this.escaped, cfgNode, output, true);
computeMayUse(n.getLastChild(), cfgNode, n, true);
computeMayUse(n.getLastChild(), cfgNode, conditional, true);
computeMayUse(n.getLastChild(), cfgNode, this.jsScope, true);
computeMayUse(n.getLastChild(), cfgNode, this.escaped, true);
computeMayUse(n.getLastChild(), cfgNode,  true);
computeMayUse(n.getLastChild(), cfgNode, n, output, true);
computeMayUse(n.getLastChild(), cfgNode, conditional, output, true);
computeMayUse(n.getLastChild(), cfgNode, this.jsScope, output, true);
computeMayUse(n.getLastChild(), cfgNode, this.escaped, output, true);
computeMayUse(n.getLastChild(), cfgNode, output, n, true);
computeMayUse(n.getLastChild(), cfgNode, output, conditional, true);
computeMayUse(n.getLastChild(), cfgNode, output, this.jsScope, true);
computeMayUse(n.getLastChild(), cfgNode, output, this.escaped, true);
computeMayUse(n.getLastChild(), cfgNode, output, true, n);
computeMayUse(n.getLastChild(), cfgNode, output, true, conditional);
computeMayUse(n.getLastChild(), cfgNode, output, true, this.jsScope);
computeMayUse(n.getLastChild(), cfgNode, output, true, this.escaped);
02:00:23.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:24.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:24.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:25.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:25.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:26.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:26.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:26.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:26.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:27.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:27.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:28.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:28.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:29.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:29.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:29.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:29.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:30.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:30.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:31.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:31.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:32.152 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:32.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:32.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:32.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:33.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:33.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:34.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:34.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:35.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:35.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:35.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:35.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:36.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:36.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:37.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:37.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:38.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:38.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:38.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:38.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:39.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:39.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:40.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:40.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:41.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:41.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:41.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:41.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:42.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:42.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:43.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:43.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:44.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:44.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:44.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:44.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:45.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:45.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:46.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (cfgNode != null) {


}

if (output != null) {


}

02:00:46.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:46.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:46.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:47.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:47.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:48.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (cfgNode == null) {
    return;
}

if (cfgNode == null) {
    throw new IllegalArgumentException("Empty variable: " + cfgNode);
}

if (output == null) {
    return;
}

if (output == null) {
    throw new IllegalArgumentException("Empty variable: " + output);
}

02:00:48.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:48.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:48.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:49.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:49.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:50.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:50.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:51.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:51.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:51.971 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:51.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:52.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

        computeMayUse(n.getFirstChild(), cfgNode, output, conditional);
	computeMayUse(n.getLastChild(), cfgNode, output, true);

MOVE-BUGGY-STATEMENT

        computeMayUse(n.getFirstChild(), cfgNode, output, conditional);
        return;
	computeMayUse(n.getLastChild(), cfgNode, output, true);

MOVE-BUGGY-STATEMENT
02:00:52.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:53.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:53.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:54.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:00:54.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:55.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:55.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===141
02:00:55.068 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case FREE_CALL:
if (FREE_CALL == 0) {
    new IllegalArgumentException("");
}

if (FREE_CALL != 0) {

    
}

if (FREE_CALL > 0) {

    
}

02:00:55.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:56.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:56.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:56.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:56.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:56.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
setType(FREE_CALL);
setType(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setType(FREE_CALL);
removeProp(FREE_CALL);
removeProp(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	removeProp(FREE_CALL);
setLength(FREE_CALL);
setLength(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setLength(FREE_CALL);
setLineno(FREE_CALL);
setLineno(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setLineno(FREE_CALL);
setCharno(FREE_CALL);
setCharno(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setCharno(FREE_CALL);
setSourceEncodedPosition(FREE_CALL);
setSourceEncodedPosition(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setSourceEncodedPosition(FREE_CALL);
setSourceEncodedPositionForTree(FREE_CALL);
setSourceEncodedPositionForTree(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setSourceEncodedPositionForTree(FREE_CALL);
detachChildren();
	case FREE_CALL:
case FREE_CALL:
	detachChildren();
setSideEffectFlags(FREE_CALL);
setSideEffectFlags(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setSideEffectFlags(FREE_CALL);
setQuotedString();
	case FREE_CALL:
case FREE_CALL:
	setQuotedString();
02:00:56.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:57.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:57.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:58.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:58.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:59.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:00:59.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:00.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:00.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:01.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:01.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:02.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:02.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:03.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:03.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:04.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:04.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:05.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:05.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:06.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:06.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:07.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:07.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:08.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:08.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:09.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:09.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:10.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:10.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:11.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:11.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:12.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:12.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:13.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:13.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:14.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:14.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:15.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:15.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:16.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:16.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:17.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:17.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:18.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:18.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:19.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:19.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:20.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:20.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:21.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:21.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:22.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:22.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:23.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:23.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:24.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:01:24.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:25.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:25.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.OptimizeArgumentsArray ===135
02:01:25.245 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
currentArgumentsAccess = argumentsAccessStack.pop();
currentArgumentsAccess = argumentsAccessStack.pop(true);
currentArgumentsAccess = argumentsAccessStack.pop(false);
02:01:25.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:25.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:25.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:26.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (argumentsAccessStack != null) {


}

02:01:26.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:27.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (argumentsAccessStack == null) {
    return;
}

if (argumentsAccessStack == null) {
    throw new IllegalArgumentException("Empty variable: " + argumentsAccessStack);
}

02:01:27.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:28.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:28.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:28.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

    } else {
      currentArgumentsAccess = null;
	currentArgumentsAccess = argumentsAccessStack.pop();

MOVE-BUGGY-STATEMENT
02:01:28.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:29.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:01:29.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:30.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:30.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.OptimizeArgumentsArray ===107
02:01:30.492 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
argumentsAccessStack.push(currentArgumentsAccess);
argumentsAccessStack.push(true, currentArgumentsAccess);
argumentsAccessStack.push(false, currentArgumentsAccess);
argumentsAccessStack.push(currentArgumentsAccess, true);
argumentsAccessStack.push(currentArgumentsAccess, false);
02:01:30.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:31.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:31.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:32.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:32.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:32.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:32.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:33.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
argumentsAccessStack.push(function);
argumentsAccessStack.push(traversal);
argumentsAccessStack.push(ARGUMENTS);
argumentsAccessStack.push(PARAMETER_PREFIX);
argumentsAccessStack.push(this.paramPredix);
argumentsAccessStack.push(this.uniqueId);
argumentsAccessStack.push(this.compiler);
argumentsAccessStack.push(this.currentArgumentsAccess);
argumentsAccessStack.push();
argumentsAccessStack.push(function, currentArgumentsAccess);
argumentsAccessStack.push(traversal, currentArgumentsAccess);
argumentsAccessStack.push(ARGUMENTS, currentArgumentsAccess);
argumentsAccessStack.push(PARAMETER_PREFIX, currentArgumentsAccess);
argumentsAccessStack.push(this.paramPredix, currentArgumentsAccess);
argumentsAccessStack.push(this.uniqueId, currentArgumentsAccess);
argumentsAccessStack.push(this.compiler, currentArgumentsAccess);
argumentsAccessStack.push(this.currentArgumentsAccess, currentArgumentsAccess);
argumentsAccessStack.push(currentArgumentsAccess, function);
argumentsAccessStack.push(currentArgumentsAccess, traversal);
argumentsAccessStack.push(currentArgumentsAccess, ARGUMENTS);
argumentsAccessStack.push(currentArgumentsAccess, PARAMETER_PREFIX);
argumentsAccessStack.push(currentArgumentsAccess, this.paramPredix);
argumentsAccessStack.push(currentArgumentsAccess, this.uniqueId);
argumentsAccessStack.push(currentArgumentsAccess, this.compiler);
argumentsAccessStack.push(currentArgumentsAccess, this.currentArgumentsAccess);
02:01:33.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:34.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:34.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:34.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:34.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:35.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:35.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:36.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:36.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:37.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:37.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:38.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:38.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:38.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:38.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:39.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:39.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:40.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:40.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:41.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:41.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:41.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:41.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:42.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:42.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:43.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:43.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:44.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:44.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:44.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:44.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:45.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:45.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:46.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:46.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:46.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:46.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:47.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:47.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:48.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:48.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:49.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:49.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:49.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:49.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:50.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:50.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:51.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:51.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:52.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (argumentsAccessStack != null) {


}

if (currentArgumentsAccess != null) {


}

02:01:52.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:52.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:52.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:53.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (argumentsAccessStack == null) {
    return;
}

if (argumentsAccessStack == null) {
    throw new IllegalArgumentException("Empty variable: " + argumentsAccessStack);
}

if (currentArgumentsAccess == null) {
    return;
}

if (currentArgumentsAccess == null) {
    throw new IllegalArgumentException("Empty variable: " + currentArgumentsAccess);
}

02:01:53.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:54.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:54.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:55.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:55.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:55.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:55.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:56.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:01:56.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:57.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:57.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.OptimizeReturns ===94
02:01:57.437 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return true;
return false;
02:01:57.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:58.152 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:01:58.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:58.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:01:58.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1433
02:01:58.926 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return new NodeMismatch(this, node2);
if (node2 != null) {


}

02:01:58.928 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:59.874 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (node2 == null) {
    return null;
}

if (node2 == null) {
    throw new IllegalArgumentException("Empty variable: " + node2);
}

02:01:59.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:00.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:00.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:01.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
addChildToFront(node2);
addChildToFront(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildToFront(node2);
addChildToBack(node2);
addChildToBack(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildToBack(node2);
addChildrenToFront(node2);
addChildrenToFront(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildrenToFront(node2);
addChildrenToBack(node2);
addChildrenToBack(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildrenToBack(node2);
removeChild(node2);
removeChild(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	removeChild(node2);
detachChildren();
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	detachChildren();
setQuotedString();
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	setQuotedString();
02:02:01.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:02.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:02.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:03.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:03.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:04.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:04.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:05.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:05.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:06.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:06.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:07.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:07.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:08.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:08.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:09.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:09.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:10.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:10.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:11.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:11.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:12.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:12.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:13.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:13.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:14.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:14.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:15.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:15.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:16.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:16.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:17.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:17.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:18.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:18.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:19.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:19.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:20.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:02:20.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:20.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:20.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CollapseProperties ===805
02:02:21.018 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return;

02:02:21.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:21.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:21.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.SimpleDefinitionFinder ===429
02:02:21.921 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return null;

02:02:21.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:22.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:22.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===125
02:02:22.731 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case PARENTHESIZED_PROP:
if (PARENTHESIZED_PROP == 0) {
    new IllegalArgumentException("");
}

if (PARENTHESIZED_PROP != 0) {

    
}

if (PARENTHESIZED_PROP > 0) {

    
}

02:02:22.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:23.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:23.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:24.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:24.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:24.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
setType(PARENTHESIZED_PROP);
setType(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setType(PARENTHESIZED_PROP);
removeProp(PARENTHESIZED_PROP);
removeProp(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	removeProp(PARENTHESIZED_PROP);
setLength(PARENTHESIZED_PROP);
setLength(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setLength(PARENTHESIZED_PROP);
setLineno(PARENTHESIZED_PROP);
setLineno(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setLineno(PARENTHESIZED_PROP);
setCharno(PARENTHESIZED_PROP);
setCharno(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setCharno(PARENTHESIZED_PROP);
setSourceEncodedPosition(PARENTHESIZED_PROP);
setSourceEncodedPosition(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setSourceEncodedPosition(PARENTHESIZED_PROP);
setSourceEncodedPositionForTree(PARENTHESIZED_PROP);
setSourceEncodedPositionForTree(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setSourceEncodedPositionForTree(PARENTHESIZED_PROP);
detachChildren();
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	detachChildren();
setSideEffectFlags(PARENTHESIZED_PROP);
setSideEffectFlags(PARENTHESIZED_PROP);
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setSideEffectFlags(PARENTHESIZED_PROP);
setQuotedString();
	case PARENTHESIZED_PROP:
case PARENTHESIZED_PROP:
	setQuotedString();
02:02:24.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:25.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:25.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:26.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:26.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:27.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:27.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:28.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:28.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:29.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:29.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:30.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:30.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:31.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:31.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:32.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:32.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:33.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:33.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:34.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:34.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:35.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:35.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:36.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:36.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:37.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:37.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:38.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:38.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:39.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:39.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:40.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:40.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:41.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:41.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:42.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:42.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:43.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:43.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:44.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:44.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:45.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:45.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:46.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:46.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:47.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:47.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:48.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:48.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:49.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:49.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:50.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:50.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:50.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:50.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:51.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:02:51.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:52.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:52.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeFoldConstants ===1312
02:02:52.959 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
02:02:52.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:53.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:02:53.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:54.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:54.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeFoldConstants ===1309
02:02:54.818 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (n.getParent().isAdd()) {
      return true;
    }
if (n.getParent().isAdd(n)) {
      return true;
    }
if (n.getParent().isAdd(INVALID_GETELEM_INDEX_ERROR)) {
      return true;
    }
if (n.getParent().isAdd(INDEX_OUT_OF_BOUNDS_ERROR)) {
      return true;
    }
if (n.getParent().isAdd(NEGATING_A_NON_NUMBER_ERROR)) {
      return true;
    }
if (n.getParent().isAdd(BITWISE_OPERAND_OUT_OF_RANGE)) {
      return true;
    }
if (n.getParent().isAdd(SHIFT_AMOUNT_OUT_OF_BOUNDS)) {
      return true;
    }
if (n.getParent().isAdd(FRACTIONAL_BITWISE_OPERAND)) {
      return true;
    }
if (n.getParent().isAdd(MAX_FOLD_NUMBER)) {
      return true;
    }
if (n.getParent().isAdd(this.late)) {
      return true;
    }
02:02:54.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:55.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:55.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:56.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:56.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:57.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:57.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:58.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:58.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:59.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:02:59.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:00.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:00.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:00.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:00.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:01.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:01.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:02.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null && n.getParent().isAdd()) {
      return true;
    }
if (n != null || n.getParent().isAdd()) {
      return true;
    }
02:03:02.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:03.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:03.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:04.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

02:03:04.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:05.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return true;
}

if (n == null) {
    return false;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:03:05.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:06.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:06.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:07.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:07.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:08.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n.getParent().isAdd()) {
      return true;
    }
	if (n.getParent().isGetElem() &&
        n.getParent().getLastChild() == n) {
      return true;
    }

    // we can fold in the case "" + new String("")
    
null

    return false;
	if (n.getParent().isAdd()) {
      return true;
    }

MOVE-BUGGY-STATEMENT
02:03:08.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:09.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:09.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:09.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:03:09.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:10.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:10.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeFoldConstants ===1303
02:03:10.832 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (n.getParent().isGetElem() &&
        n.getParent().getLastChild() == n) {
      return true;
    }
if (n.getParent().isGetElem() || n.getParent().getLastChild() == n) {
      return true;
    }
if (n.getParent().isGetElem() &&
        n.getParent().getLastChild() != n) {
      return true;
    }
02:03:10.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:11.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:11.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:12.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (n != null) {


}

if (n != null) {


}

02:03:12.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:13.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:13.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:14.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:14.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:15.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return true;
}

if (n == null) {
    return false;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (n == null) {
    return true;
}

if (n == null) {
    return false;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (n == null) {
    return true;
}

if (n == null) {
    return false;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:03:15.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:16.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:16.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:17.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:17.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:17.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:17.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:18.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:18.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:19.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:19.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:20.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:20.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:21.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:21.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:22.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:22.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:23.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
tryReduceOperandsForOp(n);
tryReduceOperandsForOp(n);
	if (n.getParent().isGetElem() &&
        n.getParent().getLastChild() == n) {
      return true;
    }
if (n.getParent().isGetElem() &&
        n.getParent().getLastChild() == n) {
      return true;
    }
	tryReduceOperandsForOp(n);
tryConvertOperandsToNumber(n);
tryConvertOperandsToNumber(n);
	if (n.getParent().isGetElem() &&
        n.getParent().getLastChild() == n) {
      return true;
    }
if (n.getParent().isGetElem() &&
        n.getParent().getLastChild() == n) {
      return true;
    }
	tryConvertOperandsToNumber(n);
tryConvertToNumber(n);
tryConvertToNumber(n);
	if (n.getParent().isGetElem() &&
        n.getParent().getLastChild() == n) {
      return true;
    }
if (n.getParent().isGetElem() &&
        n.getParent().getLastChild() == n) {
      return true;
    }
	tryConvertToNumber(n);
02:03:23.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:24.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:24.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:25.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:25.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:26.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:26.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:27.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:27.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:27.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:27.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:28.878 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:28.878 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:29.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:29.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:30.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:30.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:31.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 


    // we can fold in the case "" + new String("")
    if (n.getParent().isAdd()) {
      return true;
    }
	if (n.getParent().isGetElem() &&
        n.getParent().getLastChild() == n) {
      return true;
    }

MOVE-BUGGY-STATEMENT


    // we can fold in the case "" + new String("")
    if (n.getParent().isAdd()) {
      return true;
    }
    return false;
	if (n.getParent().isGetElem() &&
        n.getParent().getLastChild() == n) {
      return true;
    }

MOVE-BUGGY-STATEMENT
02:03:31.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:32.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:32.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:33.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:03:33.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:34.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:34.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeFoldConstants ===1298
02:03:34.248 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return n;
if (n != null) {


}

02:03:34.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:35.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:03:35.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:36.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:36.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:36.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
tryReduceOperandsForOp(n);
tryReduceOperandsForOp(n);
	return n;
return n;
	tryReduceOperandsForOp(n);
tryConvertOperandsToNumber(n);
tryConvertOperandsToNumber(n);
	return n;
return n;
	tryConvertOperandsToNumber(n);
tryConvertToNumber(n);
tryConvertToNumber(n);
	return n;
return n;
	tryConvertToNumber(n);
02:03:36.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:37.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:37.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:38.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:38.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:39.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:39.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:40.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:40.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:41.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:41.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:42.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:42.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:43.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:43.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:44.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:44.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:44.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:03:44.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:45.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:45.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeFoldConstants ===1295
02:03:45.918 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (inForcedStringContext(n)) {
      return tryFoldInForcedStringContext(n);
    }
if (isAssignmentTarget(n)) {
      return tryFoldInForcedStringContext(n);
    }
02:03:45.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:46.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (inForcedStringContext(INVALID_GETELEM_INDEX_ERROR)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(INDEX_OUT_OF_BOUNDS_ERROR)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(NEGATING_A_NON_NUMBER_ERROR)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(BITWISE_OPERAND_OUT_OF_RANGE)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(SHIFT_AMOUNT_OUT_OF_BOUNDS)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(FRACTIONAL_BITWISE_OPERAND)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(MAX_FOLD_NUMBER)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(this.late)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext()) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(INVALID_GETELEM_INDEX_ERROR, n)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(INDEX_OUT_OF_BOUNDS_ERROR, n)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(NEGATING_A_NON_NUMBER_ERROR, n)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(BITWISE_OPERAND_OUT_OF_RANGE, n)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(SHIFT_AMOUNT_OUT_OF_BOUNDS, n)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(FRACTIONAL_BITWISE_OPERAND, n)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(MAX_FOLD_NUMBER, n)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(this.late, n)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(n, INVALID_GETELEM_INDEX_ERROR)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(n, INDEX_OUT_OF_BOUNDS_ERROR)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(n, NEGATING_A_NON_NUMBER_ERROR)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(n, BITWISE_OPERAND_OUT_OF_RANGE)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(n, SHIFT_AMOUNT_OUT_OF_BOUNDS)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(n, FRACTIONAL_BITWISE_OPERAND)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(n, MAX_FOLD_NUMBER)) {
      return tryFoldInForcedStringContext(n);
    }
if (inForcedStringContext(n, this.late)) {
      return tryFoldInForcedStringContext(n);
    }
02:03:46.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:47.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:47.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:48.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:48.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:49.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:49.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:50.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:50.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:51.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:51.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:52.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:52.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:53.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:53.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:53.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:53.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:54.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:54.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:55.742 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:55.742 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:56.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:56.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:57.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:57.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:58.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:58.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:59.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:03:59.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:00.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:00.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:01.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:01.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:02.004 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:02.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:02.878 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:02.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:03.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:03.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:04.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:04.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:05.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:05.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:06.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:06.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:07.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:07.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:08.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:08.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:09.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

02:04:09.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:10.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:04:10.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:11.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:11.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:11.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (inForcedStringContext(n)) {
      return tryFoldInForcedStringContext(n);
    }
	Preconditions.checkArgument(n.isNew());

    // we can remove this for GETELEM calls (anywhere else?)
    
null

    return n;
	if (inForcedStringContext(n)) {
      return tryFoldInForcedStringContext(n);
    }

MOVE-BUGGY-STATEMENT
02:04:11.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:12.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:12.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:13.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:04:13.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:14.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:14.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeFoldConstants ===1292
02:04:14.640 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Preconditions.checkArgument(n.isNew());
Preconditions.checkArgument(true, n.isNew());
Preconditions.checkArgument(false, n.isNew());
Preconditions.checkArgument(n.isNew(), true);
Preconditions.checkArgument(n.isNew(), false);
02:04:14.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:15.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:15.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:16.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:16.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:17.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:17.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:18.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
Preconditions.checkArgument(n, n.isNew());
Preconditions.checkArgument(INVALID_GETELEM_INDEX_ERROR, n.isNew());
Preconditions.checkArgument(INDEX_OUT_OF_BOUNDS_ERROR, n.isNew());
Preconditions.checkArgument(NEGATING_A_NON_NUMBER_ERROR, n.isNew());
Preconditions.checkArgument(BITWISE_OPERAND_OUT_OF_RANGE, n.isNew());
Preconditions.checkArgument(SHIFT_AMOUNT_OUT_OF_BOUNDS, n.isNew());
Preconditions.checkArgument(FRACTIONAL_BITWISE_OPERAND, n.isNew());
Preconditions.checkArgument(MAX_FOLD_NUMBER, n.isNew());
Preconditions.checkArgument(this.late, n.isNew());
Preconditions.checkArgument(n.isNew(), n);
Preconditions.checkArgument(n.isNew(), INVALID_GETELEM_INDEX_ERROR);
Preconditions.checkArgument(n.isNew(), INDEX_OUT_OF_BOUNDS_ERROR);
Preconditions.checkArgument(n.isNew(), NEGATING_A_NON_NUMBER_ERROR);
Preconditions.checkArgument(n.isNew(), BITWISE_OPERAND_OUT_OF_RANGE);
Preconditions.checkArgument(n.isNew(), SHIFT_AMOUNT_OUT_OF_BOUNDS);
Preconditions.checkArgument(n.isNew(), FRACTIONAL_BITWISE_OPERAND);
Preconditions.checkArgument(n.isNew(), MAX_FOLD_NUMBER);
Preconditions.checkArgument(n.isNew(), this.late);
02:04:18.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:19.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:19.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:20.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:20.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:20.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:20.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:21.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:21.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:22.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:22.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:23.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:23.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:24.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:24.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:25.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:25.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:26.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:26.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:27.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:27.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:28.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:28.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:28.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:28.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:29.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:29.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:30.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:30.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:31.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:31.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:32.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:32.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:33.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:33.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:34.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

02:04:34.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:35.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:04:35.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:36.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:36.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:37.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 


    // we can remove this for GETELEM calls (anywhere else?)
    if (inForcedStringContext(n)) {
      return tryFoldInForcedStringContext(n);
    }
	Preconditions.checkArgument(n.isNew());

MOVE-BUGGY-STATEMENT


    // we can remove this for GETELEM calls (anywhere else?)
    if (inForcedStringContext(n)) {
      return tryFoldInForcedStringContext(n);
    }
    return n;
	Preconditions.checkArgument(n.isNew());

MOVE-BUGGY-STATEMENT
02:04:37.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:37.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:37.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:38.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:04:38.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:39.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:39.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeFoldConstants ===78
02:04:39.729 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return tryFoldCtorCall(subtree);
return tryFoldCtorCall(INVALID_GETELEM_INDEX_ERROR);
return tryFoldCtorCall(INDEX_OUT_OF_BOUNDS_ERROR);
return tryFoldCtorCall(NEGATING_A_NON_NUMBER_ERROR);
return tryFoldCtorCall(BITWISE_OPERAND_OUT_OF_RANGE);
return tryFoldCtorCall(SHIFT_AMOUNT_OUT_OF_BOUNDS);
return tryFoldCtorCall(FRACTIONAL_BITWISE_OPERAND);
return tryFoldCtorCall(MAX_FOLD_NUMBER);
return tryFoldCtorCall(this.late);
return tryFoldCtorCall();
return tryFoldCtorCall(INVALID_GETELEM_INDEX_ERROR, subtree);
return tryFoldCtorCall(INDEX_OUT_OF_BOUNDS_ERROR, subtree);
return tryFoldCtorCall(NEGATING_A_NON_NUMBER_ERROR, subtree);
return tryFoldCtorCall(BITWISE_OPERAND_OUT_OF_RANGE, subtree);
return tryFoldCtorCall(SHIFT_AMOUNT_OUT_OF_BOUNDS, subtree);
return tryFoldCtorCall(FRACTIONAL_BITWISE_OPERAND, subtree);
return tryFoldCtorCall(MAX_FOLD_NUMBER, subtree);
return tryFoldCtorCall(this.late, subtree);
return tryFoldCtorCall(subtree, INVALID_GETELEM_INDEX_ERROR);
return tryFoldCtorCall(subtree, INDEX_OUT_OF_BOUNDS_ERROR);
return tryFoldCtorCall(subtree, NEGATING_A_NON_NUMBER_ERROR);
return tryFoldCtorCall(subtree, BITWISE_OPERAND_OUT_OF_RANGE);
return tryFoldCtorCall(subtree, SHIFT_AMOUNT_OUT_OF_BOUNDS);
return tryFoldCtorCall(subtree, FRACTIONAL_BITWISE_OPERAND);
return tryFoldCtorCall(subtree, MAX_FOLD_NUMBER);
return tryFoldCtorCall(subtree, this.late);
02:04:39.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:40.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:40.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:41.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:41.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:42.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:42.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:43.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:43.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:44.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:44.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:44.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:44.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:45.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:45.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:46.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:46.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:47.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:47.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:48.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:48.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:49.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:49.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:50.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:50.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:51.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:51.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:52.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:52.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:52.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:52.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:53.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:53.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:54.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:54.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:55.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:55.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:56.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:56.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:57.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:57.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:58.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:58.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:59.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:59.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:59.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:04:59.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:00.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:00.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:01.728 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
return optimizeSubtree(subtree);
return tryFoldBinaryOperator(subtree);
return tryReduceVoid(subtree);
return tryFoldTypeof(subtree);
return tryFoldUnaryOperator(subtree);
return tryFoldInForcedStringContext(subtree);
return getNormalizedNodeType(subtree);
return tryReduceOperandsForOp(subtree);
return tryConvertOperandsToNumber(subtree);
return tryConvertToNumber(subtree);
return inForcedStringContext(subtree);
return isAssignmentTarget(subtree);
02:05:01.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:02.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:02.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:03.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:03.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:04.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:04.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:05.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:05.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:06.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:06.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:06.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:06.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:07.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:07.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:08.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:08.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:09.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:09.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:10.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:10.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:11.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:11.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:12.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
return tryFoldCtorCall(true, subtree);
return tryFoldCtorCall(false, subtree);
return tryFoldCtorCall(subtree, true);
return tryFoldCtorCall(subtree, false);
02:05:12.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:13.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:13.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:14.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:14.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:15.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:15.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:15.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (subtree != null) {


}

02:05:15.971 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:16.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (subtree == null) {
    return null;
}

if (subtree == null) {
    throw new IllegalArgumentException("Empty variable: " + subtree);
}

02:05:16.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:17.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:17.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:18.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:05:18.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:19.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:19.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.RemoveUnusedVars ===748
02:05:19.624 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
current--;
if (current == 0) {
    new IllegalArgumentException("");
}

if (current != 0) {

    
}

if (current > 0) {

    
}

02:05:19.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:20.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:20.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:21.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:21.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:22.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
interpretAssigns();
	current--;
current--;
	interpretAssigns();
removeUnreferencedVars();
	current--;
current--;
	removeUnreferencedVars();
02:05:22.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:22.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:22.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:23.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:23.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:24.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:24.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:25.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
current--;
	changes = markReferencedVar(var) || changes;
            maybeUnreferenced.remove(current);
            
null
current--;
	maybeUnreferenced.remove(current);
            
null
02:05:25.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:26.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:26.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:27.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:05:27.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:27.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:27.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.RemoveUnusedVars ===747
02:05:27.900 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
maybeUnreferenced.remove(current);
maybeUnreferenced.remove(true, current);
maybeUnreferenced.remove(false, current);
maybeUnreferenced.remove(current, true);
maybeUnreferenced.remove(current, false);
02:05:27.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:28.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:28.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:29.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:29.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:30.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:30.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:31.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
maybeUnreferenced.remove(assign);
maybeUnreferenced.remove(maybeEscaped);
maybeUnreferenced.remove(hasPropertyAssign);
maybeUnreferenced.remove(assignedToUnknownValue);
maybeUnreferenced.remove(var);
maybeUnreferenced.remove(changes);
maybeUnreferenced.remove(this.compiler);
maybeUnreferenced.remove(this.codingConvention);
maybeUnreferenced.remove(this.removeGlobals);
maybeUnreferenced.remove(this.preserveFunctionExpressionNames);
maybeUnreferenced.remove(this.referenced);
maybeUnreferenced.remove(this.allFunctionScopes);
maybeUnreferenced.remove(this.assignsByVar);
maybeUnreferenced.remove(this.assignsByNode);
maybeUnreferenced.remove(this.inheritsCalls);
maybeUnreferenced.remove(this.continuations);
maybeUnreferenced.remove(this.modifyCallSites);
maybeUnreferenced.remove(this.callSiteOptimizer);
maybeUnreferenced.remove();
maybeUnreferenced.remove(assign, current);
maybeUnreferenced.remove(maybeEscaped, current);
maybeUnreferenced.remove(hasPropertyAssign, current);
maybeUnreferenced.remove(assignedToUnknownValue, current);
maybeUnreferenced.remove(var, current);
maybeUnreferenced.remove(changes, current);
maybeUnreferenced.remove(this.compiler, current);
maybeUnreferenced.remove(this.codingConvention, current);
maybeUnreferenced.remove(this.removeGlobals, current);
maybeUnreferenced.remove(this.preserveFunctionExpressionNames, current);
maybeUnreferenced.remove(this.referenced, current);
maybeUnreferenced.remove(this.allFunctionScopes, current);
maybeUnreferenced.remove(this.assignsByVar, current);
maybeUnreferenced.remove(this.assignsByNode, current);
maybeUnreferenced.remove(this.inheritsCalls, current);
maybeUnreferenced.remove(this.continuations, current);
maybeUnreferenced.remove(this.modifyCallSites, current);
maybeUnreferenced.remove(this.callSiteOptimizer, current);
maybeUnreferenced.remove(current, assign);
maybeUnreferenced.remove(current, maybeEscaped);
maybeUnreferenced.remove(current, hasPropertyAssign);
maybeUnreferenced.remove(current, assignedToUnknownValue);
maybeUnreferenced.remove(current, var);
maybeUnreferenced.remove(current, changes);
maybeUnreferenced.remove(current, this.compiler);
maybeUnreferenced.remove(current, this.codingConvention);
maybeUnreferenced.remove(current, this.removeGlobals);
maybeUnreferenced.remove(current, this.preserveFunctionExpressionNames);
maybeUnreferenced.remove(current, this.referenced);
maybeUnreferenced.remove(current, this.allFunctionScopes);
maybeUnreferenced.remove(current, this.assignsByVar);
maybeUnreferenced.remove(current, this.assignsByNode);
maybeUnreferenced.remove(current, this.inheritsCalls);
maybeUnreferenced.remove(current, this.continuations);
maybeUnreferenced.remove(current, this.modifyCallSites);
maybeUnreferenced.remove(current, this.callSiteOptimizer);
02:05:31.197 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:32.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:32.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:32.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:32.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:33.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:33.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:34.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:34.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:35.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:35.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:36.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:36.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:36.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:36.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:37.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:37.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:38.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:38.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:39.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:39.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:40.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:40.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:41.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:41.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:41.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:41.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:42.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:42.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:43.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:43.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:44.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:44.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:45.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:45.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:45.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:45.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:46.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:46.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:47.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:47.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:48.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:48.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:49.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:49.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:49.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:49.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:50.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:50.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:51.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:51.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:52.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:52.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:53.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:53.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:54.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:54.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:54.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:54.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:55.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:55.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:56.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:56.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:57.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:57.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:58.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:58.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:58.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:58.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:59.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:05:59.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:00.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:00.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:01.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:01.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:02.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:02.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:02.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:02.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:03.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:03.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:04.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:04.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:05.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:05.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:06.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:06.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:07.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:07.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:07.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:07.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:08.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:08.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:09.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:09.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:10.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:10.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:11.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:11.252 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:12.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:12.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:12.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:12.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:13.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:13.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:14.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:14.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:15.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:15.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:16.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (maybeUnreferenced != null) {


}

02:06:16.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:17.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (maybeUnreferenced == null) {
    return;
}

if (maybeUnreferenced == null) {
    throw new IllegalArgumentException("Empty variable: " + maybeUnreferenced);
}

02:06:17.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:17.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:17.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:18.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (current == 0) {
    new IllegalArgumentException("");
}

if (current != 0) {

    
}

if (current > 0) {

    
}

02:06:18.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:19.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:19.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:20.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:20.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:21.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
maybeUnreferenced.remove(current);
	changes = markReferencedVar(var) || changes;
            
null

            current--;
	maybeUnreferenced.remove(current);

MOVE-BUGGY-STATEMENT
02:06:21.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:21.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:21.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:22.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:06:22.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:23.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:23.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.RemoveUnusedVars ===746
02:06:23.636 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
changes = markReferencedVar(var) || changes;
if (var != null) {


}

02:06:23.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:24.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (var == null) {
    return;
}

if (var == null) {
    throw new IllegalArgumentException("Empty variable: " + var);
}

02:06:24.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:25.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:25.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:26.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
interpretAssigns();
	changes = markReferencedVar(var) || changes;
changes = markReferencedVar(var) || changes;
	interpretAssigns();
removeUnreferencedVars();
	changes = markReferencedVar(var) || changes;
changes = markReferencedVar(var) || changes;
	removeUnreferencedVars();
02:06:26.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:26.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:26.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:27.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:27.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:28.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:28.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:29.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

            maybeUnreferenced.remove(current);
	changes = markReferencedVar(var) || changes;

MOVE-BUGGY-STATEMENT

            maybeUnreferenced.remove(current);
            current--;
	changes = markReferencedVar(var) || changes;

MOVE-BUGGY-STATEMENT
02:06:29.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:30.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:30.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:30.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:06:31.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:31.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:31.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallback ===280
02:06:31.835 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return true;
return false;
02:06:31.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:32.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:06:32.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:33.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:33.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.OptimizeReturns ===90
02:06:33.389 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return true;
return false;
02:06:33.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:34.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:06:34.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:34.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:34.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.NodeUtil ===1132
02:06:34.909 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
02:06:34.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:35.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:06:35.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:37.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:37.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.NodeUtil ===1131
02:06:37.126 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Preconditions.checkState(isFunctionExpression(n));
Preconditions.checkState(true, isFunctionExpression(n));
Preconditions.checkState(false, isFunctionExpression(n));
Preconditions.checkState(isFunctionExpression(n), true);
Preconditions.checkState(isFunctionExpression(n), false);
02:06:37.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:38.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:38.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:39.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:39.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:40.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:40.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:41.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
Preconditions.checkState(n, isFunctionExpression(n));
Preconditions.checkState(knownConstants, isFunctionExpression(n));
Preconditions.checkState(MAX_POSITIVE_INTEGER_NUMBER, isFunctionExpression(n));
Preconditions.checkState(JSC_PROPERTY_NAME_FN, isFunctionExpression(n));
Preconditions.checkState(CONSTRUCTORS_WITHOUT_SIDE_EFFECTS, isFunctionExpression(n));
Preconditions.checkState(BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS, isFunctionExpression(n));
Preconditions.checkState(OBJECT_METHODS_WITHOUT_SIDEEFFECTS, isFunctionExpression(n));
Preconditions.checkState(REGEXP_METHODS, isFunctionExpression(n));
Preconditions.checkState(STRING_REGEXP_METHODS, isFunctionExpression(n));
Preconditions.checkState(NUMBERIC_RESULT_PREDICATE, isFunctionExpression(n));
Preconditions.checkState(BOOLEAN_RESULT_PREDICATE, isFunctionExpression(n));
Preconditions.checkState(MAY_BE_STRING_PREDICATE, isFunctionExpression(n));
Preconditions.checkState(MATCH_NOT_FUNCTION, isFunctionExpression(n));
Preconditions.checkState(isFunctionExpression(n), n);
Preconditions.checkState(isFunctionExpression(n), knownConstants);
Preconditions.checkState(isFunctionExpression(n), MAX_POSITIVE_INTEGER_NUMBER);
Preconditions.checkState(isFunctionExpression(n), JSC_PROPERTY_NAME_FN);
Preconditions.checkState(isFunctionExpression(n), CONSTRUCTORS_WITHOUT_SIDE_EFFECTS);
Preconditions.checkState(isFunctionExpression(n), BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS);
Preconditions.checkState(isFunctionExpression(n), OBJECT_METHODS_WITHOUT_SIDEEFFECTS);
Preconditions.checkState(isFunctionExpression(n), REGEXP_METHODS);
Preconditions.checkState(isFunctionExpression(n), STRING_REGEXP_METHODS);
Preconditions.checkState(isFunctionExpression(n), NUMBERIC_RESULT_PREDICATE);
Preconditions.checkState(isFunctionExpression(n), BOOLEAN_RESULT_PREDICATE);
Preconditions.checkState(isFunctionExpression(n), MAY_BE_STRING_PREDICATE);
Preconditions.checkState(isFunctionExpression(n), MATCH_NOT_FUNCTION);
02:06:41.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:42.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:42.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:43.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:43.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:44.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:44.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:45.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:45.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:46.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:46.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:47.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:47.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:48.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:48.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:49.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:49.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:50.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:50.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:51.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:51.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:52.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:52.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:53.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:53.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:55.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:55.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:56.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:56.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:57.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:57.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:58.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:58.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:59.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:06:59.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:00.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:00.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:01.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:01.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:02.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:02.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:03.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:03.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:04.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:04.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:05.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:05.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:06.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:06.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:07.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:07.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:08.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

02:07:08.741 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:09.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return true;
}

if (n == null) {
    return false;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:07:09.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:10.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:10.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:11.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:11.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:12.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:07:12.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:14.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:14.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.RemoveUnusedVars ===821
02:07:14.035 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
compiler.reportCodeChange();
compiler.reportCodeChange(true);
compiler.reportCodeChange(false);
02:07:14.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:14.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:14.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:15.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
compiler.reportCodeChange(parent);
compiler.reportCodeChange(toRemove);
compiler.reportCodeChange(nameNode);
compiler.reportCodeChange(exprCallNode);
compiler.reportCodeChange(var);
compiler.reportCodeChange(it);
compiler.reportCodeChange(convention);
compiler.reportCodeChange(this.codingConvention);
compiler.reportCodeChange(this.removeGlobals);
compiler.reportCodeChange(this.preserveFunctionExpressionNames);
compiler.reportCodeChange(this.referenced);
compiler.reportCodeChange(this.maybeUnreferenced);
compiler.reportCodeChange(this.allFunctionScopes);
compiler.reportCodeChange(this.assignsByVar);
compiler.reportCodeChange(this.assignsByNode);
compiler.reportCodeChange(this.inheritsCalls);
compiler.reportCodeChange(this.continuations);
compiler.reportCodeChange(this.modifyCallSites);
compiler.reportCodeChange(this.callSiteOptimizer);
02:07:15.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:16.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:16.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:17.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:17.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:18.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:18.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:19.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:19.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:19.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:19.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:20.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:20.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:21.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:21.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:22.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:22.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:23.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:23.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:24.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:24.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:24.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:24.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:25.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:25.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:26.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:26.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:27.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:27.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:28.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:28.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:29.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:29.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:29.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:29.897 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:30.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:30.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:31.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
compiler.getParserConfig();
compiler.getModuleGraph();
compiler.getDefaultErrorReporter();
compiler.getReverseAbstractInterpreter();
compiler.getProgress();
compiler.getCodingConvention();
compiler.getTypedScopeCreator();
compiler.getSynthesizedExternsInput();
compiler.getErrorManager();
compiler.getCssRenamingMap();
compiler.getLifeCycleStage();
compiler.getUniqueNameIdSupplier();
compiler.getRoot();
compiler.getTypeRegistry();
compiler.getTypeValidator();
compiler.hasHaltingErrors();
compiler.isIdeMode();
compiler.acceptEcmaScript5();
compiler.acceptConstKeyword();
compiler.isTypeCheckingEnabled();
compiler.hasRegExpGlobalReferences();
compiler.getInputsInOrder();
compiler.getGlobalVarReferences();
compiler.getTopScope();
02:07:31.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:32.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:32.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:33.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:33.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:34.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:34.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:34.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:34.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:35.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:35.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:36.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:36.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:37.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:37.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:38.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:38.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:38.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:38.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:39.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:39.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:40.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:40.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:41.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:41.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:42.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:42.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:43.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:43.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:43.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:43.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:44.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:44.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:45.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:45.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:46.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:46.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:47.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:47.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:47.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:47.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:48.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:48.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:49.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:49.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:50.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:50.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:51.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (compiler != null) {


}

02:07:51.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:52.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (compiler == null) {
    return;
}

if (compiler == null) {
    throw new IllegalArgumentException("Empty variable: " + compiler);
}

02:07:52.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:52.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:52.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:53.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
compiler.reportCodeChange();
	toRemove.getFirstChild().setString("");
          
null
02:07:53.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:54.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:07:54.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:55.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:55.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.RemoveUnusedVars ===820
02:07:55.327 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
toRemove.getFirstChild().setString("");
toRemove.getFirstChild().setString(true, "");
toRemove.getFirstChild().setString(false, "");
toRemove.getFirstChild().setString("", true);
toRemove.getFirstChild().setString("", false);
02:07:55.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:56.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:56.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:56.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:56.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:57.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:57.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:58.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
toRemove.getFirstChild().setString(parent, "");
toRemove.getFirstChild().setString(toRemove, "");
toRemove.getFirstChild().setString(nameNode, "");
toRemove.getFirstChild().setString(exprCallNode, "");
toRemove.getFirstChild().setString(var, "");
toRemove.getFirstChild().setString(it, "");
toRemove.getFirstChild().setString(convention, "");
toRemove.getFirstChild().setString(this.compiler, "");
toRemove.getFirstChild().setString(this.codingConvention, "");
toRemove.getFirstChild().setString(this.removeGlobals, "");
toRemove.getFirstChild().setString(this.preserveFunctionExpressionNames, "");
toRemove.getFirstChild().setString(this.referenced, "");
toRemove.getFirstChild().setString(this.maybeUnreferenced, "");
toRemove.getFirstChild().setString(this.allFunctionScopes, "");
toRemove.getFirstChild().setString(this.assignsByVar, "");
toRemove.getFirstChild().setString(this.assignsByNode, "");
toRemove.getFirstChild().setString(this.inheritsCalls, "");
toRemove.getFirstChild().setString(this.continuations, "");
toRemove.getFirstChild().setString(this.modifyCallSites, "");
toRemove.getFirstChild().setString(this.callSiteOptimizer, "");
toRemove.getFirstChild().setString("", parent);
toRemove.getFirstChild().setString("", toRemove);
toRemove.getFirstChild().setString("", nameNode);
toRemove.getFirstChild().setString("", exprCallNode);
toRemove.getFirstChild().setString("", var);
toRemove.getFirstChild().setString("", it);
toRemove.getFirstChild().setString("", convention);
toRemove.getFirstChild().setString("", this.compiler);
toRemove.getFirstChild().setString("", this.codingConvention);
toRemove.getFirstChild().setString("", this.removeGlobals);
toRemove.getFirstChild().setString("", this.preserveFunctionExpressionNames);
toRemove.getFirstChild().setString("", this.referenced);
toRemove.getFirstChild().setString("", this.maybeUnreferenced);
toRemove.getFirstChild().setString("", this.allFunctionScopes);
toRemove.getFirstChild().setString("", this.assignsByVar);
toRemove.getFirstChild().setString("", this.assignsByNode);
toRemove.getFirstChild().setString("", this.inheritsCalls);
toRemove.getFirstChild().setString("", this.continuations);
toRemove.getFirstChild().setString("", this.modifyCallSites);
toRemove.getFirstChild().setString("", this.callSiteOptimizer);
02:07:58.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:07:59.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:07:59.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:00.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:00.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:00.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:00.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:01.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:01.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:02.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:02.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:03.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:03.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:04.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:04.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:05.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:05.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:05.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:05.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:06.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:06.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:07.478 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:07.478 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:08.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:08.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:09.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:09.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:09.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:09.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:10.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:10.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:11.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:11.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:12.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:12.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:13.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:13.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:14.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:14.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:14.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:14.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:15.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:15.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:16.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:16.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:17.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:17.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:18.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:18.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:19.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:19.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:19.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:19.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:20.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:20.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:21.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:21.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:22.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:22.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:23.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:23.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:23.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:23.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:24.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:24.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:25.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:25.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:26.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:26.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:27.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:27.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:28.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:28.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:28.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:28.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:29.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:29.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:30.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:30.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:31.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (toRemove != null) {


}

02:08:31.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:32.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (toRemove == null) {
    return;
}

if (toRemove == null) {
    throw new IllegalArgumentException("Empty variable: " + toRemove);
}

02:08:32.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:33.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:33.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:33.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

          compiler.reportCodeChange();
	toRemove.getFirstChild().setString("");

MOVE-BUGGY-STATEMENT
02:08:33.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:34.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:08:34.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:35.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:35.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.SimpleDefinitionFinder ===425
02:08:35.553 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (NodeUtil.isObjectLitKey(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isLiteralValue(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isValidDefineValue(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.mayEffectMutableState(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.mayHaveSideEffects(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.constructorCallHasSideEffects(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.functionCallHasSideEffects(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.nodeTypeMayHaveSideEffects(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.canBeSideEffected(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.valueCheck(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.mayBeString(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isControlStructureCodeBlock(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isTryFinallyNode(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectCallMethod(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isVarOrSimpleAssignLhs(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.containsType(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isNameReferenced(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.evaluatesToLocalValue(parent, parent.getParent())) {
        return parent;
      }
02:08:35.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:36.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:36.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:37.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:37.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:37.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:37.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:38.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:38.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:39.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:39.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:40.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:40.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:40.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:40.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:41.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:41.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:42.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:42.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:43.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:43.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:44.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:44.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:44.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:44.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:45.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:45.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:46.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:46.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:47.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:47.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:47.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:47.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:48.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (NodeUtil.isObjectLitKey(function, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(this.compiler, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(this.definitionSiteMap, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(this.nameDefinitionMultimap, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(this.nameUseSiteMultimap, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey( parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(function, parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(this.compiler, parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(this.definitionSiteMap, parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(this.nameDefinitionMultimap, parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(this.nameUseSiteMultimap, parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(parent, function, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(parent, this.compiler, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(parent, this.definitionSiteMap, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(parent, this.nameDefinitionMultimap, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(parent, this.nameUseSiteMultimap, parent.getParent())) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(parent, parent.getParent(), function)) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(parent, parent.getParent(), this.compiler)) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(parent, parent.getParent(), this.definitionSiteMap)) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(parent, parent.getParent(), this.nameDefinitionMultimap)) {
        return parent;
      }
if (NodeUtil.isObjectLitKey(parent, parent.getParent(), this.nameUseSiteMultimap)) {
        return parent;
      }
02:08:48.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:49.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:49.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:50.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:50.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:50.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:50.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:51.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:51.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:52.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:52.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:53.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:53.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:53.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:53.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:54.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:54.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:55.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:55.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:56.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:56.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:56.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:56.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:57.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:57.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:58.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:58.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:59.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:59.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:59.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:08:59.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:00.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:00.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:01.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:01.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:02.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:02.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:02.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:02.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:03.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:03.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:04.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (NodeUtil != null && NodeUtil.isObjectLitKey(parent, parent.getParent())) {
        return parent;
      }
if (NodeUtil != null || NodeUtil.isObjectLitKey(parent, parent.getParent())) {
        return parent;
      }
02:09:04.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:05.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:05.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:05.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (parent != null) {


}

if (parent != null) {


}

02:09:05.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:06.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:06.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:07.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (parent == null) {
    return null;
}

if (parent == null) {
    throw new IllegalArgumentException("Empty variable: " + parent);
}

if (parent == null) {
    return null;
}

if (parent == null) {
    throw new IllegalArgumentException("Empty variable: " + parent);
}

02:09:07.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:08.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:08.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:09.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:09.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:09.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:09.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:10.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (NodeUtil.isObjectLitKey(parent, parent.getParent())) {
        return parent;
      }
	return parent.getFirstChild();
      } else 
null
02:09:10.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:10.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:09:10.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:11.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:11.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.SimpleDefinitionFinder ===317
02:09:11.303 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
02:09:11.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:12.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:09:12.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:12.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:12.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax ===137
02:09:12.869 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return node;
if (node != null) {


}

02:09:12.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:13.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (node == null) {
    return null;
}

if (node == null) {
    throw new IllegalArgumentException("Empty variable: " + node);
}

02:09:13.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:14.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:14.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:15.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
tryJoinForCondition(node);
tryJoinForCondition(node);
	return node;
return node;
	tryJoinForCondition(node);
tryRemoveRepeatedStatements(node);
tryRemoveRepeatedStatements(node);
	return node;
return node;
	tryRemoveRepeatedStatements(node);
02:09:15.664 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:16.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:16.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:17.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:17.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:18.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:18.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:19.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:19.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:20.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:20.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:21.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:09:21.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:22.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:22.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.RemoveUnusedVars ===819
02:09:22.126 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (!preserveFunctionExpressionNames) {
          toRemove.getFirstChild().setString("");
          compiler.reportCodeChange();
        }
if (preserveFunctionExpressionNames != null) {


}

02:09:22.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:22.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (preserveFunctionExpressionNames == null) {
    return;
}

if (preserveFunctionExpressionNames == null) {
    throw new IllegalArgumentException("Empty variable: " + preserveFunctionExpressionNames);
}

02:09:22.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:23.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:23.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:24.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
interpretAssigns();
	if (!preserveFunctionExpressionNames) {
          toRemove.getFirstChild().setString("");
          compiler.reportCodeChange();
        }
if (!preserveFunctionExpressionNames) {
          toRemove.getFirstChild().setString("");
          compiler.reportCodeChange();
        }
	interpretAssigns();
removeUnreferencedVars();
	if (!preserveFunctionExpressionNames) {
          toRemove.getFirstChild().setString("");
          compiler.reportCodeChange();
        }
if (!preserveFunctionExpressionNames) {
          toRemove.getFirstChild().setString("");
          compiler.reportCodeChange();
        }
	removeUnreferencedVars();
02:09:24.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:25.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:25.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:26.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:26.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:27.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:27.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:28.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

        // Don't remove bleeding functions.
      } else if (parent != null &&
          parent.isFor() &&
          parent.getChildCount() < 4) {
        // foreach iterations have 3 children. Leave them alone.
      } else if (toRemove.isVar() &&
          nameNode.hasChildren() &&
          NodeUtil.mayHaveSideEffects(nameNode.getFirstChild())) {
        // If this is a single var declaration, we can at least remove the
        // declaration itself and just leave the value, e.g.,
        // var a = foo(); => foo();
        if (toRemove.getChildCount() == 1) {
          parent.replaceChild(toRemove,
              IR.exprResult(nameNode.removeFirstChild()));
          compiler.reportCodeChange();
        }
      } else if (toRemove.isVar() &&
          toRemove.getChildCount() > 1) {
        // For var declarations with multiple names (i.e. var a, b, c),
        // only remove the unreferenced name
        toRemove.removeChild(nameNode);
        compiler.reportCodeChange();
      } else if (parent != null) {
        NodeUtil.removeChild(parent, toRemove);
        compiler.reportCodeChange();
      }
	if (!preserveFunctionExpressionNames) {
          toRemove.getFirstChild().setString("");
          compiler.reportCodeChange();
        }

MOVE-BUGGY-STATEMENT
02:09:28.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:28.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:09:28.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:29.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:29.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.OptimizeParameters ===109
02:09:29.683 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
02:09:29.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:30.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:09:30.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:31.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:31.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.GatherRawExports ===73
02:09:31.229 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
02:09:31.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:31.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:09:31.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:32.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:32.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax ===1351
02:09:32.731 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return n;
if (n != null) {


}

02:09:32.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:33.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:09:33.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:34.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:34.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:35.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
tryJoinForCondition(n);
tryJoinForCondition(n);
	return n;
return n;
	tryJoinForCondition(n);
tryRemoveRepeatedStatements(n);
tryRemoveRepeatedStatements(n);
	return n;
return n;
	tryRemoveRepeatedStatements(n);
02:09:35.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:36.436 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:36.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:37.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:37.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:38.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:38.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:39.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:39.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:40.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:40.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:41.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:09:41.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:41.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:41.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax ===1343
02:09:42.021 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(n)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(AND_PRECEDENCE)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(OR_PRECEDENCE)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(NOT_PRECEDENCE)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(this.late)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(this.STRING_SPLIT_OVERHEAD)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(INVALID_REGULAR_EXPRESSION_FLAGS)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(DONT_TRAVERSE_FUNCTIONS_PREDICATE)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(REGEXP_FLAGS_RE)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains()) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(n, className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(AND_PRECEDENCE, className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(OR_PRECEDENCE, className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(NOT_PRECEDENCE, className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(this.late, className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(this.STRING_SPLIT_OVERHEAD, className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(INVALID_REGULAR_EXPRESSION_FLAGS, className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(DONT_TRAVERSE_FUNCTIONS_PREDICATE, className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(REGEXP_FLAGS_RE, className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(className, n)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(className, AND_PRECEDENCE)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(className, OR_PRECEDENCE)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(className, NOT_PRECEDENCE)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(className, this.late)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(className, this.STRING_SPLIT_OVERHEAD)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(className, INVALID_REGULAR_EXPRESSION_FLAGS)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(className, DONT_TRAVERSE_FUNCTIONS_PREDICATE)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS.contains(className, REGEXP_FLAGS_RE)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
02:09:42.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:42.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:42.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:43.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:43.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:44.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:44.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:45.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:45.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:46.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:46.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:47.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:47.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:48.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:48.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:49.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:49.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:50.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:50.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:51.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:51.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:51.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:51.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:52.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:52.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:53.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:53.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:54.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:54.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:55.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:55.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:56.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:56.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:57.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:57.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:58.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:58.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:59.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:09:59.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:00.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:00.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:00.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:00.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:01.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:01.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:02.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:02.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:03.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:03.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:04.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:04.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:05.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:05.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:06.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:06.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:07.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (STANDARD_OBJECT_CONSTRUCTORS != null && STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
if (STANDARD_OBJECT_CONSTRUCTORS != null || STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
02:10:07.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:08.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:08.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:09.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (className != null) {


}

02:10:09.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:09.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (className == null) {
    return null;
}

if (className == null) {
    throw new IllegalArgumentException("Empty variable: " + className);
}

02:10:09.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:10.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:10.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:11.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
	String className = n.getFirstChild().getString();
        
null
02:10:11.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:12.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:10:12.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:13.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:13.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax ===1342
02:10:13.655 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
String className = n.getFirstChild().getString();
String className = n.getFirstChild().getString(className);
String className = n.getFirstChild().getString(n);
String className = n.getFirstChild().getString(AND_PRECEDENCE);
String className = n.getFirstChild().getString(OR_PRECEDENCE);
String className = n.getFirstChild().getString(NOT_PRECEDENCE);
String className = n.getFirstChild().getString(this.late);
String className = n.getFirstChild().getString(this.STRING_SPLIT_OVERHEAD);
String className = n.getFirstChild().getString(INVALID_REGULAR_EXPRESSION_FLAGS);
String className = n.getFirstChild().getString(DONT_TRAVERSE_FUNCTIONS_PREDICATE);
String className = n.getFirstChild().getString(STANDARD_OBJECT_CONSTRUCTORS);
String className = n.getFirstChild().getString(REGEXP_FLAGS_RE);
02:10:13.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:14.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:14.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:15.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:15.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:16.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:16.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:17.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:17.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:18.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:18.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:19.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:19.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:20.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:20.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:20.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:20.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:21.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:21.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:22.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:22.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:23.728 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
String className = className.getFirstChild().getString();
String className = AND_PRECEDENCE.getFirstChild().getString();
String className = OR_PRECEDENCE.getFirstChild().getString();
String className = NOT_PRECEDENCE.getFirstChild().getString();
String className = this.late.getFirstChild().getString();
String className = this.STRING_SPLIT_OVERHEAD.getFirstChild().getString();
String className = INVALID_REGULAR_EXPRESSION_FLAGS.getFirstChild().getString();
String className = DONT_TRAVERSE_FUNCTIONS_PREDICATE.getFirstChild().getString();
String className = STANDARD_OBJECT_CONSTRUCTORS.getFirstChild().getString();
String className = REGEXP_FLAGS_RE.getFirstChild().getString();
02:10:23.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:24.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:24.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:25.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:25.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:26.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:26.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:27.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:27.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:28.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:28.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:29.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:29.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:30.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:30.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:31.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:31.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:32.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:32.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:32.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

02:10:32.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:33.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:10:33.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:34.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:34.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:35.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:10:35.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:36.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:36.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax ===1341
02:10:36.596 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
if (n.getFirstChild().isName(n)) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
if (n.getFirstChild().isName(AND_PRECEDENCE)) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
if (n.getFirstChild().isName(OR_PRECEDENCE)) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
if (n.getFirstChild().isName(NOT_PRECEDENCE)) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
if (n.getFirstChild().isName(this.late)) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
if (n.getFirstChild().isName(this.STRING_SPLIT_OVERHEAD)) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
if (n.getFirstChild().isName(INVALID_REGULAR_EXPRESSION_FLAGS)) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
if (n.getFirstChild().isName(DONT_TRAVERSE_FUNCTIONS_PREDICATE)) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
if (n.getFirstChild().isName(STANDARD_OBJECT_CONSTRUCTORS)) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
if (n.getFirstChild().isName(REGEXP_FLAGS_RE)) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
02:10:36.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:37.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:37.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:38.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:38.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:39.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:39.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:40.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:40.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:41.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:41.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:42.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:42.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:42.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:42.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:43.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:43.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:44.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:44.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:45.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null && n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
if (n != null || n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
02:10:45.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:46.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:46.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:47.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

02:10:47.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:48.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:10:48.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:49.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:49.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:50.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:10:50.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:51.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:51.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax ===1340
02:10:51.222 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (isASTNormalized()) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
if (isEcmaScript5OrGreater()) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
02:10:51.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:52.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (isASTNormalized(n)) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
if (isASTNormalized(AND_PRECEDENCE)) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
if (isASTNormalized(OR_PRECEDENCE)) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
if (isASTNormalized(NOT_PRECEDENCE)) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
if (isASTNormalized(this.late)) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
if (isASTNormalized(this.STRING_SPLIT_OVERHEAD)) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
if (isASTNormalized(INVALID_REGULAR_EXPRESSION_FLAGS)) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
if (isASTNormalized(DONT_TRAVERSE_FUNCTIONS_PREDICATE)) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
if (isASTNormalized(STANDARD_OBJECT_CONSTRUCTORS)) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
if (isASTNormalized(REGEXP_FLAGS_RE)) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
02:10:52.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:53.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:53.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:53.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:53.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:54.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:54.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:55.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:55.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:56.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:56.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:57.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:57.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:58.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:58.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:59.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:10:59.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:00.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:00.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:01.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (isASTNormalized()) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
	Preconditions.checkState(n.isNew());

    // If name normalization has been run then we know that
    // new Object() does in fact refer to what we think it is
    // and not some custom-defined Object().
    
null


    return n;
	if (isASTNormalized()) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }

MOVE-BUGGY-STATEMENT
02:11:01.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:02.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:02.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:03.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:11:03.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:03.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:03.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax ===1335
02:11:03.974 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Preconditions.checkState(n.isNew());
Preconditions.checkState(true, n.isNew());
Preconditions.checkState(false, n.isNew());
Preconditions.checkState(n.isNew(), true);
Preconditions.checkState(n.isNew(), false);
02:11:03.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:04.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:04.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:05.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:05.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:06.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:06.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:07.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
Preconditions.checkState(n, n.isNew());
Preconditions.checkState(AND_PRECEDENCE, n.isNew());
Preconditions.checkState(OR_PRECEDENCE, n.isNew());
Preconditions.checkState(NOT_PRECEDENCE, n.isNew());
Preconditions.checkState(this.late, n.isNew());
Preconditions.checkState(this.STRING_SPLIT_OVERHEAD, n.isNew());
Preconditions.checkState(INVALID_REGULAR_EXPRESSION_FLAGS, n.isNew());
Preconditions.checkState(DONT_TRAVERSE_FUNCTIONS_PREDICATE, n.isNew());
Preconditions.checkState(STANDARD_OBJECT_CONSTRUCTORS, n.isNew());
Preconditions.checkState(REGEXP_FLAGS_RE, n.isNew());
Preconditions.checkState(n.isNew(), n);
Preconditions.checkState(n.isNew(), AND_PRECEDENCE);
Preconditions.checkState(n.isNew(), OR_PRECEDENCE);
Preconditions.checkState(n.isNew(), NOT_PRECEDENCE);
Preconditions.checkState(n.isNew(), this.late);
Preconditions.checkState(n.isNew(), this.STRING_SPLIT_OVERHEAD);
Preconditions.checkState(n.isNew(), INVALID_REGULAR_EXPRESSION_FLAGS);
Preconditions.checkState(n.isNew(), DONT_TRAVERSE_FUNCTIONS_PREDICATE);
Preconditions.checkState(n.isNew(), STANDARD_OBJECT_CONSTRUCTORS);
Preconditions.checkState(n.isNew(), REGEXP_FLAGS_RE);
02:11:07.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:08.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:08.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:09.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:09.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:10.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:10.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:11.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:11.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:12.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:12.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:13.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:13.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:14.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:14.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:15.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:15.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:16.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:16.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:16.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:16.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:17.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:17.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:18.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:18.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:19.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:19.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:20.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:20.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:21.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:21.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:22.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:22.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:23.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:23.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:24.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:24.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:25.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:25.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:26.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

02:11:26.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:27.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return null;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:11:27.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:28.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:28.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:28.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 


    // If name normalization has been run then we know that
    // new Object() does in fact refer to what we think it is
    // and not some custom-defined Object().
    if (isASTNormalized()) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }
	Preconditions.checkState(n.isNew());

MOVE-BUGGY-STATEMENT


    // If name normalization has been run then we know that
    // new Object() does in fact refer to what we think it is
    // and not some custom-defined Object().
    if (isASTNormalized()) {
      if (n.getFirstChild().isName()) {
        String className = n.getFirstChild().getString();
        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {
          n.setType(Token.CALL);
          n.putBooleanProp(Node.FREE_CALL, true);
          reportCodeChange();
        }
      }
    }

    return n;
	Preconditions.checkState(n.isNew());

MOVE-BUGGY-STATEMENT
02:11:28.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:29.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:29.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:30.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:11:30.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:31.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:31.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.SimpleDefinitionFinder ===409
02:11:31.742 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
02:11:31.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:32.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:11:32.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:33.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:33.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PureFunctionIdentifier ===280
02:11:33.289 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
break;

02:11:33.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:34.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:34.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PureFunctionIdentifier ===279
02:11:34.281 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
functionInfo.setTaintsUnknown();
functionInfo.setTaintsUnknown(true);
functionInfo.setTaintsUnknown(false);
02:11:34.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:35.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:35.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:36.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
functionInfo.setTaintsUnknown(defs);
functionInfo.setTaintsUnknown(callee);
functionInfo.setTaintsUnknown(callSite);
functionInfo.setTaintsUnknown(sideEffectGraph);
functionInfo.setTaintsUnknown(INVALID_NO_SIDE_EFFECT_ANNOTATION);
functionInfo.setTaintsUnknown(INVALID_MODIFIES_ANNOTATION);
functionInfo.setTaintsUnknown(this.compiler);
functionInfo.setTaintsUnknown(this.definitionProvider);
functionInfo.setTaintsUnknown(this.functionSideEffectMap);
functionInfo.setTaintsUnknown(this.allFunctionCalls);
functionInfo.setTaintsUnknown(this.externs);
functionInfo.setTaintsUnknown(this.root);
02:11:36.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:37.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:37.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:38.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:38.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:39.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:39.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:40.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:40.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:41.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:41.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:41.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:41.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:42.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:42.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:43.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:43.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:44.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:44.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:45.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:45.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:46.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:46.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:47.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (functionInfo != null) {


}

02:11:47.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:48.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (functionInfo == null) {
    return;
}

if (functionInfo == null) {
    throw new IllegalArgumentException("Empty variable: " + functionInfo);
}

02:11:48.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:49.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:49.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:50.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

          break;
	functionInfo.setTaintsUnknown();

MOVE-BUGGY-STATEMENT
02:11:50.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:51.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:11:51.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:52.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:52.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===243
02:11:52.609 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case OR:
if (OR == 0) {
    new IllegalArgumentException("");
}

if (OR != 0) {

    
}

if (OR > 0) {

    
}

02:11:52.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:53.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:53.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:53.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:53.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:53.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:11:53.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:54.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:54.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax ===136
02:11:54.479 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (!node.isCall()) {
          return node;
        }
if (node != null) {


}

02:11:54.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:54.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (node == null) {
    return null;
}

if (node == null) {
    throw new IllegalArgumentException("Empty variable: " + node);
}

02:11:54.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:55.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:55.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:56.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (!node.isCall()) {
          return node;
        }
	node = tryFoldStandardConstructors(node);
        
null
02:11:56.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:57.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:11:57.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:58.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:58.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax ===135
02:11:58.460 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
node = tryFoldStandardConstructors(node);
node = tryFoldStandardConstructors(true, node);
node = tryFoldStandardConstructors(false, node);
node = tryFoldStandardConstructors(node, true);
node = tryFoldStandardConstructors(node, false);
02:11:58.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:11:59.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:11:59.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:00.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:00.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:01.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:01.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:02.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
node = optimizeSubtree(node);
node = tryFoldSimpleFunctionCall(node);
node = tryFoldImmediateCallToBoundFunction(node);
node = trySplitComma(node);
node = tryReplaceIf(node);
node = tryReplaceUndefined(node);
node = tryReduceReturn(node);
node = tryReplaceExitWithBreak(node);
node = tryRemoveRedundantExit(node);
node = skipFinallyNodes(node);
node = getExceptionHandler(node);
node = tryMinimizeNot(node);
node = tryMinimizeIf(node);
node = getBlockExpression(node);
node = getBlockReturnExpression(node);
node = getBlockVar(node);
node = tryMinimizeCondition(node);
node = tryFoldLiteralConstructor(node);
node = tryFoldRegularExpressionConstructor(node);
node = reduceTrueFalse(node);
node = tryMinimizeArrayLiteral(node);
node = tryMinimizeStringArrayLiteral(node);
node = makeForwardSlashBracketSafe(node);
02:12:02.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:02.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:02.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:03.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:03.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:04.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:04.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:05.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:05.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:06.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:06.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:07.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:07.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:08.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:08.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:09.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:09.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:10.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:10.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:11.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:11.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:12.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:12.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:13.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:13.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:13.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:13.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:14.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:14.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:15.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:15.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:16.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:16.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:17.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:17.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:18.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:18.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:19.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:19.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:20.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:20.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:21.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:21.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:22.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:22.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:23.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (node != null) {


}

02:12:23.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:23.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (node == null) {
    return null;
}

if (node == null) {
    throw new IllegalArgumentException("Empty variable: " + node);
}

02:12:23.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:24.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:24.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:25.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
tryJoinForCondition(node);
tryJoinForCondition(node);
	node = tryFoldStandardConstructors(node);
node = tryFoldStandardConstructors(node);
	tryJoinForCondition(node);
tryRemoveRepeatedStatements(node);
tryRemoveRepeatedStatements(node);
	node = tryFoldStandardConstructors(node);
node = tryFoldStandardConstructors(node);
	tryRemoveRepeatedStatements(node);
02:12:25.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:26.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:26.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:27.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:27.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:28.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:28.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:29.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:29.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:29.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:29.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:30.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

        if (!node.isCall()) {
          return node;
        }
	node = tryFoldStandardConstructors(node);

MOVE-BUGGY-STATEMENT
02:12:30.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:31.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:12:31.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:32.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:32.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.RemoveUnusedClassProperties ===131
02:12:32.652 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (NodeUtil.isAssignmentOp(parent)
            || parent.isInc() || parent.isDec()) {
        // In general, compound assignments are both reads and writes, but
        // if the property is never otherwise read we can consider it simply
        // a write.
        // However if the assign expression is used as part of a larger
        // expression, we much consider it a read. For example:
        //    x = (y.a += 1);
        return NodeUtil.isExpressionResultUsed(parent);
      }
if (NodeUtil.isAssignmentOp(parent) && parent.isInc() || parent.isDec()) {
        // In general, compound assignments are both reads and writes, but
        // if the property is never otherwise read we can consider it simply
        // a write.
        // However if the assign expression is used as part of a larger
        // expression, we much consider it a read. For example:
        //    x = (y.a += 1);
        return NodeUtil.isExpressionResultUsed(parent);
      }
02:12:32.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:33.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (parent != null) {


}

if (parent != null) {


}

if (parent != null) {


}

02:12:33.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:34.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:34.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:34.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:34.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:35.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (parent == null) {
    return true;
}

if (parent == null) {
    return false;
}

if (parent == null) {
    throw new IllegalArgumentException("Empty variable: " + parent);
}

if (parent == null) {
    return true;
}

if (parent == null) {
    return false;
}

if (parent == null) {
    throw new IllegalArgumentException("Empty variable: " + parent);
}

if (parent == null) {
    return true;
}

if (parent == null) {
    return false;
}

if (parent == null) {
    throw new IllegalArgumentException("Empty variable: " + parent);
}

02:12:35.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:36.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:36.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:37.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:37.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:37.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:37.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:38.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:38.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:39.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:39.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:40.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:40.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:41.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:41.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:41.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:41.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:42.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (NodeUtil.isAssignmentOp(parent)
            || parent.isInc() || parent.isDec()) {
        // In general, compound assignments are both reads and writes, but
        // if the property is never otherwise read we can consider it simply
        // a write.
        // However if the assign expression is used as part of a larger
        // expression, we much consider it a read. For example:
        //    x = (y.a += 1);
        return NodeUtil.isExpressionResultUsed(parent);
      }
	return false;
      } else 
null
02:12:42.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:42.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:12:42.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:43.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:43.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.OptimizeParameters ===114
02:12:43.184 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
02:12:43.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:43.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:12:43.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:44.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:44.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.MethodCompilerPass ===108
02:12:44.685 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
nonMethodProperties.add(name);
nonMethodProperties.add(true, name);
nonMethodProperties.add(false, name);
nonMethodProperties.add(name, true);
nonMethodProperties.add(name, false);
02:12:44.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:45.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:45.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:46.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:46.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:46.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:46.897 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:47.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
nonMethodProperties.add(node);
nonMethodProperties.add(t);
nonMethodProperties.add(this.externMethods);
nonMethodProperties.add(this.externMethodsWithoutSignatures);
nonMethodProperties.add(this.methodDefinitions);
nonMethodProperties.add(this.compiler);
nonMethodProperties.add();
nonMethodProperties.add(node, name);
nonMethodProperties.add(t, name);
nonMethodProperties.add(this.externMethods, name);
nonMethodProperties.add(this.externMethodsWithoutSignatures, name);
nonMethodProperties.add(this.methodDefinitions, name);
nonMethodProperties.add(this.compiler, name);
nonMethodProperties.add(name, node);
nonMethodProperties.add(name, t);
nonMethodProperties.add(name, this.externMethods);
nonMethodProperties.add(name, this.externMethodsWithoutSignatures);
nonMethodProperties.add(name, this.methodDefinitions);
nonMethodProperties.add(name, this.compiler);
02:12:47.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:48.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:48.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:49.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:49.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:49.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:49.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:50.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:50.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:51.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:51.436 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:52.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:52.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:52.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:52.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:53.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:53.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:54.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:54.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:55.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:55.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:55.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:55.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:56.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:56.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:57.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:57.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:58.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:58.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:58.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:58.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:59.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:12:59.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:00.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:13:00.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:01.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:13:01.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:02.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (nonMethodProperties != null) {


}

if (name != null) {


}

02:13:02.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:02.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:13:02.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:03.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (nonMethodProperties == null) {
    return;
}

if (nonMethodProperties == null) {
    throw new IllegalArgumentException("Empty variable: " + nonMethodProperties);
}

if (name == null) {
    return;
}

if (name == null) {
    throw new IllegalArgumentException("Empty variable: " + name);
}

02:13:03.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:04.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:13:04.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:05.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:13:05.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:05.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:13:05.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:06.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
nonMethodProperties.add(name);
	addSignature(name, node, t.getSourceName());
    } else {
      
null
02:13:06.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:07.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:13:07.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:08.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:13:08.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.InvocationsCallback ===47
02:13:08.067 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return;

02:13:08.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:08.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:13:08.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:16:42.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.IntegrationTest::testSingletonGetter1]
02:16:42.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 9, [- com.google.javascript.jscomp.CommandLineRunnerTest::testHiddenSideEffect, - com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504, - com.google.javascript.jscomp.CommandLineRunnerTest::testReflectedMethods, - com.google.javascript.jscomp.InlineSimpleMethodsTest::testIssue2508576_2, - com.google.javascript.jscomp.InlineSimpleMethodsTest::testConfusingNames, - com.google.javascript.jscomp.IntegrationTest::testNamelessParameter, - com.google.javascript.jscomp.IntegrationTest::testHiddenSideEffect, - com.google.javascript.jscomp.IntegrationTest::testNegativeZero, - com.google.javascript.jscomp.IntegrationTest::testSingletonGetter1]
02:16:42.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testHiddenSideEffect
02:16:42.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504
02:16:42.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testReflectedMethods
02:16:42.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.InlineSimpleMethodsTest::testIssue2508576_2
02:16:42.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.InlineSimpleMethodsTest::testConfusingNames
02:16:42.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testNamelessParameter
02:16:42.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testHiddenSideEffect
02:16:42.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testNegativeZero
02:16:42.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testSingletonGetter1
02:16:42.451 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=8, pp=Unknown
02:16:42.452 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
02:16:44.295 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-36/aggregatedSusInfo.profl
02:16:44.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.jscomp.InvocationsCallback:visit(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V in com.google.javascript.jscomp.InvocationsCallback:47
02:16:44.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 9 Closure-36
02:16:44.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CollapseProperties ===478
02:16:44.312 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
parent.putBooleanProp(Node.FREE_CALL, true);
parent.putBooleanProp(true, Node.FREE_CALL, true);
parent.putBooleanProp(false, Node.FREE_CALL, true);
parent.putBooleanProp(Node.FREE_CALL, false);
parent.putBooleanProp(Node.FREE_CALL);
parent.putBooleanProp(Node.FREE_CALL, true, true);
parent.putBooleanProp(Node.FREE_CALL, false, true);
parent.putBooleanProp(Node.FREE_CALL, true, true);
parent.putBooleanProp(Node.FREE_CALL, true, false);
02:16:44.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:45.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:45.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:46.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:46.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:46.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:46.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:47.741 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:47.742 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:48.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:48.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:49.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:49.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:50.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:50.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:51.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
parent.putBooleanProp(ref, Node.FREE_CALL, true);
parent.putBooleanProp(alias, Node.FREE_CALL, true);
parent.putBooleanProp(n, Node.FREE_CALL, true);
parent.putBooleanProp(originalName, Node.FREE_CALL, true);
parent.putBooleanProp(UNSAFE_NAMESPACE_WARNING, Node.FREE_CALL, true);
parent.putBooleanProp(NAMESPACE_REDEFINED_WARNING, Node.FREE_CALL, true);
parent.putBooleanProp(UNSAFE_THIS, Node.FREE_CALL, true);
parent.putBooleanProp(this.compiler, Node.FREE_CALL, true);
parent.putBooleanProp(this.globalNames, Node.FREE_CALL, true);
parent.putBooleanProp(this.nameMap, Node.FREE_CALL, true);
parent.putBooleanProp(this.collapsePropertiesOnExternTypes, Node.FREE_CALL, true);
parent.putBooleanProp(this.inlineAliases, Node.FREE_CALL, true);
parent.putBooleanProp(Node.FREE_CALL, ref, true);
parent.putBooleanProp(Node.FREE_CALL, alias, true);
parent.putBooleanProp(Node.FREE_CALL, n, true);
parent.putBooleanProp(Node.FREE_CALL, originalName, true);
parent.putBooleanProp(Node.FREE_CALL, UNSAFE_NAMESPACE_WARNING, true);
parent.putBooleanProp(Node.FREE_CALL, NAMESPACE_REDEFINED_WARNING, true);
parent.putBooleanProp(Node.FREE_CALL, UNSAFE_THIS, true);
parent.putBooleanProp(Node.FREE_CALL, this.compiler, true);
parent.putBooleanProp(Node.FREE_CALL, this.globalNames, true);
parent.putBooleanProp(Node.FREE_CALL, this.nameMap, true);
parent.putBooleanProp(Node.FREE_CALL, this.collapsePropertiesOnExternTypes, true);
parent.putBooleanProp(Node.FREE_CALL, this.inlineAliases, true);
parent.putBooleanProp(Node.FREE_CALL, true, ref);
parent.putBooleanProp(Node.FREE_CALL, true, alias);
parent.putBooleanProp(Node.FREE_CALL, true, n);
parent.putBooleanProp(Node.FREE_CALL, true, originalName);
parent.putBooleanProp(Node.FREE_CALL, true, UNSAFE_NAMESPACE_WARNING);
parent.putBooleanProp(Node.FREE_CALL, true, NAMESPACE_REDEFINED_WARNING);
parent.putBooleanProp(Node.FREE_CALL, true, UNSAFE_THIS);
parent.putBooleanProp(Node.FREE_CALL, true, this.compiler);
parent.putBooleanProp(Node.FREE_CALL, true, this.globalNames);
parent.putBooleanProp(Node.FREE_CALL, true, this.nameMap);
parent.putBooleanProp(Node.FREE_CALL, true, this.collapsePropertiesOnExternTypes);
parent.putBooleanProp(Node.FREE_CALL, true, this.inlineAliases);
02:16:51.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:51.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:51.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:52.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:52.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:53.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:53.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:54.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:54.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:55.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:55.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:56.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:56.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:57.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:57.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:58.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:58.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:58.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:58.877 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:16:59.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:16:59.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:00.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:00.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:01.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:01.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:02.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:02.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:03.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:03.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:04.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:04.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:04.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:04.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:05.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:05.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:06.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:06.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:07.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:07.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:08.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:08.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:09.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:09.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:10.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:10.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:10.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:10.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:11.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:11.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:12.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:12.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:13.568 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:13.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:14.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:14.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:15.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:15.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:16.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:16.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:17.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:17.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:17.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:17.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:18.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:18.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:19.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:19.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:20.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:20.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:21.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:21.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:22.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (parent != null) {


}

02:17:22.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:23.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (parent == null) {
    return;
}

if (parent == null) {
    throw new IllegalArgumentException("Empty variable: " + parent);
}

02:17:23.252 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:24.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:24.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:25.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:17:25.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:25.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:25.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FunctionRewriter ===114
02:17:25.882 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return (root != null) ? root.removeFirstChild() : null;
if (root != null) {


}

if (root != null) {


}

02:17:25.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:26.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:26.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:27.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (root == null) {
    return null;
}

if (root == null) {
    throw new IllegalArgumentException("Empty variable: " + root);
}

if (root == null) {
    return null;
}

if (root == null) {
    throw new IllegalArgumentException("Empty variable: " + root);
}

02:17:27.568 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:28.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:28.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:29.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:29.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:30.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:30.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:30.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:17:30.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:31.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:31.698 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FunctionRewriter ===112
02:17:31.706 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Node root = compiler.parseSyntheticCode(
        reducer.getClass().toString() + ":helper", reducer.getHelperSource());
Node root = compiler.throwInternalError(
        reducer.getClass().toString() + ":helper", reducer.getHelperSource());
Node root = compiler.updateGlobalVarReferences(
        reducer.getClass().toString() + ":helper", reducer.getHelperSource());
Node root = compiler.areNodesEqualForInlining(
        reducer.getClass().toString() + ":helper", reducer.getHelperSource());
02:17:31.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:32.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:32.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:33.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:33.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:34.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
Node root = compiler.parseSyntheticCode(
        root, reducer.getClass().toString() + ":helper", reducer.getHelperSource());
Node root = compiler.parseSyntheticCode(
        reducer, reducer.getClass().toString() + ":helper", reducer.getHelperSource());
Node root = compiler.parseSyntheticCode(
        SAVINGS_THRESHOLD, reducer.getClass().toString() + ":helper", reducer.getHelperSource());
Node root = compiler.parseSyntheticCode(
        reducer.getClass().toString() + ":helper", root, reducer.getHelperSource());
Node root = compiler.parseSyntheticCode(
        reducer.getClass().toString() + ":helper", reducer, reducer.getHelperSource());
Node root = compiler.parseSyntheticCode(
        reducer.getClass().toString() + ":helper", SAVINGS_THRESHOLD, reducer.getHelperSource());
Node root = compiler.parseSyntheticCode(
        reducer.getClass().toString() + ":helper", reducer.getHelperSource(), root);
Node root = compiler.parseSyntheticCode(
        reducer.getClass().toString() + ":helper", reducer.getHelperSource(), reducer);
Node root = compiler.parseSyntheticCode(
        reducer.getClass().toString() + ":helper", reducer.getHelperSource(), SAVINGS_THRESHOLD);
02:17:34.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:35.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:35.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:35.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:35.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:36.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:36.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:37.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:37.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:38.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:38.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:39.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:39.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:40.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:40.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:40.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:40.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:41.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
Node root = root.parseSyntheticCode(
        reducer.getClass().toString() + ":helper", reducer.getHelperSource());
Node root = reducer.parseSyntheticCode(
        reducer.getClass().toString() + ":helper", reducer.getHelperSource());
Node root = this.compiler.parseSyntheticCode(
        reducer.getClass().toString() + ":helper", reducer.getHelperSource());
Node root = SAVINGS_THRESHOLD.parseSyntheticCode(
        reducer.getClass().toString() + ":helper", reducer.getHelperSource());
02:17:41.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:42.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:42.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:43.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:43.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:44.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:44.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:45.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (compiler != null) {


}

if (reducer != null) {


}

if (reducer != null) {


}

02:17:45.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:45.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:45.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:46.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:46.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:47.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (compiler == null) {
    return null;
}

if (compiler == null) {
    throw new IllegalArgumentException("Empty variable: " + compiler);
}

if (reducer == null) {
    return null;
}

if (reducer == null) {
    throw new IllegalArgumentException("Empty variable: " + reducer);
}

if (reducer == null) {
    return null;
}

if (reducer == null) {
    throw new IllegalArgumentException("Empty variable: " + reducer);
}

02:17:47.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:48.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:48.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:49.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:49.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:49.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:49.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:50.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:50.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:51.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:51.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:52.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:17:52.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:53.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:53.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FunctionRewriter ===103
02:17:53.220 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (Reducer reducer : reducers) {
      Collection<Reduction> reductions = reductionMap.get(reducer);
      if (reductions.isEmpty()) {
        continue;
      }

      Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
    }
if (reducers != null) {


}

02:17:53.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:54.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (reducers == null) {
    return;
}

if (reducers == null) {
    throw new IllegalArgumentException("Empty variable: " + reducers);
}

02:17:54.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:54.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:54.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:55.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
for (Reducer reducer : reducers) {
      Collection<Reduction> reductions = reductionMap.get(reducer);
      if (reductions.isEmpty()) {
        continue;
      }

      Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
    }
	List<Reducer> reducers = ImmutableList.of(new ReturnConstantReducer(),
                                              new GetterReducer(),
                                              new SetterReducer(),
                                              new EmptyFunctionReducer(),
                                              new IdentityReducer());

    Multimap<Reducer, Reduction> reductionMap = HashMultimap.create();

    // Accumulate possible reductions in the reduction multi map.  They
    // will be applied in the loop below.
    NodeTraversal.traverse(compiler, root,
                           new ReductionGatherer(reducers, reductionMap));

    // Apply reductions iff they will provide some savings.
    
null
for (Reducer reducer : reducers) {
      Collection<Reduction> reductions = reductionMap.get(reducer);
      if (reductions.isEmpty()) {
        continue;
      }

      Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
    }
	Multimap<Reducer, Reduction> reductionMap = HashMultimap.create();

    // Accumulate possible reductions in the reduction multi map.  They
    // will be applied in the loop below.
    NodeTraversal.traverse(compiler, root,
                           new ReductionGatherer(reducers, reductionMap));

    // Apply reductions iff they will provide some savings.
    
null
for (Reducer reducer : reducers) {
      Collection<Reduction> reductions = reductionMap.get(reducer);
      if (reductions.isEmpty()) {
        continue;
      }

      Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
    }
	NodeTraversal.traverse(compiler, root,
                           new ReductionGatherer(reducers, reductionMap));

    // Apply reductions iff they will provide some savings.
    
null
02:17:55.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:56.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:56.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:57.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:57.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:58.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:17:58.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:59.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:59.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FunctionRewriter ===94
02:17:59.047 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
if (savings >= (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
if (savings <= (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
if (savings < (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
02:17:59.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:59.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:17:59.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:00.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:00.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:01.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (helperCodeCost > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
02:18:01.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:02.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (savings == 0) {
    new IllegalArgumentException("");
}

if (savings != 0) {

    
}

if (savings > 0) {

    
}

if (helperCodeCost == 0) {
    new IllegalArgumentException("");
}

if (helperCodeCost != 0) {

    
}

if (helperCodeCost > 0) {

    
}

if (SAVINGS_THRESHOLD == 0) {
    new IllegalArgumentException("");
}

if (SAVINGS_THRESHOLD != 0) {

    
}

if (SAVINGS_THRESHOLD > 0) {

    
}

02:18:02.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:03.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:03.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:04.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:04.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:04.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:04.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:05.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:05.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:06.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:06.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:07.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:07.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:08.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:08.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:09.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:09.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:09.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
	Collection<Reduction> reductions = reductionMap.get(reducer);
      if (reductions.isEmpty()) {
        continue;
      }

      Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      
null
if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
	if (reductions.isEmpty()) {
        continue;
      }

      Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      
null
if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
	Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      
null
if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
	if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      
null
if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
	int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      
null
if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
	int savings = 0;
      for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      
null
if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
	for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      
null
02:18:09.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:10.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:10.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:11.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:11.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:12.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:12.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:13.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:13.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:14.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:14.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:14.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:14.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:15.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:18:15.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:16.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:16.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FunctionRewriter ===90
02:18:16.579 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
if (reductions != null) {


}

02:18:16.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:17.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (reductions == null) {
    return;
}

if (reductions == null) {
    throw new IllegalArgumentException("Empty variable: " + reductions);
}

02:18:17.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:18.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:18.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:19.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	Collection<Reduction> reductions = reductionMap.get(reducer);
      if (reductions.isEmpty()) {
        continue;
      }

      Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      
null
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	if (reductions.isEmpty()) {
        continue;
      }

      Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      
null
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      
null
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      
null
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      
null
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	int savings = 0;
      
null


      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
	for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

MOVE-BUGGY-STATEMENT
02:18:19.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:19.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:19.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:20.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:20.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:21.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:21.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:22.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:22.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:23.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:23.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:24.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:24.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:25.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:18:25.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:25.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:25.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FunctionRewriter ===89
02:18:25.872 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
savings += reduction.estimateSavings();
savings += reduction.estimateSavings(true);
savings += reduction.estimateSavings(false);
02:18:25.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:26.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:26.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:27.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (reduction != null) {


}

02:18:27.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:28.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (reduction == null) {
    return;
}

if (reduction == null) {
    throw new IllegalArgumentException("Empty variable: " + reduction);
}

02:18:28.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:29.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:29.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:30.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:18:30.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:30.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:30.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FunctionRewriter ===88
02:18:31.008 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
if (reductions != null) {


}

02:18:31.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:31.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (reductions == null) {
    return;
}

if (reductions == null) {
    throw new IllegalArgumentException("Empty variable: " + reductions);
}

02:18:31.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:32.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:32.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:33.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	Collection<Reduction> reductions = reductionMap.get(reducer);
      if (reductions.isEmpty()) {
        continue;
      }

      Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      
null
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	if (reductions.isEmpty()) {
        continue;
      }

      Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      
null
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	Node helperCode = parseHelperCode(reducer);
      if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      
null
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	if (helperCode == null) {
        continue;
      }

      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      
null
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      
null
for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	int savings = 0;
      
null


      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
	for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

MOVE-BUGGY-STATEMENT
02:18:33.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:34.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:34.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:35.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:35.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:35.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:35.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:36.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:36.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:37.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:37.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:38.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:38.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:39.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:18:39.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:40.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:40.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FunctionRewriter ===87
02:18:40.075 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
int savings = 0;

double savings = 0;
float savings = 0;
long savings = 0;
short savings = 0;
byte savings = 0;
02:18:40.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:40.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:40.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:41.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:41.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:42.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:42.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:43.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:43.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:44.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:18:44.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:44.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:44.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FunctionRewriter ===84
02:18:45.001 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
int helperCodeCost = InlineCostEstimator.getCost(helperCode);

double helperCodeCost = InlineCostEstimator.getCost(helperCode);
double helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      double savings = 0;

float helperCodeCost = InlineCostEstimator.getCost(helperCode);
float helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      float savings = 0;

long helperCodeCost = InlineCostEstimator.getCost(helperCode);
long helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      long savings = 0;

short helperCodeCost = InlineCostEstimator.getCost(helperCode);
short helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      short savings = 0;

byte helperCodeCost = InlineCostEstimator.getCost(helperCode);
byte helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      byte savings = 0;

02:18:45.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:45.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:45.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:46.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:46.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:47.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:47.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:48.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:48.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:49.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:49.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:49.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:49.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:50.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:50.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:51.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:51.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:52.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:52.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:53.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
int helperCodeCost = InlineCostEstimator.getCost(helperCodeCost);
int helperCodeCost = InlineCostEstimator.getCost(reductions);
int helperCodeCost = InlineCostEstimator.getCost(reducer);
int helperCodeCost = InlineCostEstimator.getCost(reductionMap);
int helperCodeCost = InlineCostEstimator.getCost(reducers);
int helperCodeCost = InlineCostEstimator.getCost(externs);
int helperCodeCost = InlineCostEstimator.getCost(root);
int helperCodeCost = InlineCostEstimator.getCost(this.compiler);
int helperCodeCost = InlineCostEstimator.getCost(SAVINGS_THRESHOLD);
int helperCodeCost = InlineCostEstimator.getCost();
int helperCodeCost = InlineCostEstimator.getCost(helperCodeCost, helperCode);
int helperCodeCost = InlineCostEstimator.getCost(reductions, helperCode);
int helperCodeCost = InlineCostEstimator.getCost(reducer, helperCode);
int helperCodeCost = InlineCostEstimator.getCost(reductionMap, helperCode);
int helperCodeCost = InlineCostEstimator.getCost(reducers, helperCode);
int helperCodeCost = InlineCostEstimator.getCost(externs, helperCode);
int helperCodeCost = InlineCostEstimator.getCost(root, helperCode);
int helperCodeCost = InlineCostEstimator.getCost(this.compiler, helperCode);
int helperCodeCost = InlineCostEstimator.getCost(SAVINGS_THRESHOLD, helperCode);
int helperCodeCost = InlineCostEstimator.getCost(helperCode, helperCodeCost);
int helperCodeCost = InlineCostEstimator.getCost(helperCode, reductions);
int helperCodeCost = InlineCostEstimator.getCost(helperCode, reducer);
int helperCodeCost = InlineCostEstimator.getCost(helperCode, reductionMap);
int helperCodeCost = InlineCostEstimator.getCost(helperCode, reducers);
int helperCodeCost = InlineCostEstimator.getCost(helperCode, externs);
int helperCodeCost = InlineCostEstimator.getCost(helperCode, root);
int helperCodeCost = InlineCostEstimator.getCost(helperCode, this.compiler);
int helperCodeCost = InlineCostEstimator.getCost(helperCode, SAVINGS_THRESHOLD);
02:18:53.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:53.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:53.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:54.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:54.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:55.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:55.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:56.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:56.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:57.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:57.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:58.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:58.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:58.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:58.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:18:59.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:18:59.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:00.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:00.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:01.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:01.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:02.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:02.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:03.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:03.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:03.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:03.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:04.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:04.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:05.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:05.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:06.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:06.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:07.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:07.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:07.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:07.971 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:08.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:08.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:09.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:09.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:10.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:10.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:11.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:11.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:12.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:12.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:13.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:13.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:13.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:13.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:14.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:14.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:15.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:15.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:16.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
int helperCodeCost = helperCodeCost.getCost(helperCode);
int helperCodeCost = helperCode.getCost(helperCode);
int helperCodeCost = reductions.getCost(helperCode);
int helperCodeCost = reducer.getCost(helperCode);
int helperCodeCost = reductionMap.getCost(helperCode);
int helperCodeCost = reducers.getCost(helperCode);
int helperCodeCost = externs.getCost(helperCode);
int helperCodeCost = root.getCost(helperCode);
int helperCodeCost = this.compiler.getCost(helperCode);
int helperCodeCost = SAVINGS_THRESHOLD.getCost(helperCode);
02:19:16.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:17.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:17.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:18.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:18.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:18.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:18.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:19.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:19.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:20.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:20.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:21.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:21.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:22.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:22.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:23.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:23.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:23.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:23.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:24.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (helperCode != null) {


}

02:19:24.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:25.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (helperCode == null) {
    return;
}

if (helperCode == null) {
    throw new IllegalArgumentException("Empty variable: " + helperCode);
}

02:19:25.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:26.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:26.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:27.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:19:27.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:28.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:28.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FunctionRewriter ===80
02:19:28.192 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (helperCode == null) {
        continue;
      }
if (helperCode != null) {
        continue;
      }
02:19:28.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:29.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (externs == null) {
        continue;
      }
if (root == null) {
        continue;
      }
02:19:29.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:29.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:29.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:30.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (helperCode != null) {


}

02:19:30.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:31.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (helperCode == null) {
    return;
}

if (helperCode == null) {
    throw new IllegalArgumentException("Empty variable: " + helperCode);
}

02:19:31.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:32.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:32.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:33.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (helperCode == null) {
        continue;
      }
	Collection<Reduction> reductions = reductionMap.get(reducer);
      if (reductions.isEmpty()) {
        continue;
      }

      Node helperCode = parseHelperCode(reducer);
      
null
if (helperCode == null) {
        continue;
      }
	if (reductions.isEmpty()) {
        continue;
      }

      Node helperCode = parseHelperCode(reducer);
      
null
if (helperCode == null) {
        continue;
      }
	Node helperCode = parseHelperCode(reducer);
      
null


      int helperCodeCost = InlineCostEstimator.getCost(helperCode);
	if (helperCode == null) {
        continue;
      }

MOVE-BUGGY-STATEMENT


      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
	if (helperCode == null) {
        continue;
      }

MOVE-BUGGY-STATEMENT


      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }
	if (helperCode == null) {
        continue;
      }

MOVE-BUGGY-STATEMENT


      int helperCodeCost = InlineCostEstimator.getCost(helperCode);

      // Estimate savings
      int savings = 0;
      for (Reduction reduction : reductions) {
        savings += reduction.estimateSavings();
      }

      // Compare estimated savings against the helper cost.  Apply
      // reductions if doing so will result in some savings.
      if (savings > (helperCodeCost + SAVINGS_THRESHOLD)) {
        for (Reduction reduction : reductions) {
          reduction.apply();
        }

        Node addingRoot = compiler.getNodeForCodeInsertion(null);
        addingRoot.addChildrenToFront(helperCode);
        compiler.reportCodeChange();
      }
	if (helperCode == null) {
        continue;
      }

MOVE-BUGGY-STATEMENT
02:19:33.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:34.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:34.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:34.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:34.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:35.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:35.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:36.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:36.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:37.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:37.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:38.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:38.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:39.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:19:39.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:39.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:39.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FunctionRewriter ===79
02:19:39.934 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Node helperCode = parseHelperCode(reducer);
Node helperCode = parseHelperCode(helperCode);
Node helperCode = parseHelperCode(reductions);
Node helperCode = parseHelperCode(reductionMap);
Node helperCode = parseHelperCode(reducers);
Node helperCode = parseHelperCode(externs);
Node helperCode = parseHelperCode(root);
Node helperCode = parseHelperCode(this.compiler);
Node helperCode = parseHelperCode(SAVINGS_THRESHOLD);
Node helperCode = parseHelperCode();
Node helperCode = parseHelperCode(helperCode, reducer);
Node helperCode = parseHelperCode(reductions, reducer);
Node helperCode = parseHelperCode(reductionMap, reducer);
Node helperCode = parseHelperCode(reducers, reducer);
Node helperCode = parseHelperCode(externs, reducer);
Node helperCode = parseHelperCode(root, reducer);
Node helperCode = parseHelperCode(this.compiler, reducer);
Node helperCode = parseHelperCode(SAVINGS_THRESHOLD, reducer);
Node helperCode = parseHelperCode(reducer, helperCode);
Node helperCode = parseHelperCode(reducer, reductions);
Node helperCode = parseHelperCode(reducer, reductionMap);
Node helperCode = parseHelperCode(reducer, reducers);
Node helperCode = parseHelperCode(reducer, externs);
Node helperCode = parseHelperCode(reducer, root);
Node helperCode = parseHelperCode(reducer, this.compiler);
Node helperCode = parseHelperCode(reducer, SAVINGS_THRESHOLD);
02:19:39.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:40.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:40.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:41.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:41.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:42.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:42.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:43.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:43.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:44.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:44.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:44.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:44.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:45.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:45.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:46.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:46.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:47.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:47.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:48.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:48.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:49.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:49.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:49.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:49.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:50.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:50.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:51.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:51.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:52.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:52.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:53.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:53.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:54.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:54.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:54.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:54.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:55.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:55.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:56.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:56.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:57.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:57.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:58.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:58.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:58.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:58.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:19:59.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:19:59.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:00.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
Node helperCode = helperCode;
Node helperCode = reductions;
Node helperCode = reducer;
Node helperCode = reductionMap;
Node helperCode = reducers;
Node helperCode = externs;
Node helperCode = root;
Node helperCode = this.compiler;
Node helperCode = SAVINGS_THRESHOLD;
02:20:00.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:01.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:01.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:02.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:02.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:03.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:03.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:03.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:03.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:04.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:04.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:05.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:05.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:06.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:06.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:07.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:07.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:07.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (reducer != null) {


}

02:20:07.928 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:08.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (reducer == null) {
    return;
}

if (reducer == null) {
    throw new IllegalArgumentException("Empty variable: " + reducer);
}

02:20:08.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:09.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:09.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:10.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:20:10.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:11.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:11.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.AliasKeywords ===390
02:20:11.290 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
02:20:11.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:12.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:20:12.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:12.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:12.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.MustBeReachingVariableDef ===288
02:20:12.852 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
if (obj.isName() || "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
02:20:12.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:13.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (obj != null) {


}

if (obj != null) {


}

02:20:13.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:14.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:14.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:15.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (obj == null) {
    return;
}

if (obj == null) {
    throw new IllegalArgumentException("Empty variable: " + obj);
}

if (obj == null) {
    return;
}

if (obj == null) {
    throw new IllegalArgumentException("Empty variable: " + obj);
}

02:20:15.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:16.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:16.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:16.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:16.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:17.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:17.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:18.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
	Node obj = n.getFirstChild().getFirstChild();
            
null
02:20:18.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:19.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:20:19.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:20.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:20.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.MustBeReachingVariableDef ===287
02:20:20.251 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Node obj = n.getFirstChild().getFirstChild();
Node obj = n.getFirstChild().getFirstChild(obj);
Node obj = n.getFirstChild().getFirstChild(name);
Node obj = n.getFirstChild().getFirstChild(c);
Node obj = n.getFirstChild().getFirstChild(n);
Node obj = n.getFirstChild().getFirstChild(cfgNode);
Node obj = n.getFirstChild().getFirstChild(output);
Node obj = n.getFirstChild().getFirstChild(conditional);
Node obj = n.getFirstChild().getFirstChild(this.jsScope);
Node obj = n.getFirstChild().getFirstChild(this.compiler);
Node obj = n.getFirstChild().getFirstChild(this.escaped);
02:20:20.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:21.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:21.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:21.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:21.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:22.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:22.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:23.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:23.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:24.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:24.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:25.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:25.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:25.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:25.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:26.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:26.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:27.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:27.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:28.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
Node obj = obj.getFirstChild().getFirstChild();
Node obj = name.getFirstChild().getFirstChild();
Node obj = c.getFirstChild().getFirstChild();
Node obj = cfgNode.getFirstChild().getFirstChild();
Node obj = output.getFirstChild().getFirstChild();
Node obj = conditional.getFirstChild().getFirstChild();
Node obj = this.jsScope.getFirstChild().getFirstChild();
Node obj = this.compiler.getFirstChild().getFirstChild();
Node obj = this.escaped.getFirstChild().getFirstChild();
02:20:28.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:29.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:29.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:30.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:30.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:30.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:30.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:31.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:31.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:32.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:32.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:33.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:33.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:34.187 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:34.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:35.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:35.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:35.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

02:20:35.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:36.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:20:36.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:37.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:37.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:38.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:20:38.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:39.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:39.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.MustBeReachingVariableDef ===284
02:20:39.105 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (NodeUtil.isGet(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isImmutableValue(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isSymmetricOperation(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isRelationalOperation(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isEmptyBlock(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isSimpleOperator(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isSimpleOperatorType(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.mayEffectMutableState(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.mayHaveSideEffects(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.constructorCallHasSideEffects(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.functionCallHasSideEffects(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.callHasLocalResult(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.newHasLocalResult(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.nodeTypeMayHaveSideEffects(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.canBeSideEffected(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isNumericResult(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isNumericResultHelper(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isBooleanResult(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isBooleanResultHelper(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isUndefined(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isNullOrUndefined(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.mayBeString(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.mayBeStringHelper(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isAssociative(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isCommutative(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isAssignmentOp(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.containsFunction(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.referencesThis(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isVarDeclaration(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isExprAssign(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isExprCall(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isForIn(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isLoopStructure(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isWithinLoop(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isControlStructure(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isStatementBlock(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isStatement(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isStatementParent(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isSwitchCase(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isReferenceName(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isTryCatchNodeContainer(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.tryMergeBlock(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isCallOrNew(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.containsCall(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isFunctionDeclaration(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isHoistedFunctionDeclaration(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isFunctionExpression(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isEmptyFunctionExpression(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isVarArgsFunction(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isFunctionObjectCall(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isFunctionObjectApply(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isFunctionObjectCallOrApply(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isSimpleFunctionObjectCall(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isLValue(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGetOrSetKey(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isLatin(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isValidSimpleName(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isValidQualifiedName(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isValidPropertyName(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isPrototypePropertyDeclaration(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isPrototypeProperty(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.hasFinally(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.hasCatchHandler(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isConstantName(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.evaluatesToLocalValue(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isToStringMethodCall(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isExpressionResultUsed(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
02:20:39.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:39.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:39.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:40.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:40.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:41.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:41.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:42.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:42.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:43.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:43.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:44.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:44.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:44.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:44.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:45.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:45.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:46.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:46.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:47.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:47.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:48.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:48.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:48.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:48.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:49.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:49.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:50.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:50.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:51.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:51.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:52.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:52.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:52.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:52.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:53.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:53.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:54.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:54.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:55.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:55.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:56.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:56.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:57.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:57.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:57.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:57.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:58.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:58.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:20:59.550 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:20:59.550 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:00.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:00.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:01.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:01.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:01.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:01.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:02.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:02.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:03.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:03.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:04.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:04.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:05.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:05.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:06.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:06.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:06.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:06.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:07.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:07.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:08.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:08.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:09.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:09.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:10.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:10.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:11.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:11.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:11.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:11.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:12.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:12.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:13.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:13.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:14.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:14.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:15.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:15.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:15.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:15.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:16.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:16.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:17.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:17.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:18.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:18.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:19.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:19.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:20.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:20.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:20.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:20.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:21.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:21.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:22.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:22.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:23.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:23.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:24.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:24.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:25.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:25.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:25.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:25.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:26.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:26.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:27.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:27.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:28.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:28.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:29.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:29.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:29.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:29.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:30.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:30.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:31.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:31.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:32.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:32.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:33.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (NodeUtil.isGet(name, n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(c, n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(n, n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(cfgNode, n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(output, n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(conditional, n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(this.jsScope, n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(this.compiler, n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(this.escaped, n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(n.getFirstChild(), name)) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(n.getFirstChild(), c)) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(n.getFirstChild(), n)) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(n.getFirstChild(), cfgNode)) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(n.getFirstChild(), output)) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(n.getFirstChild(), conditional)) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(n.getFirstChild(), this.jsScope)) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(n.getFirstChild(), this.compiler)) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil.isGet(n.getFirstChild(), this.escaped)) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
02:21:33.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:34.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:34.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:34.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:34.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:35.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:35.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:36.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:36.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:37.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:37.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:38.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:38.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:38.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:38.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:39.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:39.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:40.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:40.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:41.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:41.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:42.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:42.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:42.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:42.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:43.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:43.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:44.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:44.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:45.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:45.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:46.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:46.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:46.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:46.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:47.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (NodeUtil != null && NodeUtil.isGet(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
if (NodeUtil != null || NodeUtil.isGet(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
02:21:47.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:48.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:48.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:49.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

02:21:49.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:50.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:21:50.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:51.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:51.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:51.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (NodeUtil.isGet(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
	Node name = n.getFirstChild();
            computeMustDef(name.getNext(), cfgNode, output, conditional);
            addToDefIfLocal(name.getString(), conditional ? null : cfgNode,
              n.getLastChild(), output);
            return;
          } else 
null
if (NodeUtil.isGet(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
	computeMustDef(name.getNext(), cfgNode, output, conditional);
            addToDefIfLocal(name.getString(), conditional ? null : cfgNode,
              n.getLastChild(), output);
            return;
          } else 
null
if (NodeUtil.isGet(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
	addToDefIfLocal(name.getString(), conditional ? null : cfgNode,
              n.getLastChild(), output);
            return;
          } else 
null
if (NodeUtil.isGet(n.getFirstChild())) {
            // Treat all assignments to arguments as redefining the
            // parameters itself.
            Node obj = n.getFirstChild().getFirstChild();
            if (obj.isName() && "arguments".equals(obj.getString())) {
              // TODO(user): More accuracy can be introduced
              // ie: We know exactly what arguments[x] is if x is a constant
              // number.
              escapeParameters(output);
            }
          }
	return;
          } else 
null
02:21:51.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:52.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:52.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:52.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:52.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:52.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:52.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:53.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:21:53.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:53.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:53.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.RemoveUnusedClassProperties ===130
02:21:53.409 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
02:21:53.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:54.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:21:54.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:54.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:54.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CompilerOptions ===1171
02:21:54.939 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
break;

02:21:54.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:55.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:55.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CompilerOptions ===1170
02:21:55.865 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
this.removeUnusedLocalVars = true;
this.removeUnusedLocalVars = false;
02:21:55.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:56.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
skipAllCompilerPasses();
	this.removeUnusedLocalVars = true;
this.removeUnusedLocalVars = true;
	skipAllCompilerPasses();
resetWarningsGuard();
	this.removeUnusedLocalVars = true;
this.removeUnusedLocalVars = true;
	resetWarningsGuard();
useEmergencyFailSafe();
	this.removeUnusedLocalVars = true;
this.removeUnusedLocalVars = true;
	useEmergencyFailSafe();
disableRuntimeTypeCheck();
	this.removeUnusedLocalVars = true;
this.removeUnusedLocalVars = true;
	disableRuntimeTypeCheck();
02:21:56.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:57.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:57.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:58.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:58.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:21:59.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:21:59.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:00.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:00.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:01.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:01.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:02.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:02.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:02.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:02.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:03.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
this.removeUnusedLocalVars = true;
	this.removeUnusedVars = true;
        
null

        break;
	this.removeUnusedLocalVars = true;

MOVE-BUGGY-STATEMENT
02:22:03.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:04.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:04.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:05.568 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:22:05.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:06.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:06.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CompilerOptions ===1169
02:22:06.491 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
this.removeUnusedVars = true;
this.removeUnusedVars = false;
02:22:06.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:07.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
skipAllCompilerPasses();
	this.removeUnusedVars = true;
this.removeUnusedVars = true;
	skipAllCompilerPasses();
resetWarningsGuard();
	this.removeUnusedVars = true;
this.removeUnusedVars = true;
	resetWarningsGuard();
useEmergencyFailSafe();
	this.removeUnusedVars = true;
this.removeUnusedVars = true;
	useEmergencyFailSafe();
disableRuntimeTypeCheck();
	this.removeUnusedVars = true;
this.removeUnusedVars = true;
	disableRuntimeTypeCheck();
02:22:07.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:08.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:08.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:09.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:09.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:10.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:10.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:10.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:10.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:11.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:11.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:12.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:12.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:13.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:13.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:14.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

        this.removeUnusedLocalVars = true;
	this.removeUnusedVars = true;

MOVE-BUGGY-STATEMENT

        this.removeUnusedLocalVars = true;
        break;
	this.removeUnusedVars = true;

MOVE-BUGGY-STATEMENT
02:22:14.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:15.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:15.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:16.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:22:16.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:17.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:17.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CompilerOptions ===1141
02:22:17.353 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
break;

02:22:17.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:18.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:18.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CompilerOptions ===1140
02:22:18.282 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
this.inlineLocalVariables = true;
this.inlineLocalVariables = false;
02:22:18.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:19.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
skipAllCompilerPasses();
	this.inlineLocalVariables = true;
this.inlineLocalVariables = true;
	skipAllCompilerPasses();
resetWarningsGuard();
	this.inlineLocalVariables = true;
this.inlineLocalVariables = true;
	resetWarningsGuard();
useEmergencyFailSafe();
	this.inlineLocalVariables = true;
this.inlineLocalVariables = true;
	useEmergencyFailSafe();
disableRuntimeTypeCheck();
	this.inlineLocalVariables = true;
this.inlineLocalVariables = true;
	disableRuntimeTypeCheck();
02:22:19.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:20.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:20.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:20.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:20.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:21.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:21.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:22.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:22.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:23.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:23.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:24.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:24.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:25.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:25.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:26.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
this.inlineLocalVariables = true;
	this.inlineVariables = true;
        
null

        break;
	this.inlineLocalVariables = true;

MOVE-BUGGY-STATEMENT
02:22:26.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:27.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:27.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:28.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:22:28.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:29.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:29.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CompilerOptions ===1139
02:22:29.204 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
this.inlineVariables = true;
this.inlineVariables = false;
02:22:29.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:30.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
skipAllCompilerPasses();
	this.inlineVariables = true;
this.inlineVariables = true;
	skipAllCompilerPasses();
resetWarningsGuard();
	this.inlineVariables = true;
this.inlineVariables = true;
	resetWarningsGuard();
useEmergencyFailSafe();
	this.inlineVariables = true;
this.inlineVariables = true;
	useEmergencyFailSafe();
disableRuntimeTypeCheck();
	this.inlineVariables = true;
this.inlineVariables = true;
	disableRuntimeTypeCheck();
02:22:30.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:31.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:31.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:31.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:31.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:32.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:32.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:33.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:33.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:34.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:34.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:35.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:35.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:36.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:36.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:37.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

        this.inlineLocalVariables = true;
	this.inlineVariables = true;

MOVE-BUGGY-STATEMENT

        this.inlineLocalVariables = true;
        break;
	this.inlineVariables = true;

MOVE-BUGGY-STATEMENT
02:22:37.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:38.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:38.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:39.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:22:39.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:39.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:39.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CompilerOptions ===1119
02:22:39.960 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
break;

02:22:39.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:40.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:40.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CompilerOptions ===1118
02:22:40.878 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
this.inlineLocalFunctions = true;
this.inlineLocalFunctions = false;
02:22:40.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:41.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
skipAllCompilerPasses();
	this.inlineLocalFunctions = true;
this.inlineLocalFunctions = true;
	skipAllCompilerPasses();
resetWarningsGuard();
	this.inlineLocalFunctions = true;
this.inlineLocalFunctions = true;
	resetWarningsGuard();
useEmergencyFailSafe();
	this.inlineLocalFunctions = true;
this.inlineLocalFunctions = true;
	useEmergencyFailSafe();
disableRuntimeTypeCheck();
	this.inlineLocalFunctions = true;
this.inlineLocalFunctions = true;
	disableRuntimeTypeCheck();
02:22:41.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:42.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:42.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:43.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:43.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:44.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:44.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:45.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:45.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:46.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:46.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:47.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:47.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:47.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:47.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:48.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
this.inlineLocalFunctions = true;
	this.inlineFunctions = true;
        
null

        break;
	this.inlineLocalFunctions = true;

MOVE-BUGGY-STATEMENT
02:22:48.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:49.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:49.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:50.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:22:50.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:51.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:51.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CompilerOptions ===1117
02:22:51.549 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
this.inlineFunctions = true;
this.inlineFunctions = false;
02:22:51.550 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:52.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
skipAllCompilerPasses();
	this.inlineFunctions = true;
this.inlineFunctions = true;
	skipAllCompilerPasses();
resetWarningsGuard();
	this.inlineFunctions = true;
this.inlineFunctions = true;
	resetWarningsGuard();
useEmergencyFailSafe();
	this.inlineFunctions = true;
this.inlineFunctions = true;
	useEmergencyFailSafe();
disableRuntimeTypeCheck();
	this.inlineFunctions = true;
this.inlineFunctions = true;
	disableRuntimeTypeCheck();
02:22:52.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:53.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:53.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:54.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:54.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:55.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:55.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:55.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:55.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:56.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:56.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:57.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:57.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:58.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:22:58.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:22:59.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

        this.inlineLocalFunctions = true;
	this.inlineFunctions = true;

MOVE-BUGGY-STATEMENT

        this.inlineLocalFunctions = true;
        break;
	this.inlineFunctions = true;

MOVE-BUGGY-STATEMENT
02:22:59.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:00.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:00.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:01.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:23:01.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:02.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:02.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.NodeUtil ===690
02:23:02.218 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
02:23:02.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:03.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:23:03.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:04.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:04.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.NodeUtil ===689
02:23:04.343 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (!n.isEmpty()) {
        return false;
      }
if (n != null) {


}

02:23:04.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:05.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return true;
}

if (n == null) {
    return false;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

02:23:05.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:06.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:06.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:07.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:07.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:08.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:23:08.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:09.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:09.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.InlineFunctions ===295
02:23:09.688 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
fs.setInline(false);
fs.setInline(true);
fs.setInline();
fs.setInline(true, false);
fs.setInline(false, false);
fs.setInline(false, true);
fs.setInline(false, false);
02:23:09.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:10.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:10.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:11.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:11.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:12.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:12.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:13.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:13.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:14.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:14.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:15.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
fs.setInline(block, false);
fs.setInline(namesToAlias, false);
fs.setInline(fnNode, false);
fs.setInline(name, false);
fs.setInline(fn, false);
fs.setInline(module, false);
fs.setInline(this.fns, false);
fs.setInline(this.anonFns, false);
fs.setInline(this.compiler, false);
fs.setInline(this.injector, false);
fs.setInline(this.blockFunctionInliningEnabled, false);
fs.setInline(this.inlineGlobalFunctions, false);
fs.setInline(this.inlineLocalFunctions, false);
fs.setInline(this.assumeMinimumCapture, false);
fs.setInline(this.specializationState, false);
fs.setInline(false, block);
fs.setInline(false, namesToAlias);
fs.setInline(false, fnNode);
fs.setInline(false, name);
fs.setInline(false, fn);
fs.setInline(false, module);
fs.setInline(false, this.fns);
fs.setInline(false, this.anonFns);
fs.setInline(false, this.compiler);
fs.setInline(false, this.injector);
fs.setInline(false, this.blockFunctionInliningEnabled);
fs.setInline(false, this.inlineGlobalFunctions);
fs.setInline(false, this.inlineLocalFunctions);
fs.setInline(false, this.assumeMinimumCapture);
fs.setInline(false, this.specializationState);
02:23:15.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:16.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:16.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:16.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:16.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:17.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:17.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:18.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:18.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:19.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:19.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:20.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:20.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:21.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:21.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:22.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:22.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:23.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:23.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:24.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:24.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:25.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:25.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:25.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:25.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:26.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:26.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:27.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:27.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:28.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:28.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:29.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:29.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:30.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:30.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:31.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:31.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:32.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:32.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:33.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:33.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:34.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:34.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:34.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:34.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:35.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:35.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:36.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:36.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:37.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:37.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:38.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:38.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:39.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:39.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:40.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:40.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:41.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:41.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:42.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (fs != null) {


}

02:23:42.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:42.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (fs == null) {
    return;
}

if (fs == null) {
    throw new IllegalArgumentException("Empty variable: " + fs);
}

02:23:42.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:43.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:43.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:44.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:23:44.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:45.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:45.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.LiveVariablesAnalysis ===237
02:23:45.605 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return;

02:23:45.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:46.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:46.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.LiveVariablesAnalysis ===236
02:23:46.372 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
computeGenKill(n.getLastChild(), gen, kill, true);
computeGenKill(true, n.getLastChild(), gen, kill, true);
computeGenKill(false, n.getLastChild(), gen, kill, true);
computeGenKill(n.getLastChild(), true, gen, kill, true);
computeGenKill(n.getLastChild(), false, gen, kill, true);
computeGenKill(n.getLastChild(), gen, true, kill, true);
computeGenKill(n.getLastChild(), gen, false, kill, true);
computeGenKill(n.getLastChild(), gen, kill, false);
computeGenKill(n.getLastChild(), gen, kill);
computeGenKill(n.getLastChild(), gen, kill, true, true);
computeGenKill(n.getLastChild(), gen, kill, false, true);
computeGenKill(n.getLastChild(), gen, kill, true, true);
computeGenKill(n.getLastChild(), gen, kill, true, false);
02:23:46.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:47.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:47.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:47.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:47.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:48.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:48.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:49.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:49.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:50.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:50.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:50.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:50.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:51.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:51.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:52.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:52.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:53.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:53.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:54.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:54.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:54.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:54.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:55.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
computeGenKill(c, n.getLastChild(), gen, kill, true);
computeGenKill(n, n.getLastChild(), gen, kill, true);
computeGenKill(conditional, n.getLastChild(), gen, kill, true);
computeGenKill(MAX_VARIABLES_TO_ANALYZE, n.getLastChild(), gen, kill, true);
computeGenKill(ARGUMENT_ARRAY_ALIAS, n.getLastChild(), gen, kill, true);
computeGenKill(this.jsScope, n.getLastChild(), gen, kill, true);
computeGenKill(this.escaped, n.getLastChild(), gen, kill, true);
computeGenKill(n.getLastChild(), c, kill, true);
computeGenKill(n.getLastChild(), n, kill, true);
computeGenKill(n.getLastChild(), conditional, kill, true);
computeGenKill(n.getLastChild(), MAX_VARIABLES_TO_ANALYZE, kill, true);
computeGenKill(n.getLastChild(), ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getLastChild(), this.jsScope, kill, true);
computeGenKill(n.getLastChild(), this.escaped, kill, true);
computeGenKill(n.getLastChild(),  kill, true);
computeGenKill(n.getLastChild(), c, gen, kill, true);
computeGenKill(n.getLastChild(), n, gen, kill, true);
computeGenKill(n.getLastChild(), conditional, gen, kill, true);
computeGenKill(n.getLastChild(), MAX_VARIABLES_TO_ANALYZE, gen, kill, true);
computeGenKill(n.getLastChild(), ARGUMENT_ARRAY_ALIAS, gen, kill, true);
computeGenKill(n.getLastChild(), this.jsScope, gen, kill, true);
computeGenKill(n.getLastChild(), this.escaped, gen, kill, true);
computeGenKill(n.getLastChild(), gen, c, true);
computeGenKill(n.getLastChild(), gen, n, true);
computeGenKill(n.getLastChild(), gen, conditional, true);
computeGenKill(n.getLastChild(), gen, MAX_VARIABLES_TO_ANALYZE, true);
computeGenKill(n.getLastChild(), gen, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getLastChild(), gen, this.jsScope, true);
computeGenKill(n.getLastChild(), gen, this.escaped, true);
computeGenKill(n.getLastChild(), gen,  true);
computeGenKill(n.getLastChild(), gen, c, kill, true);
computeGenKill(n.getLastChild(), gen, n, kill, true);
computeGenKill(n.getLastChild(), gen, conditional, kill, true);
computeGenKill(n.getLastChild(), gen, MAX_VARIABLES_TO_ANALYZE, kill, true);
computeGenKill(n.getLastChild(), gen, ARGUMENT_ARRAY_ALIAS, kill, true);
computeGenKill(n.getLastChild(), gen, this.jsScope, kill, true);
computeGenKill(n.getLastChild(), gen, this.escaped, kill, true);
computeGenKill(n.getLastChild(), gen, kill, c, true);
computeGenKill(n.getLastChild(), gen, kill, n, true);
computeGenKill(n.getLastChild(), gen, kill, conditional, true);
computeGenKill(n.getLastChild(), gen, kill, MAX_VARIABLES_TO_ANALYZE, true);
computeGenKill(n.getLastChild(), gen, kill, ARGUMENT_ARRAY_ALIAS, true);
computeGenKill(n.getLastChild(), gen, kill, this.jsScope, true);
computeGenKill(n.getLastChild(), gen, kill, this.escaped, true);
computeGenKill(n.getLastChild(), gen, kill, true, c);
computeGenKill(n.getLastChild(), gen, kill, true, n);
computeGenKill(n.getLastChild(), gen, kill, true, conditional);
computeGenKill(n.getLastChild(), gen, kill, true, MAX_VARIABLES_TO_ANALYZE);
computeGenKill(n.getLastChild(), gen, kill, true, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getLastChild(), gen, kill, true, this.jsScope);
computeGenKill(n.getLastChild(), gen, kill, true, this.escaped);
02:23:55.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:56.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:56.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:57.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:57.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:57.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:57.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:58.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:58.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:59.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:23:59.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:00.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:00.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:01.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:01.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:01.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:01.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:02.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:02.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:03.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:03.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:04.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:04.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:04.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:04.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:05.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:05.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:06.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:06.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:07.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:07.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:08.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:08.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:08.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:08.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:09.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:09.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:10.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:10.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:11.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:11.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:12.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:12.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:12.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:12.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:13.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:13.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:14.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:14.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:15.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:15.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:15.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:15.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:16.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:16.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:17.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:17.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:18.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:18.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:19.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:19.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:19.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:19.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:20.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:20.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:21.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:21.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:22.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:22.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:23.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:23.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:23.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:23.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:24.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:24.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:25.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:25.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:26.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:26.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:26.971 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:26.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:27.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:27.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:28.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:28.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:29.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:29.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:30.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:30.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:30.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:30.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:31.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:31.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:32.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:32.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:33.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:33.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:34.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:34.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:34.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:34.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:35.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (gen != null) {


}

if (kill != null) {


}

02:24:35.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:36.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:36.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:37.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:37.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:37.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (gen == null) {
    return;
}

if (gen == null) {
    throw new IllegalArgumentException("Empty variable: " + gen);
}

if (kill == null) {
    return;
}

if (kill == null) {
    throw new IllegalArgumentException("Empty variable: " + kill);
}

02:24:37.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:38.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:38.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:39.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:39.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:40.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:40.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:41.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:41.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:41.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:41.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:42.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
computeGenKill(n.getLastChild(), gen, kill, true);
	computeGenKill(n.getFirstChild(), gen, kill, conditional);
        // May short circuit.
        
null

        return;
	computeGenKill(n.getLastChild(), gen, kill, true);

MOVE-BUGGY-STATEMENT
02:24:42.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:43.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:43.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:44.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:24:44.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:44.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:44.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.LiveVariablesAnalysis ===234
02:24:44.965 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
computeGenKill(n.getFirstChild(), gen, kill, conditional);
computeGenKill(true, n.getFirstChild(), gen, kill, conditional);
computeGenKill(false, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n.getFirstChild(), true, gen, kill, conditional);
computeGenKill(n.getFirstChild(), false, gen, kill, conditional);
computeGenKill(n.getFirstChild(), gen, true, kill, conditional);
computeGenKill(n.getFirstChild(), gen, false, kill, conditional);
computeGenKill(n.getFirstChild(), gen, kill, true, conditional);
computeGenKill(n.getFirstChild(), gen, kill, false, conditional);
computeGenKill(n.getFirstChild(), gen, kill, conditional, true);
computeGenKill(n.getFirstChild(), gen, kill, conditional, false);
02:24:44.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:45.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:45.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:46.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:46.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:47.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:47.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:47.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:47.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:48.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:48.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:49.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:49.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:50.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:50.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:51.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:51.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:51.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:51.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:52.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
computeGenKill(c, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n, n.getFirstChild(), gen, kill, conditional);
computeGenKill(MAX_VARIABLES_TO_ANALYZE, n.getFirstChild(), gen, kill, conditional);
computeGenKill(ARGUMENT_ARRAY_ALIAS, n.getFirstChild(), gen, kill, conditional);
computeGenKill(this.jsScope, n.getFirstChild(), gen, kill, conditional);
computeGenKill(this.escaped, n.getFirstChild(), gen, kill, conditional);
computeGenKill(n.getFirstChild(), c, kill, conditional);
computeGenKill(n.getFirstChild(), n, kill, conditional);
computeGenKill(n.getFirstChild(), MAX_VARIABLES_TO_ANALYZE, kill, conditional);
computeGenKill(n.getFirstChild(), ARGUMENT_ARRAY_ALIAS, kill, conditional);
computeGenKill(n.getFirstChild(), this.jsScope, kill, conditional);
computeGenKill(n.getFirstChild(), this.escaped, kill, conditional);
computeGenKill(n.getFirstChild(),  kill, conditional);
computeGenKill(n.getFirstChild(), c, gen, kill, conditional);
computeGenKill(n.getFirstChild(), n, gen, kill, conditional);
computeGenKill(n.getFirstChild(), MAX_VARIABLES_TO_ANALYZE, gen, kill, conditional);
computeGenKill(n.getFirstChild(), ARGUMENT_ARRAY_ALIAS, gen, kill, conditional);
computeGenKill(n.getFirstChild(), this.jsScope, gen, kill, conditional);
computeGenKill(n.getFirstChild(), this.escaped, gen, kill, conditional);
computeGenKill(n.getFirstChild(), gen, c, conditional);
computeGenKill(n.getFirstChild(), gen, n, conditional);
computeGenKill(n.getFirstChild(), gen, MAX_VARIABLES_TO_ANALYZE, conditional);
computeGenKill(n.getFirstChild(), gen, ARGUMENT_ARRAY_ALIAS, conditional);
computeGenKill(n.getFirstChild(), gen, this.jsScope, conditional);
computeGenKill(n.getFirstChild(), gen, this.escaped, conditional);
computeGenKill(n.getFirstChild(), gen,  conditional);
computeGenKill(n.getFirstChild(), gen, c, kill, conditional);
computeGenKill(n.getFirstChild(), gen, n, kill, conditional);
computeGenKill(n.getFirstChild(), gen, MAX_VARIABLES_TO_ANALYZE, kill, conditional);
computeGenKill(n.getFirstChild(), gen, ARGUMENT_ARRAY_ALIAS, kill, conditional);
computeGenKill(n.getFirstChild(), gen, this.jsScope, kill, conditional);
computeGenKill(n.getFirstChild(), gen, this.escaped, kill, conditional);
computeGenKill(n.getFirstChild(), gen, kill, c);
computeGenKill(n.getFirstChild(), gen, kill, n);
computeGenKill(n.getFirstChild(), gen, kill, MAX_VARIABLES_TO_ANALYZE);
computeGenKill(n.getFirstChild(), gen, kill, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getFirstChild(), gen, kill, this.jsScope);
computeGenKill(n.getFirstChild(), gen, kill, this.escaped);
computeGenKill(n.getFirstChild(), gen, kill, );
computeGenKill(n.getFirstChild(), gen, kill, c, conditional);
computeGenKill(n.getFirstChild(), gen, kill, n, conditional);
computeGenKill(n.getFirstChild(), gen, kill, MAX_VARIABLES_TO_ANALYZE, conditional);
computeGenKill(n.getFirstChild(), gen, kill, ARGUMENT_ARRAY_ALIAS, conditional);
computeGenKill(n.getFirstChild(), gen, kill, this.jsScope, conditional);
computeGenKill(n.getFirstChild(), gen, kill, this.escaped, conditional);
computeGenKill(n.getFirstChild(), gen, kill, conditional, c);
computeGenKill(n.getFirstChild(), gen, kill, conditional, n);
computeGenKill(n.getFirstChild(), gen, kill, conditional, MAX_VARIABLES_TO_ANALYZE);
computeGenKill(n.getFirstChild(), gen, kill, conditional, ARGUMENT_ARRAY_ALIAS);
computeGenKill(n.getFirstChild(), gen, kill, conditional, this.jsScope);
computeGenKill(n.getFirstChild(), gen, kill, conditional, this.escaped);
02:24:52.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:53.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:53.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:54.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:54.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:54.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:54.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:55.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:55.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:56.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:56.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:57.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:57.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:57.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:57.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:58.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:58.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:24:59.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:24:59.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:00.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:00.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:01.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:01.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:01.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:01.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:02.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:02.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:03.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:03.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:04.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:04.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:04.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:04.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:05.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:05.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:06.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:06.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:07.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:07.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:07.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:07.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:08.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:08.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:09.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:09.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:10.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:10.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:10.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:10.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:11.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:11.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:12.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:12.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:13.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:13.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:14.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:14.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:14.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:14.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:15.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:15.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:16.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:16.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:17.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:17.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:18.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:18.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:18.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:18.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:19.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:19.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:20.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:20.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:21.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:21.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:22.318 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:22.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:22.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:22.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:23.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:23.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:24.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:24.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:24.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:24.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:25.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:25.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:26.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:26.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:27.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:27.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:28.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:28.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:28.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:28.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:29.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:29.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:30.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:30.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:31.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:31.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:32.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n != null) {


}

if (gen != null) {


}

if (kill != null) {


}

02:25:32.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:32.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:32.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:33.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:33.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:34.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (gen == null) {
    return;
}

if (gen == null) {
    throw new IllegalArgumentException("Empty variable: " + gen);
}

if (kill == null) {
    return;
}

if (kill == null) {
    throw new IllegalArgumentException("Empty variable: " + kill);
}

02:25:34.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:35.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:35.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:35.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:35.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:36.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:36.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:37.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:37.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:38.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:38.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:39.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

        // May short circuit.
        computeGenKill(n.getLastChild(), gen, kill, true);
	computeGenKill(n.getFirstChild(), gen, kill, conditional);

MOVE-BUGGY-STATEMENT

        // May short circuit.
        computeGenKill(n.getLastChild(), gen, kill, true);
        return;
	computeGenKill(n.getFirstChild(), gen, kill, conditional);

MOVE-BUGGY-STATEMENT
02:25:39.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:39.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:39.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:40.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 

02:25:40.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:25:41.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-36 ---Fixer: fix fail because of failed compiling! 
02:25:41.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CompilationLevel ===187
02:25:41.528 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
/**
   * Add the options that will work only if the user exported all the symbols
   * correctly.
   * @param options The CompilerOptions object to set the options on.
   */
  private static void applyFullCompilationOptions(CompilerOptions options) {
    // Do not call applySafeCompilationOptions(options) because the call can
    // create possible conflicts between multiple diagnostic groups.

    // All the safe optimizations.
    options.closurePass = true;
    options.foldConstants = true;
    options.coalesceVariableNames = true;
    options.deadAssignmentElimination = true;
    options.extractPrototypeMemberDeclarations = true;
    options.collapseVariableDeclarations = true;
    options.convertToDottedProperties = true;
    options.rewriteFunctionExpressions = true;
    options.labelRenaming = true;
    options.removeDeadCode = true;
    options.optimizeArgumentsArray = true;
    options.collapseObjectLiterals = true;
    options.protectHiddenSideEffects = true;

    // All the advance optimizations.
    options.removeClosureAsserts = true;
    options.aliasKeywords = true;
    options.reserveRawExports = true;
    options.setRenamingPolicy(
        VariableRenamingPolicy.ALL, PropertyRenamingPolicy.ALL_UNQUOTED);
    options.shadowVariables = true;
    options.removeUnusedPrototypeProperties = true;
    options.removeUnusedPrototypePropertiesInExterns = true;
    options.collapseAnonymousFunctions = true;
    options.collapseProperties = true;
    options.checkGlobalThisLevel = CheckLevel.WARNING;
    options.rewriteFunctionExpressions = true;
    options.smartNameRemoval = true;
    options.inlineConstantVars = true;
    options.setInlineFunctions(Reach.ALL);
    options.inlineGetters = true;
    options.setInlineVariables(Reach.ALL);
    options.flowSensitiveInlineVariables = true;
    options.computeFunctionSideEffects = true;

    // Remove unused vars also removes unused functions.
    options.setRemoveUnusedVariables(Reach.ALL);

    // Move code around based on the defined modules.
    options.crossModuleCodeMotion = true;
    options.crossModuleMethodMotion = true;

    // Call optimizations
    options.devirtualizePrototypeMethods = true;
    options.optimizeParameters = true;
    options.optimizeReturns = true;
    options.optimizeCalls = true;

    // Kindly tell the user that they have JsDocs that we don't understand.
    options.setWarningLevel(DiagnosticGroups.NON_STANDARD_JSDOC,
        CheckLevel.WARNING);
  }
