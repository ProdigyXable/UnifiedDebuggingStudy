Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-44
01:26:32.266 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/44.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/44.txt
01:30:29.092 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
01:30:29.141 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-44/generalSusInfo.profl
01:30:29.180 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-44/aggregatedSusInfo.profl
01:30:29.184 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Fixing Beginning======
01:30:29.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.NodeUtil ===2148
01:30:30.603 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case Token.DIV:

01:30:30.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:30:32.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:30:32.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.parsing.IRFactory ===1131
01:30:32.386 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return Token.DIV;

01:30:32.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:30:33.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:30:33.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.NodeUtil ===1199
01:30:33.505 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case Token.DIV:

01:30:33.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:30:34.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:30:34.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===283
01:30:34.721 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
break;

01:30:34.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:43.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:43.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===281
01:31:43.715 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
add(regexp);
add(true, regexp);
add(false, regexp);
add(regexp, true);
add(regexp, false);
01:31:43.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:44.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:44.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:45.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:45.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:46.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:46.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:47.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
add(last);
add(first);
add(childCount);
add(opstr);
add(type);
add(n);
add(context);
add(this.ESCAPED_JS_STRINGS);
add(HEX_CHARS);
add(this.cc);
add(this.outputCharsetEncoder);
add();
add(last, regexp);
add(first, regexp);
add(childCount, regexp);
add(opstr, regexp);
add(type, regexp);
add(n, regexp);
add(context, regexp);
add(this.ESCAPED_JS_STRINGS, regexp);
add(HEX_CHARS, regexp);
add(this.cc, regexp);
add(this.outputCharsetEncoder, regexp);
add(regexp, last);
add(regexp, first);
add(regexp, childCount);
add(regexp, opstr);
add(regexp, type);
add(regexp, n);
add(regexp, context);
add(regexp, this.ESCAPED_JS_STRINGS);
add(regexp, HEX_CHARS);
add(regexp, this.cc);
add(regexp, this.outputCharsetEncoder);
01:31:47.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:48.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:48.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:49.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:49.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:50.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:50.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:51.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:51.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:52.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:52.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:53.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:53.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:54.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:54.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:55.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:55.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:56.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:56.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:57.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:57.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:57.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:57.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:58.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:58.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:31:59.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:31:59.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:00.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:00.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:01.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:01.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:02.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:02.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:03.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:03.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:04.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:04.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:05.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:05.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:06.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:06.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:07.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:07.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:08.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:08.502 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:09.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:09.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:10.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:10.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:11.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:11.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:13.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:13.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:14.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:14.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:15.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:15.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:16.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:16.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:17.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:17.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:18.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:18.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:19.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:19.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:20.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:20.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:21.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
escapeToDoubleQuotedJsString(regexp);
regexpEscape(regexp);
identifierEscape(regexp);
addIdentifier(regexp);
isSimpleNumber(regexp);
getSimpleNumber(regexp);
01:32:21.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:22.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:22.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:22.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:22.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:23.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:23.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:24.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:24.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:25.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:25.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:26.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (regexp != null) {


}

01:32:26.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:27.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (regexp == null) {
    return;
}

if (regexp == null) {
    throw new IllegalArgumentException("Empty variable: " + regexp);
}

01:32:27.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:28.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:28.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:29.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
add(regexp);
	add(regexp + last.getString());
        } else {
          Preconditions.checkState(childCount == 1);
          
null
add(regexp);
	Preconditions.checkState(childCount == 1);
          
null
01:32:29.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:30.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:30.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:31.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:32:31.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:32.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:32.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===280
01:32:32.382 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Preconditions.checkState(childCount == 1);
Preconditions.checkState(true, childCount == 1);
Preconditions.checkState(false, childCount == 1);
Preconditions.checkState(childCount == 1, true);
Preconditions.checkState(childCount == 1, false);
01:32:32.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:33.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:33.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:34.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:34.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:35.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:35.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:36.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
Preconditions.checkState(regexp, childCount == 1);
Preconditions.checkState(last, childCount == 1);
Preconditions.checkState(first, childCount == 1);
Preconditions.checkState(childCount, childCount == 1);
Preconditions.checkState(opstr, childCount == 1);
Preconditions.checkState(type, childCount == 1);
Preconditions.checkState(n, childCount == 1);
Preconditions.checkState(context, childCount == 1);
Preconditions.checkState(this.ESCAPED_JS_STRINGS, childCount == 1);
Preconditions.checkState(HEX_CHARS, childCount == 1);
Preconditions.checkState(this.cc, childCount == 1);
Preconditions.checkState(this.outputCharsetEncoder, childCount == 1);
Preconditions.checkState(childCount == 1, regexp);
Preconditions.checkState(childCount == 1, last);
Preconditions.checkState(childCount == 1, first);
Preconditions.checkState(childCount == 1, childCount);
Preconditions.checkState(childCount == 1, opstr);
Preconditions.checkState(childCount == 1, type);
Preconditions.checkState(childCount == 1, n);
Preconditions.checkState(childCount == 1, context);
Preconditions.checkState(childCount == 1, this.ESCAPED_JS_STRINGS);
Preconditions.checkState(childCount == 1, HEX_CHARS);
Preconditions.checkState(childCount == 1, this.cc);
Preconditions.checkState(childCount == 1, this.outputCharsetEncoder);
01:32:36.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:36.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:36.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:37.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:37.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:38.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:38.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:39.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:39.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:40.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:40.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:41.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:41.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:42.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:42.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:43.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:43.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:44.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:44.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:45.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:45.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:46.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:46.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:47.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:47.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:48.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:48.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:48.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:48.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:49.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:49.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:50.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:50.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:51.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:51.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:52.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:52.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:53.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:53.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:54.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:54.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:55.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:55.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:56.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:56.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:57.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:57.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:58.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (childCount == 0) {
    new IllegalArgumentException("");
}

if (childCount != 0) {

    
}

if (childCount > 0) {

    
}

01:32:58.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:32:59.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:32:59.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:00.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:00.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:01.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
Preconditions.checkState(childCount == 1);
	add(regexp + last.getString());
        } else {
          
null

          add(regexp);
	Preconditions.checkState(childCount == 1);

MOVE-BUGGY-STATEMENT
01:33:01.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:02.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:02.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:03.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:33:03.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:04.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:04.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===277
01:33:04.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (childCount == 2) {
          add(regexp + last.getString());
        } else {
          Preconditions.checkState(childCount == 1);
          add(regexp);
        }
if (childCount != 2) {
          add(regexp + last.getString());
        } else {
          Preconditions.checkState(childCount == 1);
          add(regexp);
        }
01:33:04.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:05.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (type == 2) {
          add(regexp + last.getString());
        } else {
          Preconditions.checkState(childCount == 1);
          add(regexp);
        }
01:33:05.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:06.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (childCount == 0) {
    new IllegalArgumentException("");
}

if (childCount != 0) {

    
}

if (childCount > 0) {

    
}

01:33:06.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:08.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:08.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:08.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:08.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:08.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
tagAsStrict();
	if (childCount == 2) {
          add(regexp + last.getString());
        } else {
          Preconditions.checkState(childCount == 1);
          add(regexp);
        }
if (childCount == 2) {
          add(regexp + last.getString());
        } else {
          Preconditions.checkState(childCount == 1);
          add(regexp);
        }
	tagAsStrict();
01:33:09.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:10.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:10.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:11.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (childCount == 2) {
          add(regexp + last.getString());
        } else {
          Preconditions.checkState(childCount == 1);
          add(regexp);
        }
	if (!first.isString() ||
            !last.isString()) {
          throw new Error("Expected children to be strings");
        }

        String regexp = regexpEscape(first.getString(), outputCharsetEncoder);

        // I only use one .add because whitespace matters
        
null
if (childCount == 2) {
          add(regexp + last.getString());
        } else {
          Preconditions.checkState(childCount == 1);
          add(regexp);
        }
	String regexp = regexpEscape(first.getString(), outputCharsetEncoder);

        // I only use one .add because whitespace matters
        
null

        break;
	if (childCount == 2) {
          add(regexp + last.getString());
        } else {
          Preconditions.checkState(childCount == 1);
          add(regexp);
        }

MOVE-BUGGY-STATEMENT
01:33:11.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:12.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:12.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:13.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:13.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:14.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:33:14.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:14.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:14.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===274
01:33:14.947 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
String regexp = regexpEscape(first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(regexp, first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(last, first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(first, first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(childCount, first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(opstr, first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(type, first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(n, first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(context, first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(this.ESCAPED_JS_STRINGS, first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(HEX_CHARS, first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(this.cc, first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(this.outputCharsetEncoder, first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), regexp);
String regexp = regexpEscape(first.getString(), last);
String regexp = regexpEscape(first.getString(), first);
String regexp = regexpEscape(first.getString(), childCount);
String regexp = regexpEscape(first.getString(), opstr);
String regexp = regexpEscape(first.getString(), type);
String regexp = regexpEscape(first.getString(), n);
String regexp = regexpEscape(first.getString(), context);
String regexp = regexpEscape(first.getString(), this.ESCAPED_JS_STRINGS);
String regexp = regexpEscape(first.getString(), HEX_CHARS);
String regexp = regexpEscape(first.getString(), this.cc);
String regexp = regexpEscape(first.getString(), this.outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), );
String regexp = regexpEscape(first.getString(), regexp, outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), last, outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), first, outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), childCount, outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), opstr, outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), type, outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), n, outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), context, outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), this.ESCAPED_JS_STRINGS, outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), HEX_CHARS, outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), this.cc, outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), this.outputCharsetEncoder, outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder, regexp);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder, last);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder, first);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder, childCount);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder, opstr);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder, type);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder, n);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder, context);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder, this.ESCAPED_JS_STRINGS);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder, HEX_CHARS);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder, this.cc);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder, this.outputCharsetEncoder);
01:33:14.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:15.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:15.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:16.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:16.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:17.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:17.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:18.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:18.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:19.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:19.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:20.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:20.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:21.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:21.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:22.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:22.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:23.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:23.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:24.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:24.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:25.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:25.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:26.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:26.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:26.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:26.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:27.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:27.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:28.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:28.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:29.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:29.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:30.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:30.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:31.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:31.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:32.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:32.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:33.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:33.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:34.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:34.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:35.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:35.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:36.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:36.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:36.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:36.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:37.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:37.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:38.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:38.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:39.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:39.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:40.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:40.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:41.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:41.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:41.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:41.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:42.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:42.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:43.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:43.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:44.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:44.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:45.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:45.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:46.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:46.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:47.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:47.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:48.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:48.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:49.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:49.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:50.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:50.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:50.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:50.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:51.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:51.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:52.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:52.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:53.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:53.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:54.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:54.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:55.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:55.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:56.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:56.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:57.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:57.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:58.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:58.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:59.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
String regexp = regexp;
String regexp = last;
String regexp = first;
String regexp = childCount;
String regexp = opstr;
String regexp = type;
String regexp = n;
String regexp = context;
String regexp = this.ESCAPED_JS_STRINGS;
String regexp = HEX_CHARS;
String regexp = this.cc;
String regexp = this.outputCharsetEncoder;
01:33:59.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:59.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:33:59.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:00.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:00.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:01.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:01.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:02.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:02.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:03.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:03.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:04.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:04.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:05.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:05.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:06.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:06.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:07.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:07.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:08.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:08.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:09.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:09.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:10.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (first != null) {


}

if (outputCharsetEncoder != null) {


}

01:34:10.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:10.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:10.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:11.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (first == null) {
    return;
}

if (first == null) {
    throw new IllegalArgumentException("Empty variable: " + first);
}

if (outputCharsetEncoder == null) {
    return;
}

if (outputCharsetEncoder == null) {
    throw new IllegalArgumentException("Empty variable: " + outputCharsetEncoder);
}

01:34:11.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:12.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:12.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:13.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:13.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:14.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:14.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:15.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
tagAsStrict();
	String regexp = regexpEscape(first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder);
	tagAsStrict();
add(regexp);
add(regexp);
	String regexp = regexpEscape(first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder);
	add(regexp);
addIdentifier(regexp);
addIdentifier(regexp);
	String regexp = regexpEscape(first.getString(), outputCharsetEncoder);
String regexp = regexpEscape(first.getString(), outputCharsetEncoder);
	addIdentifier(regexp);
01:34:15.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:16.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:16.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:17.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:17.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:17.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:17.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:18.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:18.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:19.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:19.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:20.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:20.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:21.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:21.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:22.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:34:22.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:23.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:23.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===269
01:34:23.471 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (!first.isString() ||
            !last.isString()) {
          throw new Error("Expected children to be strings");
        }
if (!first.isString() && !last.isString()) {
          throw new Error("Expected children to be strings");
        }
01:34:23.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:24.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (first != null) {


}

if (last != null) {


}

01:34:24.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:24.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:24.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:25.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (first == null) {
    return;
}

if (first == null) {
    throw new IllegalArgumentException("Empty variable: " + first);
}

if (last == null) {
    return;
}

if (last == null) {
    throw new IllegalArgumentException("Empty variable: " + last);
}

01:34:25.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:26.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:26.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:27.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:27.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:28.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:28.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:29.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 


        String regexp = regexpEscape(first.getString(), outputCharsetEncoder);
	if (!first.isString() ||
            !last.isString()) {
          throw new Error("Expected children to be strings");
        }

MOVE-BUGGY-STATEMENT


        String regexp = regexpEscape(first.getString(), outputCharsetEncoder);

        // I only use one .add because whitespace matters
        if (childCount == 2) {
          add(regexp + last.getString());
        } else {
          Preconditions.checkState(childCount == 1);
          add(regexp);
        }
	if (!first.isString() ||
            !last.isString()) {
          throw new Error("Expected children to be strings");
        }

MOVE-BUGGY-STATEMENT


        String regexp = regexpEscape(first.getString(), outputCharsetEncoder);

        // I only use one .add because whitespace matters
        if (childCount == 2) {
          add(regexp + last.getString());
        } else {
          Preconditions.checkState(childCount == 1);
          add(regexp);
        }
        break;
	if (!first.isString() ||
            !last.isString()) {
          throw new Error("Expected children to be strings");
        }

MOVE-BUGGY-STATEMENT
01:34:29.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:30.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:30.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:31.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:31.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:31.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:34:31.945 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:32.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:32.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===986
01:34:32.902 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(this.ESCAPED_JS_STRINGS, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(HEX_CHARS, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(this.cc, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(this.outputCharsetEncoder, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape( '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(this.ESCAPED_JS_STRINGS, s, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(HEX_CHARS, s, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(this.cc, s, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(this.outputCharsetEncoder, s, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, this.ESCAPED_JS_STRINGS, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, HEX_CHARS, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, this.cc, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, this.outputCharsetEncoder, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', this.ESCAPED_JS_STRINGS, "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', HEX_CHARS, "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', this.cc, "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', this.outputCharsetEncoder, "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", this.ESCAPED_JS_STRINGS, "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", HEX_CHARS, "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", this.cc, "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", this.outputCharsetEncoder, "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", this.ESCAPED_JS_STRINGS, "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", HEX_CHARS, "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", this.cc, "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", this.outputCharsetEncoder, "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", "\\", this.ESCAPED_JS_STRINGS, false);
return strEscape(s, '/', "\"", "'", "\\", HEX_CHARS, false);
return strEscape(s, '/', "\"", "'", "\\", this.cc, false);
return strEscape(s, '/', "\"", "'", "\\", this.outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", "\\",  false);
return strEscape(s, '/', "\"", "'", "\\", this.ESCAPED_JS_STRINGS, outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", "\\", HEX_CHARS, outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", "\\", this.cc, outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", "\\", this.outputCharsetEncoder, outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, this.ESCAPED_JS_STRINGS, false);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, HEX_CHARS, false);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, this.cc, false);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, this.outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, false, this.ESCAPED_JS_STRINGS);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, false, HEX_CHARS);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, false, this.cc);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, false, this.outputCharsetEncoder);
01:34:32.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:33.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:33.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:34.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:34.728 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:35.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:35.642 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:36.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:36.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:37.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:37.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:38.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:38.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:39.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:39.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:40.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:40.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:41.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:41.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:41.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:41.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:42.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:42.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:43.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:43.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:44.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:44.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:45.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:45.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:46.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:46.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:47.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:47.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:48.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:48.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:49.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:49.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:50.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:50.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:51.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:51.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:51.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:51.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:52.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:52.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:53.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:53.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:54.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:54.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:55.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:55.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:56.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:56.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:57.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:57.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:58.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:58.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:59.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:34:59.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:00.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:00.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:01.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:01.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:01.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:01.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:02.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:02.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:03.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:03.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:04.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:04.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:05.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:05.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:06.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:06.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:07.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:07.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:08.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:08.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:09.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:09.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:10.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:10.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:11.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return strEscape(true, s, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(false, s, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, true, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, false, '/', "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', true, "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', false, "\"", "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", true, "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", false, "'", "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", true, "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", false, "\\", outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", "\\", true, outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", "\\", false, outputCharsetEncoder, false);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, true);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, true, false);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, false, false);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, false, true);
return strEscape(s, '/', "\"", "'", "\\", outputCharsetEncoder, false, false);
01:35:11.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:12.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:12.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:12.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:12.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:13.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:13.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:14.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:14.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:15.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:15.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:16.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:16.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:17.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:17.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:18.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:18.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:19.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:19.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:20.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:20.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:21.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:21.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:21.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:21.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:22.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:22.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:23.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:23.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:24.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:24.728 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:25.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:25.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:26.550 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:26.550 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:27.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (s != null) {


}

if (outputCharsetEncoder != null) {


}

01:35:27.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:28.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:28.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:29.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (s == null) {
    return null;
}

if (s == null) {
    throw new IllegalArgumentException("Empty variable: " + s);
}

if (outputCharsetEncoder == null) {
    return null;
}

if (outputCharsetEncoder == null) {
    throw new IllegalArgumentException("Empty variable: " + outputCharsetEncoder);
}

01:35:29.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:30.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:30.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:31.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:31.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:31.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:31.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:32.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:35:32.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:33.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:33.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.parsing.TypeSafeDispatcher ===250
01:35:33.796 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return processRegExpLiteral((RegExpLiteral) node);
return processRegExpLiteral(node, (RegExpLiteral) node);
return processRegExpLiteral((RegExpLiteral) node, node);
01:35:33.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:34.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:34.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:35.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return processRegExpLiteral(true, (RegExpLiteral) node);
return processRegExpLiteral(false, (RegExpLiteral) node);
return processRegExpLiteral((RegExpLiteral) node, true);
return processRegExpLiteral((RegExpLiteral) node, false);
01:35:35.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:36.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:36.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:37.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:37.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:38.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:38.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:39.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (node != null) {


}

01:35:39.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:39.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (node == null) {
    return null;
}

if (node == null) {
    throw new IllegalArgumentException("Empty variable: " + node);
}

01:35:39.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:40.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:40.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:41.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:35:41.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:42.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:42.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===1071
01:35:42.293 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
sb.append(c);
sb.append(true, c);
sb.append(false, c);
sb.append(c, true);
sb.append(c, false);
01:35:42.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:43.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:43.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:44.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:44.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:45.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:45.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:45.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
sb.append(START_COMMENT);
sb.append(END_SCRIPT);
sb.append(i);
sb.append(s);
sb.append(quote);
sb.append(doublequoteEscape);
sb.append(singlequoteEscape);
sb.append(backslashEscape);
sb.append(outputCharsetEncoder);
sb.append(useSlashV);
sb.append(this.ESCAPED_JS_STRINGS);
sb.append(HEX_CHARS);
sb.append(this.cc);
sb.append(this.outputCharsetEncoder);
sb.append();
sb.append(START_COMMENT, c);
sb.append(END_SCRIPT, c);
sb.append(i, c);
sb.append(s, c);
sb.append(quote, c);
sb.append(doublequoteEscape, c);
sb.append(singlequoteEscape, c);
sb.append(backslashEscape, c);
sb.append(outputCharsetEncoder, c);
sb.append(useSlashV, c);
sb.append(this.ESCAPED_JS_STRINGS, c);
sb.append(HEX_CHARS, c);
sb.append(this.cc, c);
sb.append(this.outputCharsetEncoder, c);
sb.append(c, START_COMMENT);
sb.append(c, END_SCRIPT);
sb.append(c, i);
sb.append(c, s);
sb.append(c, quote);
sb.append(c, doublequoteEscape);
sb.append(c, singlequoteEscape);
sb.append(c, backslashEscape);
sb.append(c, outputCharsetEncoder);
sb.append(c, useSlashV);
sb.append(c, this.ESCAPED_JS_STRINGS);
sb.append(c, HEX_CHARS);
sb.append(c, this.cc);
sb.append(c, this.outputCharsetEncoder);
01:35:45.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:46.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:46.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:47.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:47.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:48.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:48.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:49.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:49.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:50.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:50.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:51.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:51.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:52.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:52.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:53.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:53.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:53.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:53.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:54.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:54.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:55.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:55.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:56.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:56.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:57.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:57.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:58.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:58.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:35:59.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:35:59.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:00.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:00.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:01.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:01.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:02.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:02.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:02.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:02.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:03.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:03.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:04.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:04.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:05.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:05.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:06.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:06.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:07.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:07.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:08.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:08.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:09.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:09.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:10.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:10.157 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:11.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:11.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:11.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:11.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:12.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:12.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:13.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:13.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:14.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:14.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:15.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:15.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:16.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:16.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:17.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:17.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:18.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:18.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:19.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:19.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:20.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:20.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:21.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:21.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:22.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:22.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:23.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:23.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:23.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:23.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:24.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (sb != null) {


}

01:36:24.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:25.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (sb == null) {
    return null;
}

if (sb == null) {
    throw new IllegalArgumentException("Empty variable: " + sb);
}

01:36:25.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:26.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:26.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:27.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
	sb.append(c);

MOVE-BUGGY-STATEMENT
01:36:27.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:28.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:36:28.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:29.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:29.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===1070
01:36:29.345 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
if (c > 0x1f || c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
if (c >= 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
if (c <= 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
if (c < 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
if (c > 0x1f && c <= 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
if (c > 0x1f && c >= 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
if (c > 0x1f && c > 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
01:36:29.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:30.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:30.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:31.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:31.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:32.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:32.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:32.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:32.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:33.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:33.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:34.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:34.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:35.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (quote > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
if (c > 0x1f && quote < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
01:36:35.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:36.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:36.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:37.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
tagAsStrict();
	if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
	tagAsStrict();
01:36:37.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:38.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:38.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:39.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
	if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            
null
01:36:39.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:40.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:36:40.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:41.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:41.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===1059
01:36:41.241 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
if (outputCharsetEncoder == null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
01:36:41.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:42.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (outputCharsetEncoder != null) {


}

01:36:42.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:43.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (outputCharsetEncoder == null) {
    return null;
}

if (outputCharsetEncoder == null) {
    throw new IllegalArgumentException("Empty variable: " + outputCharsetEncoder);
}

01:36:43.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:43.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:43.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:44.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
tagAsStrict();
	if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
	tagAsStrict();
01:36:44.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:45.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:45.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:46.664 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:36:46.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:47.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:47.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===1015
01:36:47.584 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
tagAsStrict();
	switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
	tagAsStrict();
01:36:47.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:48.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:48.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:49.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
	char c = s.charAt(i);
      
null
01:36:49.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:50.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:36:50.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:51.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:51.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===1014
01:36:51.230 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
char c = s.charAt(i);
char c = s.charAt(c);
char c = s.charAt(sb);
char c = s.charAt(quote);
char c = s.charAt(doublequoteEscape);
char c = s.charAt(singlequoteEscape);
char c = s.charAt(backslashEscape);
char c = s.charAt(outputCharsetEncoder);
char c = s.charAt(useSlashV);
char c = s.charAt(this.ESCAPED_JS_STRINGS);
char c = s.charAt(HEX_CHARS);
char c = s.charAt(this.cc);
char c = s.charAt(this.outputCharsetEncoder);
char c = s.charAt();
char c = s.charAt(c, i);
char c = s.charAt(sb, i);
char c = s.charAt(quote, i);
char c = s.charAt(doublequoteEscape, i);
char c = s.charAt(singlequoteEscape, i);
char c = s.charAt(backslashEscape, i);
char c = s.charAt(outputCharsetEncoder, i);
char c = s.charAt(useSlashV, i);
char c = s.charAt(this.ESCAPED_JS_STRINGS, i);
char c = s.charAt(HEX_CHARS, i);
char c = s.charAt(this.cc, i);
char c = s.charAt(this.outputCharsetEncoder, i);
char c = s.charAt(i, c);
char c = s.charAt(i, sb);
char c = s.charAt(i, quote);
char c = s.charAt(i, doublequoteEscape);
char c = s.charAt(i, singlequoteEscape);
char c = s.charAt(i, backslashEscape);
char c = s.charAt(i, outputCharsetEncoder);
char c = s.charAt(i, useSlashV);
char c = s.charAt(i, this.ESCAPED_JS_STRINGS);
char c = s.charAt(i, HEX_CHARS);
char c = s.charAt(i, this.cc);
char c = s.charAt(i, this.outputCharsetEncoder);
01:36:51.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:52.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:52.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:53.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:53.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:53.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:53.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:54.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:54.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:55.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:55.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:56.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:56.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:57.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:57.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:58.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:58.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:36:59.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:36:59.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:00.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:00.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:01.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:01.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:02.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:02.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:03.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:03.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:04.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:04.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:04.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:04.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:05.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:05.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:06.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:06.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:07.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:07.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:08.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:08.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:09.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:09.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:10.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:10.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:11.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:11.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:12.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:12.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:13.197 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:13.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:14.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:14.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:15.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:15.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:15.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:15.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:16.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:16.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:17.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:17.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:18.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:18.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:19.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:19.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:20.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:20.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:21.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:21.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:22.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:22.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:23.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:23.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:24.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:24.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:24.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
char c = c.charAt(i);
char c = i.charAt(i);
char c = sb.charAt(i);
char c = quote.charAt(i);
char c = doublequoteEscape.charAt(i);
char c = singlequoteEscape.charAt(i);
char c = backslashEscape.charAt(i);
char c = outputCharsetEncoder.charAt(i);
char c = useSlashV.charAt(i);
char c = this.ESCAPED_JS_STRINGS.charAt(i);
char c = HEX_CHARS.charAt(i);
char c = this.cc.charAt(i);
char c = this.outputCharsetEncoder.charAt(i);
01:37:24.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:25.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:25.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:26.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:26.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:27.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:27.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:28.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:28.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:29.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:29.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:30.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:30.511 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:31.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:31.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:32.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:32.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:33.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:33.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:34.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:34.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:35.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:35.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:35.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:35.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:36.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (s != null) {


}

01:37:36.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:37.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (s == null) {
    return null;
}

if (s == null) {
    throw new IllegalArgumentException("Empty variable: " + s);
}

01:37:37.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:38.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:38.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:39.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (i == 0) {
    new IllegalArgumentException("");
}

if (i != 0) {

    
}

if (i > 0) {

    
}

01:37:39.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:40.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:40.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:41.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:41.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:42.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
tagAsStrict();
	char c = s.charAt(i);
char c = s.charAt(i);
	tagAsStrict();
01:37:42.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:43.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:43.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:44.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:37:44.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:45.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:45.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===1082
01:37:45.154 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return sb.toString();
return sb.toString(i);
return sb.toString(s);
return sb.toString(quote);
return sb.toString(doublequoteEscape);
return sb.toString(singlequoteEscape);
return sb.toString(backslashEscape);
return sb.toString(outputCharsetEncoder);
return sb.toString(useSlashV);
return sb.toString(this.ESCAPED_JS_STRINGS);
return sb.toString(HEX_CHARS);
return sb.toString(this.cc);
return sb.toString(this.outputCharsetEncoder);
01:37:45.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:46.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:46.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:47.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:47.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:47.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:47.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:48.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:48.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:49.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:49.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:50.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:50.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:51.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:51.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:52.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:52.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:53.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:53.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:54.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:54.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:55.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:55.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:56.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return sb.toStringBinary();
01:37:56.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:57.157 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return sb.toString(true);
return sb.toString(false);
01:37:57.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:58.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:37:58.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:58.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (sb != null) {


}

01:37:58.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:59.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (sb == null) {
    return null;
}

if (sb == null) {
    throw new IllegalArgumentException("Empty variable: " + sb);
}

01:37:59.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:00.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:00.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:01.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:38:01.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:02.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:02.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===1081
01:38:02.558 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
sb.append(quote);
sb.append(true, quote);
sb.append(false, quote);
sb.append(quote, true);
sb.append(quote, false);
01:38:02.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:03.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:03.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:04.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:04.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:05.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:05.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:06.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
sb.append(i);
sb.append(s);
sb.append(doublequoteEscape);
sb.append(singlequoteEscape);
sb.append(backslashEscape);
sb.append(outputCharsetEncoder);
sb.append(useSlashV);
sb.append(this.ESCAPED_JS_STRINGS);
sb.append(HEX_CHARS);
sb.append(this.cc);
sb.append(this.outputCharsetEncoder);
sb.append();
sb.append(i, quote);
sb.append(s, quote);
sb.append(doublequoteEscape, quote);
sb.append(singlequoteEscape, quote);
sb.append(backslashEscape, quote);
sb.append(outputCharsetEncoder, quote);
sb.append(useSlashV, quote);
sb.append(this.ESCAPED_JS_STRINGS, quote);
sb.append(HEX_CHARS, quote);
sb.append(this.cc, quote);
sb.append(this.outputCharsetEncoder, quote);
sb.append(quote, i);
sb.append(quote, s);
sb.append(quote, doublequoteEscape);
sb.append(quote, singlequoteEscape);
sb.append(quote, backslashEscape);
sb.append(quote, outputCharsetEncoder);
sb.append(quote, useSlashV);
sb.append(quote, this.ESCAPED_JS_STRINGS);
sb.append(quote, HEX_CHARS);
sb.append(quote, this.cc);
sb.append(quote, this.outputCharsetEncoder);
01:38:06.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:07.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:07.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:07.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:07.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:08.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:08.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:09.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:09.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:10.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:10.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:11.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:11.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:12.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:12.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:13.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:13.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:14.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:14.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:15.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:15.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:16.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:16.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:17.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:17.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:18.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:18.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:18.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:18.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:19.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:19.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:20.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:20.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:21.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:21.753 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:22.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:22.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:23.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:23.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:24.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:24.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:25.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:25.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:26.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:26.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:27.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:27.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:28.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:28.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:29.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:29.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:30.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:30.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:30.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:30.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:31.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:31.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:32.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:32.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:33.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:33.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:34.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:34.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:35.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:35.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:36.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:36.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:37.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (sb != null) {


}

01:38:37.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:38.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (sb == null) {
    return null;
}

if (sb == null) {
    throw new IllegalArgumentException("Empty variable: " + sb);
}

01:38:38.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:39.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:39.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:40.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
sb.append(quote);
	StringBuilder sb = new StringBuilder(s.length() + 2);
    sb.append(quote);
    for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }
    
null
sb.append(quote);
	sb.append(quote);
    for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }
    
null
sb.append(quote);
	for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }
    
null

    return sb.toString();
	sb.append(quote);

MOVE-BUGGY-STATEMENT
01:38:40.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:40.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:40.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:41.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:41.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:42.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:42.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:43.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:38:43.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:44.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:44.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===1013
01:38:44.600 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }
if (s != null) {


}

01:38:44.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:45.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (s == null) {
    return null;
}

if (s == null) {
    throw new IllegalArgumentException("Empty variable: " + s);
}

01:38:45.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:46.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:46.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:47.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (i == 0) {
    new IllegalArgumentException("");
}

if (i != 0) {

    
}

if (i > 0) {

    
}

if (i == 0) {
    new IllegalArgumentException("");
}

if (i != 0) {

    
}

if (i > 0) {

    
}

01:38:47.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:48.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:48.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:49.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:49.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:49.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:49.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:50.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:50.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:51.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:51.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:52.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
tagAsStrict();
	for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }
for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }
	tagAsStrict();
01:38:52.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:53.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:53.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:54.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }
	StringBuilder sb = new StringBuilder(s.length() + 2);
    sb.append(quote);
    
null
for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }
	sb.append(quote);
    
null

    sb.append(quote);
	for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }

MOVE-BUGGY-STATEMENT

    sb.append(quote);
    return sb.toString();
	for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }

MOVE-BUGGY-STATEMENT
01:38:54.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:55.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:55.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:56.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:56.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:57.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:57.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:58.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:38:58.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:58.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:58.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===1012
01:38:58.985 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
sb.append(quote);
sb.append(true, quote);
sb.append(false, quote);
sb.append(quote, true);
sb.append(quote, false);
01:38:58.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:59.874 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:38:59.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:00.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:00.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:01.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:01.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:02.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
sb.append(s);
sb.append(doublequoteEscape);
sb.append(singlequoteEscape);
sb.append(backslashEscape);
sb.append(outputCharsetEncoder);
sb.append(useSlashV);
sb.append(this.ESCAPED_JS_STRINGS);
sb.append(HEX_CHARS);
sb.append(this.cc);
sb.append(this.outputCharsetEncoder);
sb.append();
sb.append(s, quote);
sb.append(doublequoteEscape, quote);
sb.append(singlequoteEscape, quote);
sb.append(backslashEscape, quote);
sb.append(outputCharsetEncoder, quote);
sb.append(useSlashV, quote);
sb.append(this.ESCAPED_JS_STRINGS, quote);
sb.append(HEX_CHARS, quote);
sb.append(this.cc, quote);
sb.append(this.outputCharsetEncoder, quote);
sb.append(quote, s);
sb.append(quote, doublequoteEscape);
sb.append(quote, singlequoteEscape);
sb.append(quote, backslashEscape);
sb.append(quote, outputCharsetEncoder);
sb.append(quote, useSlashV);
sb.append(quote, this.ESCAPED_JS_STRINGS);
sb.append(quote, HEX_CHARS);
sb.append(quote, this.cc);
sb.append(quote, this.outputCharsetEncoder);
01:39:02.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:03.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:03.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:04.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:04.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:05.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:05.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:06.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:06.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:07.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:07.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:08.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:08.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:08.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:08.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:09.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:09.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:10.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:10.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:11.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:11.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:12.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:12.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:13.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:13.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:14.436 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:14.436 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:15.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:15.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:16.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:16.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:17.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:17.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:18.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:18.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:19.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:19.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:20.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:20.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:20.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:20.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:21.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:21.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:22.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:22.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:23.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:23.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:24.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:24.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:25.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:25.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:26.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:26.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:27.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:27.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:28.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:28.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:29.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:29.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:30.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:30.032 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:30.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (sb != null) {


}

01:39:30.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:31.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (sb == null) {
    return null;
}

if (sb == null) {
    throw new IllegalArgumentException("Empty variable: " + sb);
}

01:39:31.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:32.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:32.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:33.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
sb.append(quote);
	StringBuilder sb = new StringBuilder(s.length() + 2);
    
null

    for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }
	sb.append(quote);

MOVE-BUGGY-STATEMENT

    for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }
    sb.append(quote);
	sb.append(quote);

MOVE-BUGGY-STATEMENT

    for (int i = 0; i < s.length(); i++) {
      char c = s.charAt(i);
      switch (c) {
        case '\0': sb.append("\\x00"); break;
        case '\u000B':
          if (useSlashV) {
            sb.append("\\v");
          } else {
            sb.append("\\x0B");
          }
          break;
        case '\n': sb.append("\\n"); break;
        case '\r': sb.append("\\r"); break;
        case '\t': sb.append("\\t"); break;
        case '\\': sb.append(backslashEscape); break;
        case '\"': sb.append(doublequoteEscape); break;
        case '\'': sb.append(singlequoteEscape); break;
        case '>':                       // Break --> into --\> or ]]> into ]]\>
          if (i >= 2 &&
              ((s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-') ||
               (s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']'))) {
            sb.append("\\>");
          } else {
            sb.append(c);
          }
          break;
        case '<':
          // Break </script into <\/script
          final String END_SCRIPT = "/script";

          // Break <!-- into <\!--
          final String START_COMMENT = "!--";

          if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                              END_SCRIPT.length())) {
            sb.append("<\\");
          } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
                                     START_COMMENT.length())) {
            sb.append("<\\");
          } else {
            sb.append(c);
          }
          break;
        default:
          // If we're given an outputCharsetEncoder, then check if the
          //  character can be represented in this character set.
          if (outputCharsetEncoder != null) {
            if (outputCharsetEncoder.canEncode(c)) {
              sb.append(c);
            } else {
              // Unicode-escape the character.
              appendHexJavaScriptRepresentation(sb, c);
            }
          } else {
            // No charsetEncoder provided - pass straight latin characters
            // through, and escape the rest.  Doing the explicit character
            // check is measurably faster than using the CharsetEncoder.
            if (c > 0x1f && c < 0x7f) {
              sb.append(c);
            } else {
              // Other characters can be misinterpreted by some js parsers,
              // or perhaps mangled by proxies along the way,
              // so we play it safe and unicode escape them.
              appendHexJavaScriptRepresentation(sb, c);
            }
          }
      }
    }
    sb.append(quote);
    return sb.toString();
	sb.append(quote);

MOVE-BUGGY-STATEMENT
01:39:33.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:34.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:34.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:35.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:35.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:36.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:36.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:37.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:39:37.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:38.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:38.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CodeGenerator ===1011
01:39:38.321 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
StringBuilder sb = new StringBuilder(s.length() + 2);
if (s != null) {


}

01:39:38.322 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:39.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (s == null) {
    return null;
}

if (s == null) {
    throw new IllegalArgumentException("Empty variable: " + s);
}

01:39:39.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:40.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:40.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:41.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
tagAsStrict();
	StringBuilder sb = new StringBuilder(s.length() + 2);
StringBuilder sb = new StringBuilder(s.length() + 2);
	tagAsStrict();
01:39:41.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:41.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:41.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:42.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:39:42.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:43.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:43.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.Compiler ===1335
01:39:43.814 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap(true);
inputsById = Maps.newHashMap(false);
01:39:43.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:45.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:45.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:46.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
initBasedOnOptions();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	initBasedOnOptions();
rebuildInputsFromModules();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	rebuildInputsFromModules();
initInputsByIdMap();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	initInputsByIdMap();
disableThreads();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	disableThreads();
compileInternal();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	compileInternal();
parse();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	parse();
check();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	check();
externExports();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	externExports();
maybeSanityCheck();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	maybeSanityCheck();
runSanityCheck();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	runSanityCheck();
removeTryCatchFinally();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	removeTryCatchFinally();
endPass();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	endPass();
resetUniqueNameId();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	resetUniqueNameId();
initCompilerOptionsIfTesting();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	initCompilerOptionsIfTesting();
optimize();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	optimize();
processDefines();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	processDefines();
normalize();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	normalize();
recordFunctionInformation();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	recordFunctionInformation();
reportCodeChange();
	inputsById = Maps.newHashMap();
inputsById = Maps.newHashMap();
	reportCodeChange();
01:39:46.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:47.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:47.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:48.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:48.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:49.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:49.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:50.841 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:50.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:51.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:51.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:53.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:53.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:54.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:54.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:55.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:55.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:56.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:56.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:57.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:57.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:39:58.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:39:58.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:00.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:00.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:01.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:01.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:02.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:02.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:03.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:03.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:04.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:04.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:05.743 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:05.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:06.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:06.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:08.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:08.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:09.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:09.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:10.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:10.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:11.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:11.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:12.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:12.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:13.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:13.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:14.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:14.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:16.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:16.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:17.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:17.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:18.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:18.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:19.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:19.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:20.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:20.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:21.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:21.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:23.035 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:23.035 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:24.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:24.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:25.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:25.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:26.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:26.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:27.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:27.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:28.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:28.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:29.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:40:29.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:31.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:31.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.Compiler ===1338
01:40:31.056 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return input.getAstRoot(this);
return input.getAstRoot(js, this);
return input.getAstRoot(MODULE_DEPENDENCY_ERROR, this);
return input.getAstRoot(MISSING_ENTRY_ERROR, this);
return input.getAstRoot(this.options, this);
return input.getAstRoot(this.passes, this);
return input.getAstRoot(this.externs, this);
return input.getAstRoot(this.modules, this);
return input.getAstRoot(this.moduleGraph, this);
return input.getAstRoot(this.inputs, this);
return input.getAstRoot(this.errorManager, this);
return input.getAstRoot(this.warningsGuard, this);
return input.getAstRoot(this.externsRoot, this);
return input.getAstRoot(this.jsRoot, this);
return input.getAstRoot(this.externAndJsRoot, this);
return input.getAstRoot(this.inputsById, this);
return input.getAstRoot(this.sourceMap, this);
return input.getAstRoot(this.externExports, this);
return input.getAstRoot(this.uniqueNameId, this);
return input.getAstRoot(this.useThreads, this);
return input.getAstRoot(this.hasRegExpGlobalReferences, this);
return input.getAstRoot(this.functionInformationMap, this);
return input.getAstRoot(this.debugLog, this);
return input.getAstRoot(this.defaultCodingConvention, this);
return input.getAstRoot(this.typeRegistry, this);
return input.getAstRoot(this.parserConfig, this);
return input.getAstRoot(this.abstractInterpreter, this);
return input.getAstRoot(this.typeValidator, this);
return input.getAstRoot(this.tracker, this);
return input.getAstRoot(this.oldErrorReporter, this);
return input.getAstRoot(this.defaultErrorReporter, this);
return input.getAstRoot(OPTIMIZE_LOOP_ERROR, this);
return input.getAstRoot(MOTION_ITERATIONS_ERROR, this);
return input.getAstRoot(COMPILER_STACK_SIZE, this);
return input.getAstRoot(logger, this);
return input.getAstRoot(this.outStream, this);
return input.getAstRoot(this.globalRefMap, this);
return input.getAstRoot(EMPTY_MODULE_LIST_ERROR, this);
return input.getAstRoot(EMPTY_ROOT_MODULE_ERROR, this);
return input.getAstRoot(DUPLICATE_INPUT, this);
return input.getAstRoot(DUPLICATE_EXTERN_INPUT, this);
return input.getAstRoot(this.sanityCheck, this);
return input.getAstRoot(this.currentTracer, this);
return input.getAstRoot(this.currentPassName, this);
return input.getAstRoot(this.syntheticCodeId, this);
return input.getAstRoot(this.recentChange, this);
return input.getAstRoot(this.codeChangeHandlers, this);
return input.getAstRoot(this, js);
return input.getAstRoot(this, MODULE_DEPENDENCY_ERROR);
return input.getAstRoot(this, MISSING_ENTRY_ERROR);
return input.getAstRoot(this, this.options);
return input.getAstRoot(this, this.passes);
return input.getAstRoot(this, this.externs);
return input.getAstRoot(this, this.modules);
return input.getAstRoot(this, this.moduleGraph);
return input.getAstRoot(this, this.inputs);
return input.getAstRoot(this, this.errorManager);
return input.getAstRoot(this, this.warningsGuard);
return input.getAstRoot(this, this.externsRoot);
return input.getAstRoot(this, this.jsRoot);
return input.getAstRoot(this, this.externAndJsRoot);
return input.getAstRoot(this, this.inputsById);
return input.getAstRoot(this, this.sourceMap);
return input.getAstRoot(this, this.externExports);
return input.getAstRoot(this, this.uniqueNameId);
return input.getAstRoot(this, this.useThreads);
return input.getAstRoot(this, this.hasRegExpGlobalReferences);
return input.getAstRoot(this, this.functionInformationMap);
return input.getAstRoot(this, this.debugLog);
return input.getAstRoot(this, this.defaultCodingConvention);
return input.getAstRoot(this, this.typeRegistry);
return input.getAstRoot(this, this.parserConfig);
return input.getAstRoot(this, this.abstractInterpreter);
return input.getAstRoot(this, this.typeValidator);
return input.getAstRoot(this, this.tracker);
return input.getAstRoot(this, this.oldErrorReporter);
return input.getAstRoot(this, this.defaultErrorReporter);
return input.getAstRoot(this, OPTIMIZE_LOOP_ERROR);
return input.getAstRoot(this, MOTION_ITERATIONS_ERROR);
return input.getAstRoot(this, COMPILER_STACK_SIZE);
return input.getAstRoot(this, logger);
return input.getAstRoot(this, this.outStream);
return input.getAstRoot(this, this.globalRefMap);
return input.getAstRoot(this, EMPTY_MODULE_LIST_ERROR);
return input.getAstRoot(this, EMPTY_ROOT_MODULE_ERROR);
return input.getAstRoot(this, DUPLICATE_INPUT);
return input.getAstRoot(this, DUPLICATE_EXTERN_INPUT);
return input.getAstRoot(this, this.sanityCheck);
return input.getAstRoot(this, this.currentTracer);
return input.getAstRoot(this, this.currentPassName);
return input.getAstRoot(this, this.syntheticCodeId);
return input.getAstRoot(this, this.recentChange);
return input.getAstRoot(this, this.codeChangeHandlers);
01:40:31.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:32.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:32.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:33.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:33.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:34.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:34.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:35.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:35.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:36.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:36.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:38.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:38.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:39.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:39.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:40.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:40.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:41.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:41.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:42.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:42.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:43.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:43.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:44.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:44.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:46.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:46.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:47.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:47.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:48.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:48.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:49.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:49.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:50.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:50.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:51.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:51.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:53.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:53.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:54.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:54.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:55.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:55.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:56.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:56.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:57.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:57.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:58.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:58.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:40:59.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:40:59.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:01.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:01.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:02.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:02.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:03.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:03.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:04.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:04.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:05.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:05.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:06.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:06.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:07.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:07.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:09.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:09.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:10.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:10.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:11.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:11.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:12.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:12.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:13.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:13.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:14.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:14.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:16.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:16.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:17.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:17.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:18.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:18.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:19.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:19.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:20.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:20.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:21.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:21.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:23.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:23.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:24.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:24.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:25.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:25.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:26.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:26.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:27.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:27.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:28.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:28.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:30.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:30.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:31.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:31.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:32.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:32.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:33.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:33.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:34.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:34.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:35.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:35.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:36.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:36.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:38.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:38.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:39.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:39.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:40.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:40.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:41.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:41.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:42.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:42.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:43.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:43.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:45.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:45.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:46.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:46.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:47.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:47.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:48.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:48.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:49.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:49.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:50.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:50.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:52.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:52.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:53.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:53.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:54.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:54.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:55.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:55.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:56.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:56.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:57.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:57.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:58.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:58.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:41:59.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:41:59.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:01.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:01.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:02.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:02.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:03.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:03.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:04.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:04.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:05.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:05.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:06.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:06.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:08.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:08.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:09.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:09.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:10.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:10.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:11.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:11.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:12.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:12.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:13.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:13.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:15.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:15.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:16.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:16.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:17.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return input.setCompiler(this);
01:42:17.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:18.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return createMessageFormatter().getAstRoot(this);
return compile().getAstRoot(this);
return getPassConfig().getAstRoot(this);
return createPassConfigInternal().getAstRoot(this);
return precheck().getAstRoot(this);
return getResult().getAstRoot(this);
return getMessages().getAstRoot(this);
return getErrors().getAstRoot(this);
return getWarnings().getAstRoot(this);
return getRoot().getAstRoot(this);
return nextUniqueNameId().getAstRoot(this);
return getUniqueNameIdSupplier().getAstRoot(this);
return getModuleGraph().getAstRoot(this);
return getTypeRegistry().getAstRoot(this);
return getTypedScopeCreator().getAstRoot(this);
return ensureDefaultPassConfig().getAstRoot(this);
return buildKnownSymbolTable().getAstRoot(this);
return getTopScope().getAstRoot(this);
return getReverseAbstractInterpreter().getAstRoot(this);
return getTypeValidator().getAstRoot(this);
return parseInputs().getAstRoot(this);
return newCompilerOptions().getAstRoot(this);
return getDefaultErrorReporter().getAstRoot(this);
return toSource().getAstRoot(this);
return toSourceArray().getAstRoot(this);
return getCssRenamingMap().getAstRoot(this);
return isInliningForbidden().getAstRoot(this);
return computeCFG().getAstRoot(this);
return getCodingConvention().getAstRoot(this);
return isIdeMode().getAstRoot(this);
return acceptEcmaScript5().getAstRoot(this);
return languageMode().getAstRoot(this);
return acceptConstKeyword().getAstRoot(this);
return getParserConfig().getAstRoot(this);
return isTypeCheckingEnabled().getAstRoot(this);
return getDiagnosticGroups().getAstRoot(this);
return getErrorCount().getAstRoot(this);
return getWarningCount().getAstRoot(this);
return hasHaltingErrors().getAstRoot(this);
return hasErrors().getAstRoot(this);
return getSourceMap().getAstRoot(this);
return getVariableMap().getAstRoot(this);
return getPropertyMap().getAstRoot(this);
return getOptions().getAstRoot(this);
return getFunctionalInformationMap().getAstRoot(this);
return getAstDotGraph().getAstRoot(this);
return getErrorManager().getAstRoot(this);
return getInputsInOrder().getAstRoot(this);
return getInputsById().getAstRoot(this);
return getExternsInOrder().getAstRoot(this);
return getState().getAstRoot(this);
return getInputsForTesting().getAstRoot(this);
return getExternsForTesting().getAstRoot(this);
return hasRegExpGlobalReferences().getAstRoot(this);
return getGlobalVarReferences().getAstRoot(this);
01:42:18.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:19.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:19.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:21.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:21.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:22.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:22.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:23.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:23.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:24.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:24.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:25.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:25.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:26.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:26.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:27.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:27.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:29.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:29.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:30.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:30.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:31.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:31.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:32.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:32.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:33.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:33.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:34.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:34.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:36.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:36.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:37.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:37.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:38.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:38.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:39.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:39.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:40.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:40.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:41.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:41.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:43.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:43.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:44.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:44.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:45.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:45.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:46.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:46.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:47.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:47.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:48.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:48.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:50.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:50.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:51.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:51.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:52.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:52.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:53.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:53.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:54.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:54.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:56.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:56.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:57.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:57.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:58.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:58.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:42:59.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:42:59.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:00.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:00.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:01.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:01.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:03.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:03.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:04.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:04.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:05.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:05.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:06.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:06.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:07.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:07.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:08.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:08.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:10.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:10.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:11.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:11.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:12.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:12.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:13.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:13.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:14.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:14.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:15.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:15.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:17.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:17.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:18.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:18.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:19.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:19.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:20.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:20.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:21.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:21.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:22.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return input.getAstRoot(true, this);
return input.getAstRoot(false, this);
return input.getAstRoot(this, true);
return input.getAstRoot(this, false);
01:43:22.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:24.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:24.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:25.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:25.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:26.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:26.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:27.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (input != null) {


}

01:43:27.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:28.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (input == null) {
    return null;
}

if (input == null) {
    throw new IllegalArgumentException("Empty variable: " + input);
}

01:43:28.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:29.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:29.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:31.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:43:31.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:32.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:32.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.Compiler ===1337
01:43:32.285 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
inputsById.put(input.getInputId(), input);
inputsById.put(true, input.getInputId(), input);
inputsById.put(false, input.getInputId(), input);
inputsById.put(input.getInputId(), true, input);
inputsById.put(input.getInputId(), false, input);
inputsById.put(input.getInputId(), input, true);
inputsById.put(input.getInputId(), input, false);
01:43:32.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:33.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:33.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:34.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:34.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:35.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:35.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:36.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:36.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:38.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:38.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:39.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
inputsById.put(js, input.getInputId(), input);
inputsById.put(MODULE_DEPENDENCY_ERROR, input.getInputId(), input);
inputsById.put(MISSING_ENTRY_ERROR, input.getInputId(), input);
inputsById.put(this.options, input.getInputId(), input);
inputsById.put(this.passes, input.getInputId(), input);
inputsById.put(this.externs, input.getInputId(), input);
inputsById.put(this.modules, input.getInputId(), input);
inputsById.put(this.moduleGraph, input.getInputId(), input);
inputsById.put(this.inputs, input.getInputId(), input);
inputsById.put(this.errorManager, input.getInputId(), input);
inputsById.put(this.warningsGuard, input.getInputId(), input);
inputsById.put(this.externsRoot, input.getInputId(), input);
inputsById.put(this.jsRoot, input.getInputId(), input);
inputsById.put(this.externAndJsRoot, input.getInputId(), input);
inputsById.put(this.sourceMap, input.getInputId(), input);
inputsById.put(this.externExports, input.getInputId(), input);
inputsById.put(this.uniqueNameId, input.getInputId(), input);
inputsById.put(this.useThreads, input.getInputId(), input);
inputsById.put(this.hasRegExpGlobalReferences, input.getInputId(), input);
inputsById.put(this.functionInformationMap, input.getInputId(), input);
inputsById.put(this.debugLog, input.getInputId(), input);
inputsById.put(this.defaultCodingConvention, input.getInputId(), input);
inputsById.put(this.typeRegistry, input.getInputId(), input);
inputsById.put(this.parserConfig, input.getInputId(), input);
inputsById.put(this.abstractInterpreter, input.getInputId(), input);
inputsById.put(this.typeValidator, input.getInputId(), input);
inputsById.put(this.tracker, input.getInputId(), input);
inputsById.put(this.oldErrorReporter, input.getInputId(), input);
inputsById.put(this.defaultErrorReporter, input.getInputId(), input);
inputsById.put(OPTIMIZE_LOOP_ERROR, input.getInputId(), input);
inputsById.put(MOTION_ITERATIONS_ERROR, input.getInputId(), input);
inputsById.put(COMPILER_STACK_SIZE, input.getInputId(), input);
inputsById.put(logger, input.getInputId(), input);
inputsById.put(this.outStream, input.getInputId(), input);
inputsById.put(this.globalRefMap, input.getInputId(), input);
inputsById.put(EMPTY_MODULE_LIST_ERROR, input.getInputId(), input);
inputsById.put(EMPTY_ROOT_MODULE_ERROR, input.getInputId(), input);
inputsById.put(DUPLICATE_INPUT, input.getInputId(), input);
inputsById.put(DUPLICATE_EXTERN_INPUT, input.getInputId(), input);
inputsById.put(this.sanityCheck, input.getInputId(), input);
inputsById.put(this.currentTracer, input.getInputId(), input);
inputsById.put(this.currentPassName, input.getInputId(), input);
inputsById.put(this.syntheticCodeId, input.getInputId(), input);
inputsById.put(this.recentChange, input.getInputId(), input);
inputsById.put(this.codeChangeHandlers, input.getInputId(), input);
inputsById.put(input.getInputId(), js);
inputsById.put(input.getInputId(), MODULE_DEPENDENCY_ERROR);
inputsById.put(input.getInputId(), MISSING_ENTRY_ERROR);
inputsById.put(input.getInputId(), this.options);
inputsById.put(input.getInputId(), this.passes);
inputsById.put(input.getInputId(), this.externs);
inputsById.put(input.getInputId(), this.modules);
inputsById.put(input.getInputId(), this.moduleGraph);
inputsById.put(input.getInputId(), this.inputs);
inputsById.put(input.getInputId(), this.errorManager);
inputsById.put(input.getInputId(), this.warningsGuard);
inputsById.put(input.getInputId(), this.externsRoot);
inputsById.put(input.getInputId(), this.jsRoot);
inputsById.put(input.getInputId(), this.externAndJsRoot);
inputsById.put(input.getInputId(), this.sourceMap);
inputsById.put(input.getInputId(), this.externExports);
inputsById.put(input.getInputId(), this.uniqueNameId);
inputsById.put(input.getInputId(), this.useThreads);
inputsById.put(input.getInputId(), this.hasRegExpGlobalReferences);
inputsById.put(input.getInputId(), this.functionInformationMap);
inputsById.put(input.getInputId(), this.debugLog);
inputsById.put(input.getInputId(), this.defaultCodingConvention);
inputsById.put(input.getInputId(), this.typeRegistry);
inputsById.put(input.getInputId(), this.parserConfig);
inputsById.put(input.getInputId(), this.abstractInterpreter);
inputsById.put(input.getInputId(), this.typeValidator);
inputsById.put(input.getInputId(), this.tracker);
inputsById.put(input.getInputId(), this.oldErrorReporter);
inputsById.put(input.getInputId(), this.defaultErrorReporter);
inputsById.put(input.getInputId(), OPTIMIZE_LOOP_ERROR);
inputsById.put(input.getInputId(), MOTION_ITERATIONS_ERROR);
inputsById.put(input.getInputId(), COMPILER_STACK_SIZE);
inputsById.put(input.getInputId(), logger);
inputsById.put(input.getInputId(), this.outStream);
inputsById.put(input.getInputId(), this.globalRefMap);
inputsById.put(input.getInputId(), EMPTY_MODULE_LIST_ERROR);
inputsById.put(input.getInputId(), EMPTY_ROOT_MODULE_ERROR);
inputsById.put(input.getInputId(), DUPLICATE_INPUT);
inputsById.put(input.getInputId(), DUPLICATE_EXTERN_INPUT);
inputsById.put(input.getInputId(), this.sanityCheck);
inputsById.put(input.getInputId(), this.currentTracer);
inputsById.put(input.getInputId(), this.currentPassName);
inputsById.put(input.getInputId(), this.syntheticCodeId);
inputsById.put(input.getInputId(), this.recentChange);
inputsById.put(input.getInputId(), this.codeChangeHandlers);
inputsById.put(input.getInputId(), );
inputsById.put(input.getInputId(), js, input);
inputsById.put(input.getInputId(), MODULE_DEPENDENCY_ERROR, input);
inputsById.put(input.getInputId(), MISSING_ENTRY_ERROR, input);
inputsById.put(input.getInputId(), this.options, input);
inputsById.put(input.getInputId(), this.passes, input);
inputsById.put(input.getInputId(), this.externs, input);
inputsById.put(input.getInputId(), this.modules, input);
inputsById.put(input.getInputId(), this.moduleGraph, input);
inputsById.put(input.getInputId(), this.inputs, input);
inputsById.put(input.getInputId(), this.errorManager, input);
inputsById.put(input.getInputId(), this.warningsGuard, input);
inputsById.put(input.getInputId(), this.externsRoot, input);
inputsById.put(input.getInputId(), this.jsRoot, input);
inputsById.put(input.getInputId(), this.externAndJsRoot, input);
inputsById.put(input.getInputId(), this.sourceMap, input);
inputsById.put(input.getInputId(), this.externExports, input);
inputsById.put(input.getInputId(), this.uniqueNameId, input);
inputsById.put(input.getInputId(), this.useThreads, input);
inputsById.put(input.getInputId(), this.hasRegExpGlobalReferences, input);
inputsById.put(input.getInputId(), this.functionInformationMap, input);
inputsById.put(input.getInputId(), this.debugLog, input);
inputsById.put(input.getInputId(), this.defaultCodingConvention, input);
inputsById.put(input.getInputId(), this.typeRegistry, input);
inputsById.put(input.getInputId(), this.parserConfig, input);
inputsById.put(input.getInputId(), this.abstractInterpreter, input);
inputsById.put(input.getInputId(), this.typeValidator, input);
inputsById.put(input.getInputId(), this.tracker, input);
inputsById.put(input.getInputId(), this.oldErrorReporter, input);
inputsById.put(input.getInputId(), this.defaultErrorReporter, input);
inputsById.put(input.getInputId(), OPTIMIZE_LOOP_ERROR, input);
inputsById.put(input.getInputId(), MOTION_ITERATIONS_ERROR, input);
inputsById.put(input.getInputId(), COMPILER_STACK_SIZE, input);
inputsById.put(input.getInputId(), logger, input);
inputsById.put(input.getInputId(), this.outStream, input);
inputsById.put(input.getInputId(), this.globalRefMap, input);
inputsById.put(input.getInputId(), EMPTY_MODULE_LIST_ERROR, input);
inputsById.put(input.getInputId(), EMPTY_ROOT_MODULE_ERROR, input);
inputsById.put(input.getInputId(), DUPLICATE_INPUT, input);
inputsById.put(input.getInputId(), DUPLICATE_EXTERN_INPUT, input);
inputsById.put(input.getInputId(), this.sanityCheck, input);
inputsById.put(input.getInputId(), this.currentTracer, input);
inputsById.put(input.getInputId(), this.currentPassName, input);
inputsById.put(input.getInputId(), this.syntheticCodeId, input);
inputsById.put(input.getInputId(), this.recentChange, input);
inputsById.put(input.getInputId(), this.codeChangeHandlers, input);
inputsById.put(input.getInputId(), input, js);
inputsById.put(input.getInputId(), input, MODULE_DEPENDENCY_ERROR);
inputsById.put(input.getInputId(), input, MISSING_ENTRY_ERROR);
inputsById.put(input.getInputId(), input, this.options);
inputsById.put(input.getInputId(), input, this.passes);
inputsById.put(input.getInputId(), input, this.externs);
inputsById.put(input.getInputId(), input, this.modules);
inputsById.put(input.getInputId(), input, this.moduleGraph);
inputsById.put(input.getInputId(), input, this.inputs);
inputsById.put(input.getInputId(), input, this.errorManager);
inputsById.put(input.getInputId(), input, this.warningsGuard);
inputsById.put(input.getInputId(), input, this.externsRoot);
inputsById.put(input.getInputId(), input, this.jsRoot);
inputsById.put(input.getInputId(), input, this.externAndJsRoot);
inputsById.put(input.getInputId(), input, this.sourceMap);
inputsById.put(input.getInputId(), input, this.externExports);
inputsById.put(input.getInputId(), input, this.uniqueNameId);
inputsById.put(input.getInputId(), input, this.useThreads);
inputsById.put(input.getInputId(), input, this.hasRegExpGlobalReferences);
inputsById.put(input.getInputId(), input, this.functionInformationMap);
inputsById.put(input.getInputId(), input, this.debugLog);
inputsById.put(input.getInputId(), input, this.defaultCodingConvention);
inputsById.put(input.getInputId(), input, this.typeRegistry);
inputsById.put(input.getInputId(), input, this.parserConfig);
inputsById.put(input.getInputId(), input, this.abstractInterpreter);
inputsById.put(input.getInputId(), input, this.typeValidator);
inputsById.put(input.getInputId(), input, this.tracker);
inputsById.put(input.getInputId(), input, this.oldErrorReporter);
inputsById.put(input.getInputId(), input, this.defaultErrorReporter);
inputsById.put(input.getInputId(), input, OPTIMIZE_LOOP_ERROR);
inputsById.put(input.getInputId(), input, MOTION_ITERATIONS_ERROR);
inputsById.put(input.getInputId(), input, COMPILER_STACK_SIZE);
inputsById.put(input.getInputId(), input, logger);
inputsById.put(input.getInputId(), input, this.outStream);
inputsById.put(input.getInputId(), input, this.globalRefMap);
inputsById.put(input.getInputId(), input, EMPTY_MODULE_LIST_ERROR);
inputsById.put(input.getInputId(), input, EMPTY_ROOT_MODULE_ERROR);
inputsById.put(input.getInputId(), input, DUPLICATE_INPUT);
inputsById.put(input.getInputId(), input, DUPLICATE_EXTERN_INPUT);
inputsById.put(input.getInputId(), input, this.sanityCheck);
inputsById.put(input.getInputId(), input, this.currentTracer);
inputsById.put(input.getInputId(), input, this.currentPassName);
inputsById.put(input.getInputId(), input, this.syntheticCodeId);
inputsById.put(input.getInputId(), input, this.recentChange);
inputsById.put(input.getInputId(), input, this.codeChangeHandlers);
01:43:39.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:40.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:40.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:41.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:41.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:42.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:42.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:43.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:43.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:45.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:45.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:46.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:46.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:47.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:47.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:48.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:48.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:49.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:49.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:50.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:50.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:51.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:52.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:53.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:53.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:54.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:54.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:55.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:55.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:56.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:56.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:57.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:57.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:58.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:43:58.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:00.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:00.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:01.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:01.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:02.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:02.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:03.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:03.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:04.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:04.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:05.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:05.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:07.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:07.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:08.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:08.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:09.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:09.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:10.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:10.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:11.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:11.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:12.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:12.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:14.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:14.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:15.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:15.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:16.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:16.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:17.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:17.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:18.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:18.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:19.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:19.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:21.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:21.132 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:22.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:22.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:23.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:23.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:24.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:24.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:25.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:25.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:26.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:26.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:28.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:28.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:29.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:29.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:30.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:30.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:31.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:31.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:32.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:32.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:33.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:33.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:35.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:35.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:36.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:36.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:37.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:37.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:38.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:38.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:39.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:39.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:40.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:40.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:42.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:42.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:43.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:43.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:44.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:44.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:45.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:45.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:46.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:46.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:47.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:47.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:48.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:48.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:50.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:50.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:51.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:51.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:52.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:52.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:53.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:53.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:54.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:54.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:55.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:55.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:57.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:57.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:58.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:58.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:44:59.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:44:59.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:00.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:00.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:01.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:01.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:02.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:02.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:04.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:04.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:05.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:05.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:06.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:06.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:07.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:07.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:08.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:08.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:09.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:09.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:10.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:10.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:12.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:12.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:13.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:13.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:14.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:14.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:15.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:15.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:16.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:16.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:18.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:18.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:19.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:19.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:20.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:20.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:21.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:21.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:22.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:22.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:23.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:23.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:24.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:24.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:25.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:25.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:26.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:26.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:27.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:27.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:28.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:28.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:30.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:30.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:31.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:31.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:32.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:32.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:33.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:33.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:34.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:34.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:35.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:35.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:37.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:37.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:38.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:38.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:39.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:39.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:40.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:40.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:41.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:41.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:42.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:42.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:43.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:43.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:45.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:45.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:46.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:46.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:47.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:47.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:48.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:48.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:49.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:49.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:50.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:50.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:52.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:52.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:53.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:53.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:54.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:54.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:55.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:55.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:56.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:56.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:57.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:57.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:58.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:58.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:45:59.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:45:59.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:01.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:01.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:02.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:02.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:03.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:03.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:04.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:04.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:05.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:05.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:06.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:06.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:08.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:08.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:09.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:09.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:10.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:10.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:11.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:11.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:12.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:12.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:13.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:13.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:15.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:15.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:16.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:16.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:17.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:17.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:18.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:18.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:19.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:19.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:20.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:20.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:22.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:22.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:23.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:23.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:24.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:24.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:25.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:25.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:26.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:26.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:27.928 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:27.928 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:29.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:29.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:30.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:30.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:31.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:31.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:32.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:32.546 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:33.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:33.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:34.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:34.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:35.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:35.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:37.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:37.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:38.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:38.271 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:39.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:39.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:40.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:40.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:41.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:41.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:42.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:42.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:43.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:43.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:45.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:45.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:46.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:46.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:47.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:47.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:48.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:48.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:49.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:49.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:50.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:50.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:51.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:51.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:53.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:53.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:54.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:54.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:55.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:55.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:56.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:56.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:57.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:57.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:58.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:58.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:59.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:46:59.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:01.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:01.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:02.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:02.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:03.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:03.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:04.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:04.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:05.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:05.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:06.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:06.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:08.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (inputsById != null) {


}

if (input != null) {


}

if (input != null) {


}

01:47:08.062 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:09.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:09.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:10.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:10.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:11.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (inputsById == null) {
    return null;
}

if (inputsById == null) {
    throw new IllegalArgumentException("Empty variable: " + inputsById);
}

if (input == null) {
    return null;
}

if (input == null) {
    throw new IllegalArgumentException("Empty variable: " + input);
}

if (input == null) {
    return null;
}

if (input == null) {
    throw new IllegalArgumentException("Empty variable: " + input);
}

01:47:11.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:12.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:12.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:13.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:13.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:15.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:15.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:16.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:16.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:17.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:17.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:18.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
inputsById.put(input.getInputId(), input);
	initCompilerOptionsIfTesting();
    CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
    if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
    
null
inputsById.put(input.getInputId(), input);
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
    if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
    
null
inputsById.put(input.getInputId(), input);
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
    
null

    return input.getAstRoot(this);
	inputsById.put(input.getInputId(), input);

MOVE-BUGGY-STATEMENT
01:47:18.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:19.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:19.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:20.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:20.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:22.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:22.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:23.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:47:23.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:24.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:24.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.Compiler ===1334
01:47:24.498 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById != null) {
      inputsById = Maps.newHashMap();
    }
01:47:24.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:25.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (inputsById != null) {


}

01:47:25.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:26.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (inputsById == null) {
    return null;
}

if (inputsById == null) {
    throw new IllegalArgumentException("Empty variable: " + inputsById);
}

01:47:26.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:27.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:27.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:29.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
initBasedOnOptions();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	initBasedOnOptions();
rebuildInputsFromModules();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	rebuildInputsFromModules();
initInputsByIdMap();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	initInputsByIdMap();
disableThreads();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	disableThreads();
compileInternal();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	compileInternal();
parse();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	parse();
check();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	check();
externExports();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	externExports();
maybeSanityCheck();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	maybeSanityCheck();
runSanityCheck();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	runSanityCheck();
removeTryCatchFinally();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	removeTryCatchFinally();
endPass();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	endPass();
resetUniqueNameId();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	resetUniqueNameId();
initCompilerOptionsIfTesting();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	initCompilerOptionsIfTesting();
optimize();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	optimize();
processDefines();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	processDefines();
normalize();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	normalize();
recordFunctionInformation();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	recordFunctionInformation();
reportCodeChange();
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	reportCodeChange();
01:47:29.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:30.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:30.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:31.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:31.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:32.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:32.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:33.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:33.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:34.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:34.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:36.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:36.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:37.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:37.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:38.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:38.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:39.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:39.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:40.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:40.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:41.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:41.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:42.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:42.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:44.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:44.023 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:45.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:45.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:46.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:46.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:47.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:47.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:48.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:48.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:49.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:49.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:50.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:50.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:51.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:51.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:53.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:53.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:54.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:54.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:55.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:55.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:56.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:56.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:57.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:57.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:58.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:58.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:47:59.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:47:59.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:01.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:01.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:02.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:02.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:03.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:03.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:04.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:04.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:05.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:05.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:06.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:06.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:08.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:08.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:09.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:09.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:10.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:10.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:11.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:11.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:12.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	initCompilerOptionsIfTesting();
    CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
    
null
if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
    
null

    inputsById.put(input.getInputId(), input);
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }

MOVE-BUGGY-STATEMENT

    inputsById.put(input.getInputId(), input);
    return input.getAstRoot(this);
	if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }

MOVE-BUGGY-STATEMENT
01:48:12.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:13.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:13.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:15.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:15.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:16.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:16.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:17.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:48:17.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:18.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:18.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.Compiler ===1332
01:48:18.682 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
if (js != null) {


}

01:48:18.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:19.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (js == null) {
    return null;
}

if (js == null) {
    throw new IllegalArgumentException("Empty variable: " + js);
}

01:48:19.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:21.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:21.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:22.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
initBasedOnOptions();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	initBasedOnOptions();
rebuildInputsFromModules();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	rebuildInputsFromModules();
initInputsByIdMap();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	initInputsByIdMap();
disableThreads();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	disableThreads();
compileInternal();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	compileInternal();
parse();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	parse();
check();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	check();
externExports();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	externExports();
maybeSanityCheck();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	maybeSanityCheck();
runSanityCheck();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	runSanityCheck();
removeTryCatchFinally();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	removeTryCatchFinally();
endPass();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	endPass();
resetUniqueNameId();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	resetUniqueNameId();
initCompilerOptionsIfTesting();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	initCompilerOptionsIfTesting();
optimize();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	optimize();
processDefines();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	processDefines();
normalize();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	normalize();
recordFunctionInformation();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	recordFunctionInformation();
reportCodeChange();
	CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	reportCodeChange();
01:48:22.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:23.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:23.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:24.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:24.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:25.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:25.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:26.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:26.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:27.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:27.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:29.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:29.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:30.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:30.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:31.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:31.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:32.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:32.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:33.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:33.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:34.897 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:34.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:36.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:36.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:37.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:37.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:38.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:38.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:39.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:39.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:40.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:40.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:41.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:41.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:42.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:42.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:44.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:44.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:45.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:45.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:46.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:46.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:47.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:47.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:48.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:48.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:49.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:49.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:50.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:50.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:52.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:52.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:53.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:53.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:54.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:54.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:55.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:55.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:56.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:56.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:58.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:58.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:48:59.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:48:59.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:00.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:00.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:01.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:01.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:02.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:02.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:03.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:03.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:05.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:05.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:06.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:49:06.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:07.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:07.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.Compiler ===1331
01:49:07.473 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
initCompilerOptionsIfTesting();
initCompilerOptionsIfTesting(true);
initCompilerOptionsIfTesting(false);
01:49:07.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:08.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:08.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:09.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
initCompilerOptionsIfTesting(js);
initCompilerOptionsIfTesting(MODULE_DEPENDENCY_ERROR);
initCompilerOptionsIfTesting(MISSING_ENTRY_ERROR);
initCompilerOptionsIfTesting(this.options);
initCompilerOptionsIfTesting(this.passes);
initCompilerOptionsIfTesting(this.externs);
initCompilerOptionsIfTesting(this.modules);
initCompilerOptionsIfTesting(this.moduleGraph);
initCompilerOptionsIfTesting(this.inputs);
initCompilerOptionsIfTesting(this.errorManager);
initCompilerOptionsIfTesting(this.warningsGuard);
initCompilerOptionsIfTesting(this.externsRoot);
initCompilerOptionsIfTesting(this.jsRoot);
initCompilerOptionsIfTesting(this.externAndJsRoot);
initCompilerOptionsIfTesting(this.inputsById);
initCompilerOptionsIfTesting(this.sourceMap);
initCompilerOptionsIfTesting(this.externExports);
initCompilerOptionsIfTesting(this.uniqueNameId);
initCompilerOptionsIfTesting(this.useThreads);
initCompilerOptionsIfTesting(this.hasRegExpGlobalReferences);
initCompilerOptionsIfTesting(this.functionInformationMap);
initCompilerOptionsIfTesting(this.debugLog);
initCompilerOptionsIfTesting(this.defaultCodingConvention);
initCompilerOptionsIfTesting(this.typeRegistry);
initCompilerOptionsIfTesting(this.parserConfig);
initCompilerOptionsIfTesting(this.abstractInterpreter);
initCompilerOptionsIfTesting(this.typeValidator);
initCompilerOptionsIfTesting(this.tracker);
initCompilerOptionsIfTesting(this.oldErrorReporter);
initCompilerOptionsIfTesting(this.defaultErrorReporter);
initCompilerOptionsIfTesting(OPTIMIZE_LOOP_ERROR);
initCompilerOptionsIfTesting(MOTION_ITERATIONS_ERROR);
initCompilerOptionsIfTesting(COMPILER_STACK_SIZE);
initCompilerOptionsIfTesting(logger);
initCompilerOptionsIfTesting(this.outStream);
initCompilerOptionsIfTesting(this.globalRefMap);
initCompilerOptionsIfTesting(EMPTY_MODULE_LIST_ERROR);
initCompilerOptionsIfTesting(EMPTY_ROOT_MODULE_ERROR);
initCompilerOptionsIfTesting(DUPLICATE_INPUT);
initCompilerOptionsIfTesting(DUPLICATE_EXTERN_INPUT);
initCompilerOptionsIfTesting(this.sanityCheck);
initCompilerOptionsIfTesting(this.currentTracer);
initCompilerOptionsIfTesting(this.currentPassName);
initCompilerOptionsIfTesting(this.syntheticCodeId);
initCompilerOptionsIfTesting(this.recentChange);
initCompilerOptionsIfTesting(this.codeChangeHandlers);
01:49:09.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:10.945 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:10.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:12.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:12.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:13.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:13.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:14.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:14.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:15.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:15.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:16.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:16.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:17.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:17.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:19.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:19.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:20.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:20.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:21.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:21.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:22.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:22.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:23.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:23.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:24.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:24.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:26.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:26.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:27.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:27.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:28.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:28.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:29.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:29.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:30.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:30.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:32.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:32.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:33.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:33.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:34.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:34.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:35.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:35.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:36.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:36.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:37.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:37.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:39.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:39.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:40.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:40.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:41.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:41.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:42.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:42.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:43.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:43.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:44.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:44.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:46.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:46.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:47.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:47.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:48.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:48.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:49.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:49.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:50.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:50.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:51.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:51.666 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:52.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:52.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:53.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:53.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:55.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:55.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:56.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:56.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:57.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:57.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:58.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:58.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:49:59.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:49:59.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:00.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:00.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:01.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:01.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:02.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
getParserConfig();
getTypedScopeCreator();
createMessageFormatter();
getDiagnosticGroups();
getReverseAbstractInterpreter();
getState();
computeCFG();
getErrorManager();
getCssRenamingMap();
getVariableMap();
getPropertyMap();
precheck();
isInliningForbidden();
isIdeMode();
acceptEcmaScript5();
acceptConstKeyword();
isTypeCheckingEnabled();
hasHaltingErrors();
hasErrors();
hasRegExpGlobalReferences();
getInputsInOrder();
getExternsInOrder();
getInputsForTesting();
getExternsForTesting();
getGlobalVarReferences();
languageMode();
getTopScope();
newCompilerOptions();
getOptions();
compile();
getResult();
getSourceMap();
getModuleGraph();
getInputsById();
nextUniqueNameId();
getErrorCount();
getWarningCount();
initBasedOnOptions();
rebuildInputsFromModules();
initInputsByIdMap();
disableThreads();
compileInternal();
parse();
check();
externExports();
maybeSanityCheck();
runSanityCheck();
removeTryCatchFinally();
endPass();
resetUniqueNameId();
optimize();
processDefines();
normalize();
recordFunctionInformation();
reportCodeChange();
getDefaultErrorReporter();
getCodingConvention();
getFunctionalInformationMap();
getUniqueNameIdSupplier();
getRoot();
parseInputs();
getMessages();
getErrors();
getWarnings();
toSourceArray();
ensureDefaultPassConfig();
toSource();
getAstDotGraph();
getTypeRegistry();
getPassConfig();
createPassConfigInternal();
getTypeValidator();
buildKnownSymbolTable();
01:50:02.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:04.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:04.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:05.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:05.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:06.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:06.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:07.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:07.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:08.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:08.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:09.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:09.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:10.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:10.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:12.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:12.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:13.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:13.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:14.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:14.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:15.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:15.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:16.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:16.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:17.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:17.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:19.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:19.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:20.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:20.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:21.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:21.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:22.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:22.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:23.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:23.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:24.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:24.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:26.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:26.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:27.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:27.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:28.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:28.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:29.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:29.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:30.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:30.753 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:31.897 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:31.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:33.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:33.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:34.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:34.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:35.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:35.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:36.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:36.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:37.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:37.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:38.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:38.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:39.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:39.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:41.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:41.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:42.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:42.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:43.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:43.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:44.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:44.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:45.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:45.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:46.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:46.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:47.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:47.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:49.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:49.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:50.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:50.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:51.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:51.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:52.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:52.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:53.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:53.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:54.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:54.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:56.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:56.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:57.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:57.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:58.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:58.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:50:59.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:50:59.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:00.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:00.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:01.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:01.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:03.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:03.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:04.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:04.277 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:05.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:05.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:06.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:06.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:07.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:07.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:08.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:08.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:10.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:10.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:11.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:11.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:12.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:12.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:13.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:13.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:14.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:14.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:15.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:15.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:17.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:17.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:18.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:18.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:19.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:19.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:20.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:20.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:21.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:21.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:22.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:22.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:24.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:24.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:25.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:25.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:26.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:26.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:27.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

    CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
	initCompilerOptionsIfTesting();

MOVE-BUGGY-STATEMENT

    CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
    if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
	initCompilerOptionsIfTesting();

MOVE-BUGGY-STATEMENT

    CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
    if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
    inputsById.put(input.getInputId(), input);
	initCompilerOptionsIfTesting();

MOVE-BUGGY-STATEMENT

    CompilerInput input = new CompilerInput(
        JSSourceFile.fromCode(" [testcode] ", js));
    if (inputsById == null) {
      inputsById = Maps.newHashMap();
    }
    inputsById.put(input.getInputId(), input);
    return input.getAstRoot(this);
	initCompilerOptionsIfTesting();

MOVE-BUGGY-STATEMENT
01:51:27.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:28.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:28.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:29.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:29.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:31.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:31.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:32.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:51:32.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:33.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:33.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.Compiler ===250
01:51:33.341 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          true, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          false, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          true, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          false, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, true);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, false);
01:51:33.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:34.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:34.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:35.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:35.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:36.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:36.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:37.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:37.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:39.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:39.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:40.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
options.setWarningLevel(
          MODULE_DEPENDENCY_ERROR, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          MISSING_ENTRY_ERROR, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.passes, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.externs, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.modules, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.moduleGraph, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.inputs, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.errorManager, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.warningsGuard, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.externsRoot, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.jsRoot, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.externAndJsRoot, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.inputsById, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.sourceMap, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.externExports, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.uniqueNameId, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.useThreads, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.hasRegExpGlobalReferences, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.functionInformationMap, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.debugLog, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.defaultCodingConvention, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.typeRegistry, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.parserConfig, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.abstractInterpreter, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.typeValidator, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.tracker, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.oldErrorReporter, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.defaultErrorReporter, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          OPTIMIZE_LOOP_ERROR, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          MOTION_ITERATIONS_ERROR, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          COMPILER_STACK_SIZE, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          logger, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.outStream, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.globalRefMap, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          EMPTY_MODULE_LIST_ERROR, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          EMPTY_ROOT_MODULE_ERROR, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          DUPLICATE_INPUT, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          DUPLICATE_EXTERN_INPUT, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.sanityCheck, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.currentTracer, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.currentPassName, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.syntheticCodeId, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.recentChange, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          this.codeChangeHandlers, DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          MODULE_DEPENDENCY_ERROR, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          MISSING_ENTRY_ERROR, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.passes, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.externs, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.modules, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.moduleGraph, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.inputs, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.errorManager, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.warningsGuard, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.externsRoot, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.jsRoot, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.externAndJsRoot, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.inputsById, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.sourceMap, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.externExports, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.uniqueNameId, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.useThreads, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.hasRegExpGlobalReferences, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.functionInformationMap, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.debugLog, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.defaultCodingConvention, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.typeRegistry, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.parserConfig, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.abstractInterpreter, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.typeValidator, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.tracker, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.oldErrorReporter, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.defaultErrorReporter, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          OPTIMIZE_LOOP_ERROR, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          MOTION_ITERATIONS_ERROR, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          COMPILER_STACK_SIZE, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          logger, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.outStream, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.globalRefMap, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          EMPTY_MODULE_LIST_ERROR, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          EMPTY_ROOT_MODULE_ERROR, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          DUPLICATE_INPUT, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          DUPLICATE_EXTERN_INPUT, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.sanityCheck, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.currentTracer, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.currentPassName, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.syntheticCodeId, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.recentChange, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          this.codeChangeHandlers, CheckLevel.OFF);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, MODULE_DEPENDENCY_ERROR);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, MISSING_ENTRY_ERROR);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.passes);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.externs);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.modules);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.moduleGraph);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.inputs);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.errorManager);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.warningsGuard);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.externsRoot);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.jsRoot);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.externAndJsRoot);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.inputsById);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.sourceMap);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.externExports);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.uniqueNameId);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.useThreads);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.hasRegExpGlobalReferences);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.functionInformationMap);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.debugLog);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.defaultCodingConvention);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.typeRegistry);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.parserConfig);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.abstractInterpreter);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.typeValidator);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.tracker);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.oldErrorReporter);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.defaultErrorReporter);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, OPTIMIZE_LOOP_ERROR);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, MOTION_ITERATIONS_ERROR);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, COMPILER_STACK_SIZE);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, logger);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.outStream);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.globalRefMap);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, EMPTY_MODULE_LIST_ERROR);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, EMPTY_ROOT_MODULE_ERROR);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, DUPLICATE_INPUT);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, DUPLICATE_EXTERN_INPUT);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.sanityCheck);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.currentTracer);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.currentPassName);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.syntheticCodeId);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.recentChange);
options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF, this.codeChangeHandlers);
01:51:40.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:41.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:41.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:42.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:42.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:43.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:43.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:44.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:44.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:45.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:45.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:46.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:46.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:48.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:48.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:49.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:49.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:50.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:50.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:51.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:51.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:52.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:52.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:53.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:53.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:55.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:55.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:56.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:56.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:57.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:57.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:58.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:58.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:51:59.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:51:59.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:00.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:00.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:02.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:02.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:03.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:03.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:04.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:04.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:05.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:05.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:06.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:06.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:07.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:07.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:08.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:08.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:10.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:10.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:11.318 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:11.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:12.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:12.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:13.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:13.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:14.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:14.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:16.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:16.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:17.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:17.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:18.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:18.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:19.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:19.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:20.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:20.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:21.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:21.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:23.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:23.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:24.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:24.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:25.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:25.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:26.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:26.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:27.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:27.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:28.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:28.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:30.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:30.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:31.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:31.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:32.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:32.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:33.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:33.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:34.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:34.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:35.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:35.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:36.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:36.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:38.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:38.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:39.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:39.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:40.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:40.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:41.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:41.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:42.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:42.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:43.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:43.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:44.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:44.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:46.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:46.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:47.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:47.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:48.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:48.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:49.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:49.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:50.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:50.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:52.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:52.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:53.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:53.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:54.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:54.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:55.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:55.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:56.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:56.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:57.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:57.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:52:59.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:52:59.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:00.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:00.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:01.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:01.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:02.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:02.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:03.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:03.753 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:04.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:04.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:06.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:06.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:07.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:07.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:08.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:08.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:09.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:09.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:10.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:10.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:11.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:11.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:13.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:13.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:14.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:14.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:15.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:15.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:16.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:16.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:17.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:17.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:19.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:19.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:20.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:20.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:21.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:21.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:22.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:22.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:23.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:23.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:24.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:24.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:25.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:25.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:27.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:27.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:28.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:28.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:29.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:29.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:30.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:30.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:31.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:31.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:32.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:32.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:34.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:34.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:35.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:35.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:36.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:36.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:37.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:37.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:38.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:38.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:39.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:39.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:41.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:41.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:42.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:42.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:43.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:43.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:44.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:44.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:45.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:45.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:46.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:46.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:47.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:47.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:48.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:48.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:50.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:50.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:51.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:51.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:52.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:52.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:53.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:53.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:54.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:54.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:55.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:55.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:56.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:56.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:58.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:58.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:53:59.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:53:59.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:00.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:00.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:01.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:01.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:02.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:02.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:03.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:03.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:05.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:05.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:06.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:06.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:07.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:07.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:08.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:08.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:09.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:09.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:10.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:10.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:12.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:12.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:13.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
options.setDefineToBooleanLiteral(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setDefineToStringLiteral(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setDefineToNumberLiteral(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setDefineToDoubleLiteral(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setTweakToBooleanLiteral(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setTweakToStringLiteral(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setTweakToNumberLiteral(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setTweakToDoubleLiteral(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setRenamingPolicy(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
options.setReplaceStringsConfiguration(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
01:54:13.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:14.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:14.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:15.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:15.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:16.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:16.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:18.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:18.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:19.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:19.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:20.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:20.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:21.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:21.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:22.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:22.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:24.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:24.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:25.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (options != null) {


}

01:54:25.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:26.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (options == null) {
    return;
}

if (options == null) {
    throw new IllegalArgumentException("Empty variable: " + options);
}

01:54:26.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:27.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:27.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:28.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:54:28.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:29.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:29.947 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.Compiler ===246
01:54:30.007 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
initOptions(options);
initOptions(options);
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	initOptions(options);
initBasedOnOptions();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	initBasedOnOptions();
rebuildInputsFromModules();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	rebuildInputsFromModules();
initInputsByIdMap();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	initInputsByIdMap();
disableThreads();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	disableThreads();
compileInternal();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	compileInternal();
parse();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	parse();
check();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	check();
externExports();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	externExports();
maybeSanityCheck();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	maybeSanityCheck();
runSanityCheck();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	runSanityCheck();
removeTryCatchFinally();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	removeTryCatchFinally();
endPass();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	endPass();
resetUniqueNameId();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	resetUniqueNameId();
initCompilerOptionsIfTesting();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	initCompilerOptionsIfTesting();
optimize();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	optimize();
processDefines();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	processDefines();
normalize();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	normalize();
recordFunctionInformation();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	recordFunctionInformation();
reportCodeChange();
	if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	reportCodeChange();
01:54:30.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:31.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:31.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:32.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:32.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:33.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:33.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:34.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:34.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:35.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:35.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:36.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:36.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:38.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:38.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:39.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:39.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:40.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:40.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:41.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:41.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:42.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:42.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:43.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:43.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:44.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:44.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:46.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:46.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:47.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:47.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:48.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:48.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:49.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:49.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:50.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:50.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:51.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:51.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:52.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:52.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:54.109 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:54.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:55.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:55.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:56.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:56.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:57.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:57.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:58.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:58.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:54:59.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:54:59.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:01.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:01.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:02.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:02.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:03.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:03.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:04.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:04.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:05.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:05.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:06.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:06.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:07.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:07.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:08.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:08.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:10.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:10.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:11.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:11.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:12.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:12.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:13.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:13.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:14.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:14.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:15.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:15.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:17.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	options.checkTypes = false;
    } else 
null
01:55:17.152 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:18.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:55:18.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:19.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:19.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.Compiler ===244
01:55:19.568 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.enables(DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
01:55:19.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:20.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (options.disables(MODULE_DEPENDENCY_ERROR, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(MISSING_ENTRY_ERROR, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.passes, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.externs, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.modules, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.moduleGraph, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.inputs, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.errorManager, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.warningsGuard, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.externsRoot, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.jsRoot, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.externAndJsRoot, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.inputsById, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.sourceMap, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.externExports, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.uniqueNameId, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.useThreads, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.hasRegExpGlobalReferences, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.functionInformationMap, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.debugLog, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.defaultCodingConvention, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.typeRegistry, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.parserConfig, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.abstractInterpreter, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.typeValidator, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.tracker, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.oldErrorReporter, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.defaultErrorReporter, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(OPTIMIZE_LOOP_ERROR, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(MOTION_ITERATIONS_ERROR, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(COMPILER_STACK_SIZE, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(logger, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.outStream, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.globalRefMap, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(EMPTY_MODULE_LIST_ERROR, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(EMPTY_ROOT_MODULE_ERROR, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DUPLICATE_INPUT, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DUPLICATE_EXTERN_INPUT, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.sanityCheck, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.currentTracer, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.currentPassName, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.syntheticCodeId, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.recentChange, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(this.codeChangeHandlers, DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, MODULE_DEPENDENCY_ERROR)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, MISSING_ENTRY_ERROR)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.passes)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.externs)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.modules)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.moduleGraph)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.inputs)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.errorManager)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.warningsGuard)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.externsRoot)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.jsRoot)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.externAndJsRoot)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.inputsById)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.sourceMap)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.externExports)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.uniqueNameId)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.useThreads)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.hasRegExpGlobalReferences)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.functionInformationMap)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.debugLog)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.defaultCodingConvention)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.typeRegistry)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.parserConfig)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.abstractInterpreter)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.typeValidator)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.tracker)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.oldErrorReporter)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.defaultErrorReporter)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, OPTIMIZE_LOOP_ERROR)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, MOTION_ITERATIONS_ERROR)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, COMPILER_STACK_SIZE)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, logger)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.outStream)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.globalRefMap)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, EMPTY_MODULE_LIST_ERROR)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, EMPTY_ROOT_MODULE_ERROR)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, DUPLICATE_INPUT)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, DUPLICATE_EXTERN_INPUT)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.sanityCheck)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.currentTracer)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.currentPassName)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.syntheticCodeId)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.recentChange)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options.disables(DiagnosticGroups.CHECK_TYPES, this.codeChangeHandlers)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
01:55:20.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:21.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:21.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:23.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:23.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:24.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:24.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:25.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:25.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:26.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:26.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:27.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:27.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:28.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:28.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:30.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:30.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:31.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:31.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:32.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:32.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:33.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:33.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:34.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:34.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:35.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:35.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:36.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:36.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:38.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:38.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:39.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:39.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:40.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:40.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:41.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:41.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:42.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:42.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:43.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:43.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:44.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:44.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:46.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:46.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:47.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:47.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:48.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:48.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:49.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:49.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:50.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:50.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:51.715 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:51.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:52.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:52.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:53.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:53.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:55.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:55.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:56.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:56.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:57.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:57.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:58.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:58.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:55:59.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:55:59.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:00.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:00.924 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:02.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:02.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:03.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:03.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:04.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:04.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:05.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:05.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:06.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:06.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:07.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:07.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:08.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:08.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:10.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:10.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:11.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:11.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:12.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:12.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:13.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:13.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:14.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:14.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:16.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:16.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:17.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:17.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:18.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:18.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:19.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:19.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:20.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:20.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:21.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:21.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:23.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:23.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:24.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:24.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:25.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:25.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:26.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:26.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:27.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:27.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:28.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:28.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:30.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:30.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:31.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:31.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:32.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:32.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:33.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:33.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:34.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:34.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:35.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:35.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:36.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:36.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:38.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:38.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:39.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:39.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:40.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:40.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:41.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:41.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:42.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:42.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:43.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:43.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:44.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:44.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:46.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:46.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:47.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:47.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:48.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:48.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:49.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:49.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:50.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:50.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:51.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:51.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:52.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:52.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:53.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:53.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:55.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:55.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:56.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:56.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:57.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:57.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:58.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:58.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:56:59.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:56:59.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:00.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:00.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:01.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (options != null && options.disables(DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
if (options != null || options.disables(DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
01:57:01.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:03.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:03.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:04.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (options != null) {


}

01:57:04.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:05.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (options == null) {
    return;
}

if (options == null) {
    throw new IllegalArgumentException("Empty variable: " + options);
}

01:57:05.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:06.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:06.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:07.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
      options.checkTypes = false;
    } else if (!options.checkTypes) {
      // If DiagnosticGroups did not override the plain checkTypes
      // option, and checkTypes is enabled, then turn off the
      // parser type warnings.
      options.setWarningLevel(
          DiagnosticGroup.forType(
              RhinoErrorReporter.TYPE_PARSE_ERROR),
          CheckLevel.OFF);
    }
	options.checkTypes = true;
    } else 
null
01:57:07.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:08.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:57:08.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:09.966 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:09.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.ComposeWarningsGuard ===129
01:57:09.974 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
01:57:09.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:10.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

01:57:10.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:11.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:11.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CompilerOptions ===1004
01:57:11.673 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return warningsGuard.disables(type);
return warningsGuard.disables(this.languageIn);
return warningsGuard.disables(this.languageOut);
return warningsGuard.disables(this.acceptConstKeyword);
return warningsGuard.disables(this.assumeStrictThis);
return warningsGuard.disables(this.ideMode);
return warningsGuard.disables(this.inferTypes);
return warningsGuard.disables(this.skipAllPasses);
return warningsGuard.disables(this.nameAnonymousFunctionsOnly);
return warningsGuard.disables(this.devMode);
return warningsGuard.disables(this.dependencyOptions);
return warningsGuard.disables(this.messageBundle);
return warningsGuard.disables(this.checkSymbols);
return warningsGuard.disables(this.aggressiveVarCheck);
return warningsGuard.disables(this.checkSuspiciousCode);
return warningsGuard.disables(this.checkControlStructures);
return warningsGuard.disables(this.checkTypes);
return warningsGuard.disables(this.tightenTypes);
return warningsGuard.disables(this.reportMissingOverride);
return warningsGuard.disables(this.reportUnknownTypes);
return warningsGuard.disables(this.checkRequires);
return warningsGuard.disables(this.checkProvides);
return warningsGuard.disables(this.checkGlobalNamesLevel);
return warningsGuard.disables(this.brokenClosureRequiresLevel);
return warningsGuard.disables(this.checkGlobalThisLevel);
return warningsGuard.disables(this.checkMissingGetCssNameLevel);
return warningsGuard.disables(this.checkMissingGetCssNameBlacklist);
return warningsGuard.disables(this.checkCaja);
return warningsGuard.disables(this.extraAnnotationNames);
return warningsGuard.disables(this.foldConstants);
return warningsGuard.disables(this.deadAssignmentElimination);
return warningsGuard.disables(this.inlineConstantVars);
return warningsGuard.disables(this.inlineFunctions);
return warningsGuard.disables(this.inlineLocalFunctions);
return warningsGuard.disables(this.assumeClosuresOnlyCaptureReferences);
return warningsGuard.disables(this.crossModuleCodeMotion);
return warningsGuard.disables(this.coalesceVariableNames);
return warningsGuard.disables(this.crossModuleMethodMotion);
return warningsGuard.disables(this.inlineGetters);
return warningsGuard.disables(this.inlineVariables);
return warningsGuard.disables(this.inlineLocalVariables);
return warningsGuard.disables(this.flowSensitiveInlineVariables);
return warningsGuard.disables(this.smartNameRemoval);
return warningsGuard.disables(this.removeDeadCode);
return warningsGuard.disables(this.checkUnreachableCode);
return warningsGuard.disables(this.checkMissingReturn);
return warningsGuard.disables(this.extractPrototypeMemberDeclarations);
return warningsGuard.disables(this.removeEmptyFunctions);
return warningsGuard.disables(this.removeUnusedPrototypeProperties);
return warningsGuard.disables(this.removeUnusedPrototypePropertiesInExterns);
return warningsGuard.disables(this.removeUnusedVars);
return warningsGuard.disables(this.removeUnusedLocalVars);
return warningsGuard.disables(this.aliasExternals);
return warningsGuard.disables(this.aliasableGlobals);
return warningsGuard.disables(this.unaliasableGlobals);
return warningsGuard.disables(this.collapseVariableDeclarations);
return warningsGuard.disables(this.groupVariableDeclarations);
return warningsGuard.disables(this.collapseAnonymousFunctions);
return warningsGuard.disables(this.aliasableStrings);
return warningsGuard.disables(this.aliasStringsBlacklist);
return warningsGuard.disables(this.aliasAllStrings);
return warningsGuard.disables(this.outputJsStringUsage);
return warningsGuard.disables(this.convertToDottedProperties);
return warningsGuard.disables(this.rewriteFunctionExpressions);
return warningsGuard.disables(this.optimizeParameters);
return warningsGuard.disables(this.optimizeReturns);
return warningsGuard.disables(this.optimizeCalls);
return warningsGuard.disables(this.optimizeArgumentsArray);
return warningsGuard.disables(this.chainCalls);
return warningsGuard.disables(this.variableRenaming);
return warningsGuard.disables(this.propertyRenaming);
return warningsGuard.disables(this.propertyAffinity);
return warningsGuard.disables(this.labelRenaming);
return warningsGuard.disables(this.reserveRawExports);
return warningsGuard.disables(this.shadowVariables);
return warningsGuard.disables(this.generatePseudoNames);
return warningsGuard.disables(this.renamePrefix);
return warningsGuard.disables(this.renamePrefixNamespace);
return warningsGuard.disables(this.aliasKeywords);
return warningsGuard.disables(this.collapseProperties);
return warningsGuard.disables(this.collapseObjectLiterals);
return warningsGuard.disables(this.collapsePropertiesOnExternTypes);
return warningsGuard.disables(this.devirtualizePrototypeMethods);
return warningsGuard.disables(this.computeFunctionSideEffects);
return warningsGuard.disables(this.debugFunctionSideEffectsPath);
return warningsGuard.disables(this.disambiguateProperties);
return warningsGuard.disables(this.ambiguateProperties);
return warningsGuard.disables(this.anonymousFunctionNaming);
return warningsGuard.disables(this.inputVariableMapSerialized);
return warningsGuard.disables(this.inputPropertyMapSerialized);
return warningsGuard.disables(this.exportTestFunctions);
return warningsGuard.disables(this.specializeInitialModule);
return warningsGuard.disables(this.runtimeTypeCheck);
return warningsGuard.disables(this.runtimeTypeCheckLogFunction);
return warningsGuard.disables(this.codingConvention);
return warningsGuard.disables(this.ignoreCajaProperties);
return warningsGuard.disables(this.syntheticBlockStartMarker);
return warningsGuard.disables(this.syntheticBlockEndMarker);
return warningsGuard.disables(this.locale);
return warningsGuard.disables(this.markAsCompiled);
return warningsGuard.disables(this.removeTryCatchFinally);
return warningsGuard.disables(this.closurePass);
return warningsGuard.disables(this.jqueryPass);
return warningsGuard.disables(this.rewriteNewDateGoogNow);
return warningsGuard.disables(this.removeAbstractMethods);
return warningsGuard.disables(this.removeClosureAsserts);
return warningsGuard.disables(this.gatherCssNames);
return warningsGuard.disables(this.stripTypes);
return warningsGuard.disables(this.stripNameSuffixes);
return warningsGuard.disables(this.stripNamePrefixes);
return warningsGuard.disables(this.stripTypePrefixes);
return warningsGuard.disables(this.customPasses);
return warningsGuard.disables(this.markNoSideEffectCalls);
return warningsGuard.disables(this.defineReplacements);
return warningsGuard.disables(this.tweakProcessing);
return warningsGuard.disables(this.tweakReplacements);
return warningsGuard.disables(this.moveFunctionDeclarations);
return warningsGuard.disables(this.instrumentationTemplate);
return warningsGuard.disables(this.appNameStr);
return warningsGuard.disables(this.recordFunctionInformation);
return warningsGuard.disables(this.generateExports);
return warningsGuard.disables(this.cssRenamingMap);
return warningsGuard.disables(this.processObjectPropertyString);
return warningsGuard.disables(this.replaceIdGenerators);
return warningsGuard.disables(this.idGenerators);
return warningsGuard.disables(this.replaceStringsFunctionDescriptions);
return warningsGuard.disables(this.replaceStringsPlaceholderToken);
return warningsGuard.disables(this.replaceStringsReservedStrings);
return warningsGuard.disables(this.propertyInvalidationErrors);
return warningsGuard.disables(this.prettyPrint);
return warningsGuard.disables(this.lineBreak);
return warningsGuard.disables(this.printInputDelimiter);
return warningsGuard.disables(this.inputDelimiter);
return warningsGuard.disables(this.reportPath);
return warningsGuard.disables(this.tracer);
return warningsGuard.disables(this.colorizeErrorOutput);
return warningsGuard.disables(this.errorFormat);
return warningsGuard.disables(this.summaryDetailLevel);
return warningsGuard.disables(this.lineLengthThreshold);
return warningsGuard.disables(this.externExports);
return warningsGuard.disables(this.externExportsPath);
return warningsGuard.disables(this.nameReferenceReportPath);
return warningsGuard.disables(this.nameReferenceGraphPath);
return warningsGuard.disables(this.sourceMapOutputPath);
return warningsGuard.disables(this.sourceMapDetailLevel);
return warningsGuard.disables(this.sourceMapFormat);
return warningsGuard.disables(this.sourceMapLocationMappings);
return warningsGuard.disables(this.outputCharset);
return warningsGuard.disables(this.looseTypes);
return warningsGuard.disables(this.aliasHandler);
return warningsGuard.disables(NULL_ALIAS_TRANSFORMATION_HANDLER);
return warningsGuard.disables();
return warningsGuard.disables(this.languageIn, type);
return warningsGuard.disables(this.languageOut, type);
return warningsGuard.disables(this.acceptConstKeyword, type);
return warningsGuard.disables(this.assumeStrictThis, type);
return warningsGuard.disables(this.ideMode, type);
return warningsGuard.disables(this.inferTypes, type);
return warningsGuard.disables(this.skipAllPasses, type);
return warningsGuard.disables(this.nameAnonymousFunctionsOnly, type);
return warningsGuard.disables(this.devMode, type);
return warningsGuard.disables(this.dependencyOptions, type);
return warningsGuard.disables(this.messageBundle, type);
return warningsGuard.disables(this.checkSymbols, type);
return warningsGuard.disables(this.aggressiveVarCheck, type);
return warningsGuard.disables(this.checkSuspiciousCode, type);
return warningsGuard.disables(this.checkControlStructures, type);
return warningsGuard.disables(this.checkTypes, type);
return warningsGuard.disables(this.tightenTypes, type);
return warningsGuard.disables(this.reportMissingOverride, type);
return warningsGuard.disables(this.reportUnknownTypes, type);
return warningsGuard.disables(this.checkRequires, type);
return warningsGuard.disables(this.checkProvides, type);
return warningsGuard.disables(this.checkGlobalNamesLevel, type);
return warningsGuard.disables(this.brokenClosureRequiresLevel, type);
return warningsGuard.disables(this.checkGlobalThisLevel, type);
return warningsGuard.disables(this.checkMissingGetCssNameLevel, type);
return warningsGuard.disables(this.checkMissingGetCssNameBlacklist, type);
return warningsGuard.disables(this.checkCaja, type);
return warningsGuard.disables(this.extraAnnotationNames, type);
return warningsGuard.disables(this.foldConstants, type);
return warningsGuard.disables(this.deadAssignmentElimination, type);
return warningsGuard.disables(this.inlineConstantVars, type);
return warningsGuard.disables(this.inlineFunctions, type);
return warningsGuard.disables(this.inlineLocalFunctions, type);
return warningsGuard.disables(this.assumeClosuresOnlyCaptureReferences, type);
return warningsGuard.disables(this.crossModuleCodeMotion, type);
return warningsGuard.disables(this.coalesceVariableNames, type);
return warningsGuard.disables(this.crossModuleMethodMotion, type);
return warningsGuard.disables(this.inlineGetters, type);
return warningsGuard.disables(this.inlineVariables, type);
return warningsGuard.disables(this.inlineLocalVariables, type);
return warningsGuard.disables(this.flowSensitiveInlineVariables, type);
return warningsGuard.disables(this.smartNameRemoval, type);
return warningsGuard.disables(this.removeDeadCode, type);
return warningsGuard.disables(this.checkUnreachableCode, type);
return warningsGuard.disables(this.checkMissingReturn, type);
return warningsGuard.disables(this.extractPrototypeMemberDeclarations, type);
return warningsGuard.disables(this.removeEmptyFunctions, type);
return warningsGuard.disables(this.removeUnusedPrototypeProperties, type);
return warningsGuard.disables(this.removeUnusedPrototypePropertiesInExterns, type);
return warningsGuard.disables(this.removeUnusedVars, type);
return warningsGuard.disables(this.removeUnusedLocalVars, type);
return warningsGuard.disables(this.aliasExternals, type);
return warningsGuard.disables(this.aliasableGlobals, type);
return warningsGuard.disables(this.unaliasableGlobals, type);
return warningsGuard.disables(this.collapseVariableDeclarations, type);
return warningsGuard.disables(this.groupVariableDeclarations, type);
return warningsGuard.disables(this.collapseAnonymousFunctions, type);
return warningsGuard.disables(this.aliasableStrings, type);
return warningsGuard.disables(this.aliasStringsBlacklist, type);
return warningsGuard.disables(this.aliasAllStrings, type);
return warningsGuard.disables(this.outputJsStringUsage, type);
return warningsGuard.disables(this.convertToDottedProperties, type);
return warningsGuard.disables(this.rewriteFunctionExpressions, type);
return warningsGuard.disables(this.optimizeParameters, type);
return warningsGuard.disables(this.optimizeReturns, type);
return warningsGuard.disables(this.optimizeCalls, type);
return warningsGuard.disables(this.optimizeArgumentsArray, type);
return warningsGuard.disables(this.chainCalls, type);
return warningsGuard.disables(this.variableRenaming, type);
return warningsGuard.disables(this.propertyRenaming, type);
return warningsGuard.disables(this.propertyAffinity, type);
return warningsGuard.disables(this.labelRenaming, type);
return warningsGuard.disables(this.reserveRawExports, type);
return warningsGuard.disables(this.shadowVariables, type);
return warningsGuard.disables(this.generatePseudoNames, type);
return warningsGuard.disables(this.renamePrefix, type);
return warningsGuard.disables(this.renamePrefixNamespace, type);
return warningsGuard.disables(this.aliasKeywords, type);
return warningsGuard.disables(this.collapseProperties, type);
return warningsGuard.disables(this.collapseObjectLiterals, type);
return warningsGuard.disables(this.collapsePropertiesOnExternTypes, type);
return warningsGuard.disables(this.devirtualizePrototypeMethods, type);
return warningsGuard.disables(this.computeFunctionSideEffects, type);
return warningsGuard.disables(this.debugFunctionSideEffectsPath, type);
return warningsGuard.disables(this.disambiguateProperties, type);
return warningsGuard.disables(this.ambiguateProperties, type);
return warningsGuard.disables(this.anonymousFunctionNaming, type);
return warningsGuard.disables(this.inputVariableMapSerialized, type);
return warningsGuard.disables(this.inputPropertyMapSerialized, type);
return warningsGuard.disables(this.exportTestFunctions, type);
return warningsGuard.disables(this.specializeInitialModule, type);
return warningsGuard.disables(this.runtimeTypeCheck, type);
return warningsGuard.disables(this.runtimeTypeCheckLogFunction, type);
return warningsGuard.disables(this.codingConvention, type);
return warningsGuard.disables(this.ignoreCajaProperties, type);
return warningsGuard.disables(this.syntheticBlockStartMarker, type);
return warningsGuard.disables(this.syntheticBlockEndMarker, type);
return warningsGuard.disables(this.locale, type);
return warningsGuard.disables(this.markAsCompiled, type);
return warningsGuard.disables(this.removeTryCatchFinally, type);
return warningsGuard.disables(this.closurePass, type);
return warningsGuard.disables(this.jqueryPass, type);
return warningsGuard.disables(this.rewriteNewDateGoogNow, type);
return warningsGuard.disables(this.removeAbstractMethods, type);
return warningsGuard.disables(this.removeClosureAsserts, type);
return warningsGuard.disables(this.gatherCssNames, type);
return warningsGuard.disables(this.stripTypes, type);
return warningsGuard.disables(this.stripNameSuffixes, type);
return warningsGuard.disables(this.stripNamePrefixes, type);
return warningsGuard.disables(this.stripTypePrefixes, type);
return warningsGuard.disables(this.customPasses, type);
return warningsGuard.disables(this.markNoSideEffectCalls, type);
return warningsGuard.disables(this.defineReplacements, type);
return warningsGuard.disables(this.tweakProcessing, type);
return warningsGuard.disables(this.tweakReplacements, type);
return warningsGuard.disables(this.moveFunctionDeclarations, type);
return warningsGuard.disables(this.instrumentationTemplate, type);
return warningsGuard.disables(this.appNameStr, type);
return warningsGuard.disables(this.recordFunctionInformation, type);
return warningsGuard.disables(this.generateExports, type);
return warningsGuard.disables(this.cssRenamingMap, type);
return warningsGuard.disables(this.processObjectPropertyString, type);
return warningsGuard.disables(this.replaceIdGenerators, type);
return warningsGuard.disables(this.idGenerators, type);
return warningsGuard.disables(this.replaceStringsFunctionDescriptions, type);
return warningsGuard.disables(this.replaceStringsPlaceholderToken, type);
return warningsGuard.disables(this.replaceStringsReservedStrings, type);
return warningsGuard.disables(this.propertyInvalidationErrors, type);
return warningsGuard.disables(this.prettyPrint, type);
return warningsGuard.disables(this.lineBreak, type);
return warningsGuard.disables(this.printInputDelimiter, type);
return warningsGuard.disables(this.inputDelimiter, type);
return warningsGuard.disables(this.reportPath, type);
return warningsGuard.disables(this.tracer, type);
return warningsGuard.disables(this.colorizeErrorOutput, type);
return warningsGuard.disables(this.errorFormat, type);
return warningsGuard.disables(this.summaryDetailLevel, type);
return warningsGuard.disables(this.lineLengthThreshold, type);
return warningsGuard.disables(this.externExports, type);
return warningsGuard.disables(this.externExportsPath, type);
return warningsGuard.disables(this.nameReferenceReportPath, type);
return warningsGuard.disables(this.nameReferenceGraphPath, type);
return warningsGuard.disables(this.sourceMapOutputPath, type);
return warningsGuard.disables(this.sourceMapDetailLevel, type);
return warningsGuard.disables(this.sourceMapFormat, type);
return warningsGuard.disables(this.sourceMapLocationMappings, type);
return warningsGuard.disables(this.outputCharset, type);
return warningsGuard.disables(this.looseTypes, type);
return warningsGuard.disables(this.aliasHandler, type);
return warningsGuard.disables(NULL_ALIAS_TRANSFORMATION_HANDLER, type);
return warningsGuard.disables(type, this.languageIn);
return warningsGuard.disables(type, this.languageOut);
return warningsGuard.disables(type, this.acceptConstKeyword);
return warningsGuard.disables(type, this.assumeStrictThis);
return warningsGuard.disables(type, this.ideMode);
return warningsGuard.disables(type, this.inferTypes);
return warningsGuard.disables(type, this.skipAllPasses);
return warningsGuard.disables(type, this.nameAnonymousFunctionsOnly);
return warningsGuard.disables(type, this.devMode);
return warningsGuard.disables(type, this.dependencyOptions);
return warningsGuard.disables(type, this.messageBundle);
return warningsGuard.disables(type, this.checkSymbols);
return warningsGuard.disables(type, this.aggressiveVarCheck);
return warningsGuard.disables(type, this.checkSuspiciousCode);
return warningsGuard.disables(type, this.checkControlStructures);
return warningsGuard.disables(type, this.checkTypes);
return warningsGuard.disables(type, this.tightenTypes);
return warningsGuard.disables(type, this.reportMissingOverride);
return warningsGuard.disables(type, this.reportUnknownTypes);
return warningsGuard.disables(type, this.checkRequires);
return warningsGuard.disables(type, this.checkProvides);
return warningsGuard.disables(type, this.checkGlobalNamesLevel);
return warningsGuard.disables(type, this.brokenClosureRequiresLevel);
return warningsGuard.disables(type, this.checkGlobalThisLevel);
return warningsGuard.disables(type, this.checkMissingGetCssNameLevel);
return warningsGuard.disables(type, this.checkMissingGetCssNameBlacklist);
return warningsGuard.disables(type, this.checkCaja);
return warningsGuard.disables(type, this.extraAnnotationNames);
return warningsGuard.disables(type, this.foldConstants);
return warningsGuard.disables(type, this.deadAssignmentElimination);
return warningsGuard.disables(type, this.inlineConstantVars);
return warningsGuard.disables(type, this.inlineFunctions);
return warningsGuard.disables(type, this.inlineLocalFunctions);
return warningsGuard.disables(type, this.assumeClosuresOnlyCaptureReferences);
return warningsGuard.disables(type, this.crossModuleCodeMotion);
return warningsGuard.disables(type, this.coalesceVariableNames);
return warningsGuard.disables(type, this.crossModuleMethodMotion);
return warningsGuard.disables(type, this.inlineGetters);
return warningsGuard.disables(type, this.inlineVariables);
return warningsGuard.disables(type, this.inlineLocalVariables);
return warningsGuard.disables(type, this.flowSensitiveInlineVariables);
return warningsGuard.disables(type, this.smartNameRemoval);
return warningsGuard.disables(type, this.removeDeadCode);
return warningsGuard.disables(type, this.checkUnreachableCode);
return warningsGuard.disables(type, this.checkMissingReturn);
return warningsGuard.disables(type, this.extractPrototypeMemberDeclarations);
return warningsGuard.disables(type, this.removeEmptyFunctions);
return warningsGuard.disables(type, this.removeUnusedPrototypeProperties);
return warningsGuard.disables(type, this.removeUnusedPrototypePropertiesInExterns);
return warningsGuard.disables(type, this.removeUnusedVars);
return warningsGuard.disables(type, this.removeUnusedLocalVars);
return warningsGuard.disables(type, this.aliasExternals);
return warningsGuard.disables(type, this.aliasableGlobals);
return warningsGuard.disables(type, this.unaliasableGlobals);
return warningsGuard.disables(type, this.collapseVariableDeclarations);
return warningsGuard.disables(type, this.groupVariableDeclarations);
return warningsGuard.disables(type, this.collapseAnonymousFunctions);
return warningsGuard.disables(type, this.aliasableStrings);
return warningsGuard.disables(type, this.aliasStringsBlacklist);
return warningsGuard.disables(type, this.aliasAllStrings);
return warningsGuard.disables(type, this.outputJsStringUsage);
return warningsGuard.disables(type, this.convertToDottedProperties);
return warningsGuard.disables(type, this.rewriteFunctionExpressions);
return warningsGuard.disables(type, this.optimizeParameters);
return warningsGuard.disables(type, this.optimizeReturns);
return warningsGuard.disables(type, this.optimizeCalls);
return warningsGuard.disables(type, this.optimizeArgumentsArray);
return warningsGuard.disables(type, this.chainCalls);
return warningsGuard.disables(type, this.variableRenaming);
return warningsGuard.disables(type, this.propertyRenaming);
return warningsGuard.disables(type, this.propertyAffinity);
return warningsGuard.disables(type, this.labelRenaming);
return warningsGuard.disables(type, this.reserveRawExports);
return warningsGuard.disables(type, this.shadowVariables);
return warningsGuard.disables(type, this.generatePseudoNames);
return warningsGuard.disables(type, this.renamePrefix);
return warningsGuard.disables(type, this.renamePrefixNamespace);
return warningsGuard.disables(type, this.aliasKeywords);
return warningsGuard.disables(type, this.collapseProperties);
return warningsGuard.disables(type, this.collapseObjectLiterals);
return warningsGuard.disables(type, this.collapsePropertiesOnExternTypes);
return warningsGuard.disables(type, this.devirtualizePrototypeMethods);
return warningsGuard.disables(type, this.computeFunctionSideEffects);
return warningsGuard.disables(type, this.debugFunctionSideEffectsPath);
return warningsGuard.disables(type, this.disambiguateProperties);
return warningsGuard.disables(type, this.ambiguateProperties);
return warningsGuard.disables(type, this.anonymousFunctionNaming);
return warningsGuard.disables(type, this.inputVariableMapSerialized);
return warningsGuard.disables(type, this.inputPropertyMapSerialized);
return warningsGuard.disables(type, this.exportTestFunctions);
return warningsGuard.disables(type, this.specializeInitialModule);
return warningsGuard.disables(type, this.runtimeTypeCheck);
return warningsGuard.disables(type, this.runtimeTypeCheckLogFunction);
return warningsGuard.disables(type, this.codingConvention);
return warningsGuard.disables(type, this.ignoreCajaProperties);
return warningsGuard.disables(type, this.syntheticBlockStartMarker);
return warningsGuard.disables(type, this.syntheticBlockEndMarker);
return warningsGuard.disables(type, this.locale);
return warningsGuard.disables(type, this.markAsCompiled);
return warningsGuard.disables(type, this.removeTryCatchFinally);
return warningsGuard.disables(type, this.closurePass);
return warningsGuard.disables(type, this.jqueryPass);
return warningsGuard.disables(type, this.rewriteNewDateGoogNow);
return warningsGuard.disables(type, this.removeAbstractMethods);
return warningsGuard.disables(type, this.removeClosureAsserts);
return warningsGuard.disables(type, this.gatherCssNames);
return warningsGuard.disables(type, this.stripTypes);
return warningsGuard.disables(type, this.stripNameSuffixes);
return warningsGuard.disables(type, this.stripNamePrefixes);
return warningsGuard.disables(type, this.stripTypePrefixes);
return warningsGuard.disables(type, this.customPasses);
return warningsGuard.disables(type, this.markNoSideEffectCalls);
return warningsGuard.disables(type, this.defineReplacements);
return warningsGuard.disables(type, this.tweakProcessing);
return warningsGuard.disables(type, this.tweakReplacements);
return warningsGuard.disables(type, this.moveFunctionDeclarations);
return warningsGuard.disables(type, this.instrumentationTemplate);
return warningsGuard.disables(type, this.appNameStr);
return warningsGuard.disables(type, this.recordFunctionInformation);
return warningsGuard.disables(type, this.generateExports);
return warningsGuard.disables(type, this.cssRenamingMap);
return warningsGuard.disables(type, this.processObjectPropertyString);
return warningsGuard.disables(type, this.replaceIdGenerators);
return warningsGuard.disables(type, this.idGenerators);
return warningsGuard.disables(type, this.replaceStringsFunctionDescriptions);
return warningsGuard.disables(type, this.replaceStringsPlaceholderToken);
return warningsGuard.disables(type, this.replaceStringsReservedStrings);
return warningsGuard.disables(type, this.propertyInvalidationErrors);
return warningsGuard.disables(type, this.prettyPrint);
return warningsGuard.disables(type, this.lineBreak);
return warningsGuard.disables(type, this.printInputDelimiter);
return warningsGuard.disables(type, this.inputDelimiter);
return warningsGuard.disables(type, this.reportPath);
return warningsGuard.disables(type, this.tracer);
return warningsGuard.disables(type, this.colorizeErrorOutput);
return warningsGuard.disables(type, this.errorFormat);
return warningsGuard.disables(type, this.summaryDetailLevel);
return warningsGuard.disables(type, this.lineLengthThreshold);
return warningsGuard.disables(type, this.externExports);
return warningsGuard.disables(type, this.externExportsPath);
return warningsGuard.disables(type, this.nameReferenceReportPath);
return warningsGuard.disables(type, this.nameReferenceGraphPath);
return warningsGuard.disables(type, this.sourceMapOutputPath);
return warningsGuard.disables(type, this.sourceMapDetailLevel);
return warningsGuard.disables(type, this.sourceMapFormat);
return warningsGuard.disables(type, this.sourceMapLocationMappings);
return warningsGuard.disables(type, this.outputCharset);
return warningsGuard.disables(type, this.looseTypes);
return warningsGuard.disables(type, this.aliasHandler);
return warningsGuard.disables(type, NULL_ALIAS_TRANSFORMATION_HANDLER);
01:57:11.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:12.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:12.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:13.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:13.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:14.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:14.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:15.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:15.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:16.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:16.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:17.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:17.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:17.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:17.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:18.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:18.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:19.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:19.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:20.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:20.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:21.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:21.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:22.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:22.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:23.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:23.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:24.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:24.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:25.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:25.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:25.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:25.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:26.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:26.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:27.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:27.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:28.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:28.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:29.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:29.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:30.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:30.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:31.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:31.197 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:32.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:32.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:32.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:32.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:33.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:33.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:34.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:34.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:35.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:35.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:36.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:36.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:37.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:37.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:38.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:38.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:38.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:38.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:39.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:39.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:40.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:40.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:41.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:41.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:42.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:42.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:43.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:43.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:44.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:44.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:45.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:45.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:45.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:45.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:46.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:46.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:47.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:47.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:48.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:48.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:49.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:49.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:50.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:50.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:51.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:51.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:51.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:51.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:52.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:52.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:53.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:53.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:54.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:54.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:55.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:55.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:56.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:56.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:56.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:56.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:57.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:57.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:58.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:58.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:59.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:57:59.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:00.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:00.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:01.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:01.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:02.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:02.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:03.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:03.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:03.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:03.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:04.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:04.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:05.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:05.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:06.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:06.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:07.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:07.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:08.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:08.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:09.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:09.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:10.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:10.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:11.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:11.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:11.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:11.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:12.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:12.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:13.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:13.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:14.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:14.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:15.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:15.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:16.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:16.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:17.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:17.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:18.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:18.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:19.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:19.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:19.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:19.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:20.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:20.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:21.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:21.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:22.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:22.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:23.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:23.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:24.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:24.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:25.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:25.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:26.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:26.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:26.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:26.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:27.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:27.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:28.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:28.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:29.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:29.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:30.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:30.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:31.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:31.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:32.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:32.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:33.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:33.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:33.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:33.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:34.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:34.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:35.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:35.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:36.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:36.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:37.382 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:37.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:38.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:38.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:39.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:39.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:40.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:40.004 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:40.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:40.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:41.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:41.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:42.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:42.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:43.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:43.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:44.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:44.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:45.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:45.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:46.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:46.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:46.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:46.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:47.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:47.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:48.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:48.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:49.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:49.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:50.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:50.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:51.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:51.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:52.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:52.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:52.869 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:52.870 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:53.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:53.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:54.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:54.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:55.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:55.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:56.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:56.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:57.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:57.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:58.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:58.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:58.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:58.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:59.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:58:59.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:00.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:00.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:01.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:01.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:02.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:02.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:03.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:03.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:04.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:04.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:04.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:04.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:05.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:05.793 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:06.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:06.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:07.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:07.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:08.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:08.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:09.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:09.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:10.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:10.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:11.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:11.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:11.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:11.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:12.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:12.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:13.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:13.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:14.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:14.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:15.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:15.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:16.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:16.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:17.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:17.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:18.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:18.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:19.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:19.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:19.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:19.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:20.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:20.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:21.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:21.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:22.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:22.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:23.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:23.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:24.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:24.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:25.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:25.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:26.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:26.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:27.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:27.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:27.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:27.911 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:28.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:28.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:29.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:29.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:30.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:30.525 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:31.411 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:31.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:32.302 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:32.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:33.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:33.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:34.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:34.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:34.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:34.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:35.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:35.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:36.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:36.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:37.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:37.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:38.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:38.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:39.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:39.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:40.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:40.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:41.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:41.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:41.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:41.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:42.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:42.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:43.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:43.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:44.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:44.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:45.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:45.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:46.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:46.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:47.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:47.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:47.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:47.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:48.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:48.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:49.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:49.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:50.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:50.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:51.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:51.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:52.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:52.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:53.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:53.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:54.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:54.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:54.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:54.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:55.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:55.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:56.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:56.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:57.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:57.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:58.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:58.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:59.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
01:59:59.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:00.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:00.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:00.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:00.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:01.783 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:01.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:02.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:02.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:03.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:03.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:04.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:04.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:05.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:05.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:05.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:05.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:06.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:06.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:07.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:07.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:08.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:08.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:09.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:09.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:10.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:10.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:11.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:11.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:11.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:11.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:12.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:12.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:13.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:13.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:14.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:14.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:15.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:15.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:16.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:16.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:17.100 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:17.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:17.955 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:17.956 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:18.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:18.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:19.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:19.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:20.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:20.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:21.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:21.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:22.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:22.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:23.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:23.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:23.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:23.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:24.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:24.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:25.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:25.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:26.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:26.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:27.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:27.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:28.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:28.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:29.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:29.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:29.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:29.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:30.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:30.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:31.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:31.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:32.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:32.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:33.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:33.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:34.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:34.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:35.015 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:35.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:35.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:35.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:36.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:36.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:37.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:37.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:38.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:38.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:39.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:39.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:40.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:40.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:40.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:40.980 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:41.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:41.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:42.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:42.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:43.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:43.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:44.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:44.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:45.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:45.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:46.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:46.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:46.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:46.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:47.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:47.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:48.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:48.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:49.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:49.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:50.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:50.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:51.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:51.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:51.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:51.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:52.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:52.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:53.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:53.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:54.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:54.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:55.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:55.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:56.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:56.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:57.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:57.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:57.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:57.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:58.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:58.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:59.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:00:59.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:00.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:00.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:01.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:01.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:02.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:02.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:02.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:02.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:03.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:03.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:04.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:04.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:05.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:05.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:06.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:06.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:07.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:07.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:08.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:08.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:08.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:08.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:09.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:09.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:10.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:10.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:11.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:11.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:12.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:12.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:13.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:13.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:14.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:14.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:15.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:15.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:15.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:15.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:16.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:16.778 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:17.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:17.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:18.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:18.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:19.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:19.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:20.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:20.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:21.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:21.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:21.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:21.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:22.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:22.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:23.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:23.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:24.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:24.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:25.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:25.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:26.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:26.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:27.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:27.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:27.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:27.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:28.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:28.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:29.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:29.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:30.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:30.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:31.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:31.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:32.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:32.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:32.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:32.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:33.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:33.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:34.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:34.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:35.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:35.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:36.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:36.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:37.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:37.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:38.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:38.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:38.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:38.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:39.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:39.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:40.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:40.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:41.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:41.566 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:42.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:42.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:43.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:43.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:44.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:44.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:44.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:44.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:45.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:45.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:46.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:46.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:47.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:47.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:48.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:48.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:49.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:49.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:50.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:50.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:50.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:50.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:51.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:51.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:52.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:52.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:53.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:53.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:54.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:54.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:55.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:55.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:56.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:56.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:56.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:56.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:57.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:57.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:58.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:58.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:59.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:01:59.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:00.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:00.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:01.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:01.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:02.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:02.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:02.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:02.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:03.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:03.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:04.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:04.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:05.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:05.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:06.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:06.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:07.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:07.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:08.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:08.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:08.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:08.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:09.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:09.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:10.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:10.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:11.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:11.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:12.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:12.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:13.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:13.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:14.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:14.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:15.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:15.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:16.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:16.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:16.878 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:16.878 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:17.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:17.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:18.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:18.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:19.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:19.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:20.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:20.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:21.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:21.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:22.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:22.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:23.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:23.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:23.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:23.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:24.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:24.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:25.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:25.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:26.518 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:26.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:27.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:27.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:28.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:28.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:29.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:29.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:29.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:29.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:30.819 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:30.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:31.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:31.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:32.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:32.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:33.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:33.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:34.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:34.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:35.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:35.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:35.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:35.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:36.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:36.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:37.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:37.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:38.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:38.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:39.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:39.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:40.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:40.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:41.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:41.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:41.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:41.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:42.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:42.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:43.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:43.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:44.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:44.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:45.398 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:45.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:46.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:46.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:47.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:47.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:47.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:47.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:48.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:48.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:49.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:49.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:50.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:50.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:51.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:51.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:52.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:52.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:53.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:53.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:54.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:54.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:54.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:54.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:55.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:55.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:56.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:56.707 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:57.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:57.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:58.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:58.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:59.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:02:59.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:00.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:00.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:01.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:01.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:01.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:01.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:02.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:02.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:03.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:03.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:04.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:04.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:05.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:05.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:06.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:06.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:07.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:07.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:08.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:08.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:08.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:08.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:09.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:09.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:10.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:10.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:11.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:11.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:12.478 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:12.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:13.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:13.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:14.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:14.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:15.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:15.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:16.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:16.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:16.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:16.945 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:17.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:17.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:18.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:18.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:19.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:19.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:20.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:20.472 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:21.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:21.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:22.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:22.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:23.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:23.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:23.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:23.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:24.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:24.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:25.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:25.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:26.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:26.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:27.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:27.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:28.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:28.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:29.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:29.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:29.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:29.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:30.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:30.886 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:31.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:31.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:32.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:32.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:33.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:33.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:34.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:34.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:35.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:35.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:36.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:36.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:37.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:37.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:37.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:37.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:38.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:38.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:39.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:39.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:40.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:40.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:41.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:41.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:42.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return warningsGuard.enables(type);
02:03:42.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:43.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return getDefineReplacements().disables(type);
return getTweakReplacements().disables(type);
return getWarningsGuard().disables(type);
return shouldColorizeErrorOutput().disables(type);
return getCodingConvention().disables(type);
return isExternExportsEnabled().disables(type);
return getTweakProcessing().disables(type);
return getLanguageIn().disables(type);
return getLanguageOut().disables(type);
return clone().disables(type);
return getAliasTransformationHandler().disables(type);
return getInferTypes().disables(type);
return assumeStrictThis().disables(type);
return assumeClosuresOnlyCaptureReferences().disables(type);
02:03:43.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:43.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:43.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:44.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:44.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:45.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:45.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:46.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:46.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:47.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:47.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:48.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:48.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:49.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:49.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:49.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:49.928 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:50.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:50.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:51.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:51.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:52.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:52.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:53.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:53.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:54.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:54.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:55.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return warningsGuard.disables(true, type);
return warningsGuard.disables(false, type);
return warningsGuard.disables(type, true);
return warningsGuard.disables(type, false);
02:03:55.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:55.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:55.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:56.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:56.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:57.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:57.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:58.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return warningsGuard != null && warningsGuard.disables(type);
return warningsGuard != null || warningsGuard.disables(type);
02:03:58.568 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:59.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:03:59.435 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:00.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (warningsGuard != null) {


}

if (type != null) {


}

02:04:00.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:01.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:01.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:02.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (warningsGuard == null) {
    return true;
}

if (warningsGuard == null) {
    return false;
}

if (warningsGuard == null) {
    throw new IllegalArgumentException("Empty variable: " + warningsGuard);
}

if (type == null) {
    return true;
}

if (type == null) {
    return false;
}

if (type == null) {
    throw new IllegalArgumentException("Empty variable: " + type);
}

02:04:02.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:02.874 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:02.874 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:03.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:03.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:04.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:04.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:05.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:05.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:06.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:06.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:07.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

02:04:07.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:08.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:08.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.ComposeWarningsGuard ===121
02:04:08.072 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (WarningsGuard guard : guards) {
        if (guard.disables(singleton)) {
          continue nextSingleton;
        } else if (guard.enables(singleton)) {
          return false;
        }
      }
if (guards != null) {


}

02:04:08.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:08.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (guards == null) {
    return true;
}

if (guards == null) {
    return false;
}

if (guards == null) {
    throw new IllegalArgumentException("Empty variable: " + guards);
}

02:04:08.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:09.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:09.708 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:10.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:10.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:11.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
for (WarningsGuard guard : guards) {
        if (guard.disables(singleton)) {
          continue nextSingleton;
        } else if (guard.enables(singleton)) {
          return false;
        }
      }
	DiagnosticGroup singleton = DiagnosticGroup.forType(type);

      
null


      return false;
	for (WarningsGuard guard : guards) {
        if (guard.disables(singleton)) {
          continue nextSingleton;
        } else if (guard.enables(singleton)) {
          return false;
        }
      }

MOVE-BUGGY-STATEMENT
02:04:11.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:12.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:12.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:13.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

02:04:13.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:13.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:13.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.ComposeWarningsGuard ===119
02:04:13.822 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
DiagnosticGroup singleton = DiagnosticGroup.forType(type);
DiagnosticGroup singleton = DiagnosticGroup.matches(type);
02:04:13.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:14.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
DiagnosticGroup singleton = DiagnosticGroup.forType(singleton);
DiagnosticGroup singleton = DiagnosticGroup.forType(group);
DiagnosticGroup singleton = DiagnosticGroup.forType(this.orderOfAddition);
DiagnosticGroup singleton = DiagnosticGroup.forType(this.numberOfAdds);
DiagnosticGroup singleton = DiagnosticGroup.forType(this.guardComparator);
DiagnosticGroup singleton = DiagnosticGroup.forType(this.guards);
DiagnosticGroup singleton = DiagnosticGroup.forType();
DiagnosticGroup singleton = DiagnosticGroup.forType(singleton, type);
DiagnosticGroup singleton = DiagnosticGroup.forType(group, type);
DiagnosticGroup singleton = DiagnosticGroup.forType(this.orderOfAddition, type);
DiagnosticGroup singleton = DiagnosticGroup.forType(this.numberOfAdds, type);
DiagnosticGroup singleton = DiagnosticGroup.forType(this.guardComparator, type);
DiagnosticGroup singleton = DiagnosticGroup.forType(this.guards, type);
DiagnosticGroup singleton = DiagnosticGroup.forType(type, singleton);
DiagnosticGroup singleton = DiagnosticGroup.forType(type, group);
DiagnosticGroup singleton = DiagnosticGroup.forType(type, this.orderOfAddition);
DiagnosticGroup singleton = DiagnosticGroup.forType(type, this.numberOfAdds);
DiagnosticGroup singleton = DiagnosticGroup.forType(type, this.guardComparator);
DiagnosticGroup singleton = DiagnosticGroup.forType(type, this.guards);
02:04:14.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:15.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:15.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:16.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:16.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:17.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:17.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:17.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:17.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:18.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:18.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:19.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:19.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:20.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:20.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:21.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:21.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:22.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:22.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:22.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:22.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:23.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:23.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:24.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:24.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:25.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:25.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:26.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:26.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:26.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:26.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:27.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:27.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:28.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:28.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:29.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:29.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:30.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
DiagnosticGroup singleton = singleton.forType(type);
DiagnosticGroup singleton = type.forType(type);
DiagnosticGroup singleton = group.forType(type);
DiagnosticGroup singleton = this.orderOfAddition.forType(type);
DiagnosticGroup singleton = this.numberOfAdds.forType(type);
DiagnosticGroup singleton = this.guardComparator.forType(type);
DiagnosticGroup singleton = this.guards.forType(type);
02:04:30.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:30.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:30.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:31.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:31.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:32.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:32.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:33.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:33.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:34.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:34.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:34.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:34.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:35.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (type != null) {


}

02:04:35.721 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:36.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (type == null) {
    return true;
}

if (type == null) {
    return false;
}

if (type == null) {
    throw new IllegalArgumentException("Empty variable: " + type);
}

02:04:36.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:37.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:37.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:38.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:38.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:38.971 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

02:04:38.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:39.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:39.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.ComposeWarningsGuard ===118
02:04:39.774 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (DiagnosticType type : group.getTypes()) {
      DiagnosticGroup singleton = DiagnosticGroup.forType(type);

      for (WarningsGuard guard : guards) {
        if (guard.disables(singleton)) {
          continue nextSingleton;
        } else if (guard.enables(singleton)) {
          return false;
        }
      }

      return false;
    }
if (group != null) {


}

02:04:39.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:40.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (group == null) {
    return true;
}

if (group == null) {
    return false;
}

if (group == null) {
    throw new IllegalArgumentException("Empty variable: " + group);
}

02:04:40.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:41.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:41.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:42.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:42.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:42.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

02:04:42.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:43.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:43.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DiagnosticGroup ===75
02:04:43.763 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return singletons.get(type);
return singletons.get(this.types);
return singletons.get(this.name);
return singletons.get();
return singletons.get(this.types, type);
return singletons.get(this.name, type);
return singletons.get(type, this.types);
return singletons.get(type, this.name);
02:04:43.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:44.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:44.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:45.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:45.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:45.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:45.945 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:46.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:46.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:47.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:47.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:48.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:48.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:48.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return getTypes().get(type);
return toString().get(type);
02:04:48.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:49.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:49.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:50.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return singletons.get(true, type);
return singletons.get(false, type);
return singletons.get(type, true);
return singletons.get(type, false);
02:04:50.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:51.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:51.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:51.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:51.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:52.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:52.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:53.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (singletons != null) {


}

if (type != null) {


}

02:04:53.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:53.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:53.910 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:54.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (singletons == null) {
    return null;
}

if (singletons == null) {
    throw new IllegalArgumentException("Empty variable: " + singletons);
}

if (type == null) {
    return null;
}

if (type == null) {
    throw new IllegalArgumentException("Empty variable: " + type);
}

02:04:54.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:55.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:55.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:56.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:56.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:56.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:56.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:57.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

02:04:57.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:58.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:58.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DiagnosticGroup ===72
02:04:58.269 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (!singletons.containsKey(type)) {
      singletons.put(type, new DiagnosticGroup(type));
    }
if (singletons != null) {


}

if (type != null) {


}

02:04:58.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:58.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:04:58.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:59.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (singletons == null) {
    return null;
}

if (singletons == null) {
    throw new IllegalArgumentException("Empty variable: " + singletons);
}

if (type == null) {
    return null;
}

if (type == null) {
    throw new IllegalArgumentException("Empty variable: " + type);
}

02:04:59.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:00.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:00.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:01.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:01.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:01.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:01.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:02.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

    return singletons.get(type);
	if (!singletons.containsKey(type)) {
      singletons.put(type, new DiagnosticGroup(type));
    }

MOVE-BUGGY-STATEMENT
02:05:02.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:03.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

02:05:03.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:04.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:04.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DiagnosticGroup ===120
02:05:04.065 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
02:05:04.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:04.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

02:05:04.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:05.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:05.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DiagnosticGroup ===119
02:05:05.488 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (!matches(type)) {
        return false;
      }
if (type != null) {


}

02:05:05.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:06.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (type == null) {
    return true;
}

if (type == null) {
    return false;
}

if (type == null) {
    throw new IllegalArgumentException("Empty variable: " + type);
}

02:05:06.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:06.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:06.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:07.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:07.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:08.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

02:05:08.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:09.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:09.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DiagnosticGroup ===118
02:05:09.143 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (DiagnosticType type : group.types) {
      if (!matches(type)) {
        return false;
      }
    }

    return true;
	for (DiagnosticType type : group.types) {
      if (!matches(type)) {
        return false;
      }
    }

MOVE-BUGGY-STATEMENT
02:05:09.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:09.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

02:05:09.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:10.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:10.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.parsing.TypeSafeDispatcher ===144
02:05:10.636 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return processInfixExpression((InfixExpression) node);
return processInfixExpression(node, (InfixExpression) node);
return processInfixExpression((InfixExpression) node, node);
02:05:10.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:11.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:11.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:12.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
return processInfixExpression(true, (InfixExpression) node);
return processInfixExpression(false, (InfixExpression) node);
return processInfixExpression((InfixExpression) node, true);
return processInfixExpression((InfixExpression) node, false);
02:05:12.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:13.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:13.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:14.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:14.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:14.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:14.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:15.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (node != null) {


}

02:05:15.822 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:16.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
if (node == null) {
    return null;
}

if (node == null) {
    throw new IllegalArgumentException("Empty variable: " + node);
}

02:05:16.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:17.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:17.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:17.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 

02:05:17.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:05:18.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-44 ---Fixer: fix fail because of failed compiling! 
02:05:18.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.parsing.IRFactory ===80
02:05:18.808 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
IRFactory {

  static final String SUSPICIOUS_COMMENT_WARNING =
      "Non-JSDoc comment has annotations. " +
      "Did you mean to start it with '/**'?";

  private final String sourceString;
  private final StaticSourceFile sourceFile;
  private final String sourceName;
  private final Config config;
  private final ErrorReporter errorReporter;
  private final TransformDispatcher transformDispatcher;

  // non-static for thread safety
  private final Set<String> ALLOWED_DIRECTIVES = Sets.newHashSet("use strict");

  private static final Set<String> ES5_RESERVED_KEYWORDS =
      ImmutableSet.of(
          // From Section 7.6.1.2
          "class", "const", "enum", "export", "extends", "import", "super");
  private static final Set<String> ES5_STRICT_RESERVED_KEYWORDS =
      ImmutableSet.of(
          // From Section 7.6.1.2
          "class", "const", "enum", "export", "extends", "import", "super",
          "implements", "interface", "let", "package", "private", "protected",
          "public", "static", "yield");

  private final Set<String> reservedKeywords;
  private final Set<Comment> parsedComments = Sets.newHashSet();

  // @license text gets appended onto the fileLevelJsDocBuilder as found,
  // and stored in JSDocInfo for placeholder node.
  Node rootNodeJsDocHolder = new Node(Token.SCRIPT);
  Node.FileLevelJsDocBuilder fileLevelJsDocBuilder =
      rootNodeJsDocHolder.getJsDocBuilderForNode();
  JSDocInfo fileOverviewInfo = null;

  // Use a template node for properties set on all nodes to minimize the
  // memory footprint associated with these.
  private Node templateNode;

  // TODO(johnlenz): Consider creating a template pool for ORIGINALNAME_PROP.

  private IRFactory(String sourceString,
                    StaticSourceFile sourceFile,
                    Config config,
                    ErrorReporter errorReporter) {
    this.sourceString = sourceString;
    this.sourceFile = sourceFile;

    // Sometimes this will be null in tests.
    this.sourceName = sourceFile == null ? null : sourceFile.getName();

    this.config = config;
    this.errorReporter = errorReporter;
    this.transformDispatcher = new TransformDispatcher();
    // The template node properties are applied to all nodes in this transform.
    this.templateNode = createTemplateNode();

    switch (config.languageMode) {
      case ECMASCRIPT3:
        // Reserved words are handled by the Rhino parser.
        reservedKeywords = null;
        break;
      case ECMASCRIPT5:
        reservedKeywords = ES5_RESERVED_KEYWORDS;
        break;
      case ECMASCRIPT5_STRICT:
        reservedKeywords = ES5_STRICT_RESERVED_KEYWORDS;
        break;
      default:
        throw new IllegalStateException("unknown language mode");
    }
  }

  // Create a template node to use as a source of common attributes, this allows
  // the prop structure to be shared among all the node from this source file.
  // This reduces the cost of these properties to O(nodes) to O(files).
  private Node createTemplateNode() {
    // The Node type choice is arbitrary.
    Node templateNode = new Node(Token.SCRIPT);
    templateNode.setStaticSourceFile(sourceFile);
    return templateNode;
  }

  public static Node transformTree(AstRoot node,
                                   StaticSourceFile sourceFile,
                                   String sourceString,
                                   Config config,
                                   ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, sourceFile,
        config, errorReporter);
    Node irNode = irFactory.transform(node);

    if (node.getComments() != null) {
      for (Comment comment : node.getComments()) {
        if (comment.getCommentType() == CommentType.JSDOC &&
            !irFactory.parsedComments.contains(comment)) {
          irFactory.handlePossibleFileOverviewJsDoc(comment, irNode);
        } else if (comment.getCommentType() == CommentType.BLOCK_COMMENT) {
          irFactory.handleBlockComment(comment);
        }
      }
    }

    irFactory.setFileOverviewJsDoc(irNode);

    return irNode;
  }

  private void setFileOverviewJsDoc(Node irNode) {
    // Only after we've seen all @fileoverview entries, attach the
    // last one to the root node, and copy the found license strings
    // to that node.
    JSDocInfo rootNodeJsDoc = rootNodeJsDocHolder.getJSDocInfo();
    if (rootNodeJsDoc != null) {
      irNode.setJSDocInfo(rootNodeJsDoc);
      rootNodeJsDoc.setAssociatedNode(irNode);
    }

    if (fileOverviewInfo != null) {
      if ((irNode.getJSDocInfo() != null) &&
          (irNode.getJSDocInfo().getLicense() != null)) {
        fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());
      }
      irNode.setJSDocInfo(fileOverviewInfo);
      fileOverviewInfo.setAssociatedNode(irNode);
    }
  }

  private Node transformBlock(AstNode node) {
    Node irNode = transform(node);
    if (!irNode.isBlock()) {
      if (irNode.isEmpty()) {
        irNode.setType(Token.BLOCK);
        irNode.setWasEmptyNode(true);
      } else {
        Node newBlock = newNode(Token.BLOCK, irNode);
        newBlock.setLineno(irNode.getLineno());
        newBlock.setCharno(irNode.getCharno());
        maybeSetLengthFrom(newBlock, node);
        irNode = newBlock;
      }
    }
    return irNode;
  }

  /**
   * Check to see if the given block comment looks like it should be JSDoc.
   */
  private void handleBlockComment(Comment comment) {
    String value = comment.getValue();
    if (value.indexOf("/* @") != -1 ||
        value.indexOf("\n * @") != -1) {
      errorReporter.warning(
          SUSPICIOUS_COMMENT_WARNING,
          sourceName,
          comment.getLineno(), "", 0);
    }
  }

  /**
   * @return true if the jsDocParser represents a fileoverview.
   */
  private boolean handlePossibleFileOverviewJsDoc(
      JsDocInfoParser jsDocParser) {
    if (jsDocParser.getFileOverviewJSDocInfo() != fileOverviewInfo) {
      fileOverviewInfo = jsDocParser.getFileOverviewJSDocInfo();
      return true;
    }
    return false;
  }

  private void handlePossibleFileOverviewJsDoc(Comment comment, Node irNode) {
    JsDocInfoParser jsDocParser = createJsDocInfoParser(comment, irNode);
    parsedComments.add(comment);
    handlePossibleFileOverviewJsDoc(jsDocParser);
  }

  private JSDocInfo handleJsDoc(AstNode node, Node irNode) {
    Comment comment = node.getJsDocNode();
    if (comment != null) {
      JsDocInfoParser jsDocParser = createJsDocInfoParser(comment, irNode);
      parsedComments.add(comment);
      if (!handlePossibleFileOverviewJsDoc(jsDocParser)) {
        return jsDocParser.retrieveAndResetParsedJSDocInfo();
      }
    }
    return null;
  }

  private Node transform(AstNode node) {
    Node irNode = justTransform(node);
    JSDocInfo jsDocInfo = handleJsDoc(node, irNode);
    if (jsDocInfo != null) {
      irNode.setJSDocInfo(jsDocInfo);
    }
    setSourceInfo(irNode, node);
    return irNode;
  }

  private Node transformNameAsString(Name node) {
    Node irNode = transformDispatcher.processName(node, true);
    JSDocInfo jsDocInfo = handleJsDoc(node, irNode);
    if (jsDocInfo != null) {
      irNode.setJSDocInfo(jsDocInfo);
    }
    setSourceInfo(irNode, node);
    return irNode;
  }

  private Node transformNumberAsString(NumberLiteral literalNode) {
    Node irNode = newStringNode(getStringValue(literalNode.getNumber()));
    JSDocInfo jsDocInfo = handleJsDoc(literalNode, irNode);
    if (jsDocInfo != null) {
      irNode.setJSDocInfo(jsDocInfo);
    }
    setSourceInfo(irNode, literalNode);
    return irNode;
  }

  private static String getStringValue(double value) {
    long longValue = (long) value;

    // Return "1" instead of "1.0"
    if (longValue == value) {
      return Long.toString(longValue);
    } else {
      return Double.toString(value);
    }
  }

  private void setSourceInfo(Node irNode, AstNode node) {
    if (irNode.getLineno() == -1) {
      // If we didn't already set the line, then set it now. This avoids
      // cases like ParenthesizedExpression where we just return a previous
      // node, but don't want the new node to get its parent's line number.
      int lineno = node.getLineno();
      irNode.setLineno(lineno);
      int charno = position2charno(node.getAbsolutePosition());
      irNode.setCharno(charno);
      maybeSetLengthFrom(irNode, node);
    }
  }

  /**
   * Creates a JsDocInfoParser and parses the JsDoc string.
   *
   * Used both for handling individual JSDoc comments and for handling
   * file-level JSDoc comments (@fileoverview and @license).
   *
   * @param node The JsDoc Comment node to parse.
   * @param irNode
   * @return A JSDocInfoParser. Will contain either fileoverview jsdoc, or
   *     normal jsdoc, or no jsdoc (if the method parses to the wrong level).
   */
  private JsDocInfoParser createJsDocInfoParser(Comment node, Node irNode) {
    String comment = node.getValue();
    int lineno = node.getLineno();
    int position = node.getAbsolutePosition();

    // The JsDocInfoParser expects the comment without the initial '/**'.
    int numOpeningChars = 3;
    JsDocInfoParser jsdocParser =
      new JsDocInfoParser(
          new JsDocTokenStream(comment.substring(numOpeningChars),
                               lineno,
                               position2charno(position) + numOpeningChars),
          node,
          irNode,
          config,
          errorReporter);
    jsdocParser.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);
    jsdocParser.setFileOverviewJSDocInfo(fileOverviewInfo);
    jsdocParser.parse();
    return jsdocParser;
  }

  // Set the length on the node if we're in IDE mode.
  private void maybeSetLengthFrom(Node node, AstNode source) {
    if (config.isIdeMode) {
      node.setLength(source.getLength());
    }
  }

  private int position2charno(int position) {
    int lineIndex = sourceString.lastIndexOf('\n', position);
    if (lineIndex == -1) {
      return position;
    } else {
      // Subtract one for initial position being 0.
      return position - lineIndex - 1;
    }
  }

  private Node justTransform(AstNode node) {
    return transformDispatcher.process(node);
  }

  private class TransformDispatcher extends TypeSafeDispatcher<Node> {
    private Node processGeneric(
        com.google.javascript.jscomp.mozilla.rhino.Node n) {
      Node node = newNode(transformTokenType(n.getType()));
      for (com.google.javascript.jscomp.mozilla.rhino.Node child : n) {
        node.addChildToBack(transform((AstNode)child));
      }
      return node;
    }

    /**
     * Transforms the given node and then sets its type to Token.STRING if it
     * was Token.NAME. If its type was already Token.STRING, then quotes it.
     * Used for properties, as the old AST uses String tokens, while the new one
     * uses Name tokens for unquoted strings. For example, in
     * var o = {'a' : 1, b: 2};
     * the string 'a' is quoted, while the name b is turned into a string, but
     * unquoted.
     */
    private Node transformAsString(AstNode n) {
      Node ret;
      if (n instanceof Name) {
        ret = transformNameAsString((Name)n);
      } else if (n instanceof NumberLiteral) {
        ret = transformNumberAsString((NumberLiteral)n);
        ret.putBooleanProp(Node.QUOTED_PROP, true);
      } else {
        ret = transform(n);
        ret.putBooleanProp(Node.QUOTED_PROP, true);
      }
      Preconditions.checkState(ret.isString());
      return ret;
    }

    @Override
    Node processArrayLiteral(ArrayLiteral literalNode) {
      if (literalNode.isDestructuring()) {
        reportDestructuringAssign(literalNode);
      }

      Node node = newNode(Token.ARRAYLIT);
      for (AstNode child : literalNode.getElements()) {
        Node c = transform(child);
        node.addChildToBack(c);
      }
      return node;
    }

    @Override
    Node processAssignment(Assignment assignmentNode) {
      Node assign = processInfixExpression(assignmentNode);
      Node target = assign.getFirstChild();
      if (!validAssignmentTarget(target)) {
        errorReporter.error(
          "invalid assignment target",
          sourceName,
          target.getLineno(), "", 0);
      }
      return assign;
    }

    @Override
    Node processAstRoot(AstRoot rootNode) {
      Node node = newNode(Token.SCRIPT);
      for (com.google.javascript.jscomp.mozilla.rhino.Node child : rootNode) {
        node.addChildToBack(transform((AstNode)child));
      }
      parseDirectives(node);
      return node;
    }

    /**
     * Parse the directives, encode them in the AST, and remove their nodes.
     *
     * For information on ES5 directives, see section 14.1 of
     * Ecma-262, Edition 5.
     *
     * It would be nice if Rhino would eventually take care of this for
     * us, but right now their directive-processing is a one-off.
     */
    private void parseDirectives(Node node) {
      // Remove all the directives, and encode them in the AST.
      Set<String> directives = null;
      while (isDirective(node.getFirstChild())) {
        String directive = node.removeFirstChild().getFirstChild().getString();
        if (directives == null) {
          directives = Sets.newHashSet(directive);
        } else {
          directives.add(directive);
        }
      }

      if (directives != null) {
        node.setDirectives(directives);
      }
    }

    private boolean isDirective(Node n) {
      if (n == null) return false;

      int nType = n.getType();
      return nType == Token.EXPR_RESULT &&
          n.getFirstChild().isString() &&
          ALLOWED_DIRECTIVES.contains(n.getFirstChild().getString());
    }

    @Override
    Node processBlock(Block blockNode) {
      return processGeneric(blockNode);
    }

    @Override
    Node processBreakStatement(BreakStatement statementNode) {
      Node node = newNode(Token.BREAK);
      if (statementNode.getBreakLabel() != null) {
        Node labelName = transform(statementNode.getBreakLabel());
        // Change the NAME to LABEL_NAME
        labelName.setType(Token.LABEL_NAME);
        node.addChildToBack(labelName);
      }
      return node;
    }

    @Override
    Node processCatchClause(CatchClause clauseNode) {
      AstNode catchVar = clauseNode.getVarName();
      Node node = newNode(Token.CATCH, transform(catchVar));
      if (clauseNode.getCatchCondition() != null) {
        errorReporter.error(
            "Catch clauses are not supported",
            sourceName,
            clauseNode.getCatchCondition().getLineno(), "", 0);
      }
      node.addChildToBack(transformBlock(clauseNode.getBody()));
      return node;
    }

    @Override
    Node processConditionalExpression(ConditionalExpression exprNode) {
      return newNode(
          Token.HOOK,
          transform(exprNode.getTestExpression()),
          transform(exprNode.getTrueExpression()),
          transform(exprNode.getFalseExpression()));
    }

    @Override
    Node processContinueStatement(ContinueStatement statementNode) {
      Node node = newNode(Token.CONTINUE);
      if (statementNode.getLabel() != null) {
        Node labelName = transform(statementNode.getLabel());
        // Change the NAME to LABEL_NAME
        labelName.setType(Token.LABEL_NAME);
        node.addChildToBack(labelName);
      }
      return node;
    }

    @Override
    Node processDoLoop(DoLoop loopNode) {
      return newNode(
          Token.DO,
          transformBlock(loopNode.getBody()),
          transform(loopNode.getCondition()));
    }

    @Override
    Node processElementGet(ElementGet getNode) {
      return newNode(
          Token.GETELEM,
          transform(getNode.getTarget()),
          transform(getNode.getElement()));
    }

    @Override
    Node processEmptyExpression(EmptyExpression exprNode) {
      Node node = newNode(Token.EMPTY);
      return node;
    }

    @Override
    Node processExpressionStatement(ExpressionStatement statementNode) {
      Node node = newNode(transformTokenType(statementNode.getType()));
      node.addChildToBack(transform(statementNode.getExpression()));
      return node;
    }

    @Override
    Node processForInLoop(ForInLoop loopNode) {
      return newNode(
          Token.FOR,
          transform(loopNode.getIterator()),
          transform(loopNode.getIteratedObject()),
          transformBlock(loopNode.getBody()));
    }

    @Override
    Node processForLoop(ForLoop loopNode) {
      Node node = newNode(
          Token.FOR,
          transform(loopNode.getInitializer()),
          transform(loopNode.getCondition()),
          transform(loopNode.getIncrement()));
      node.addChildToBack(transformBlock(loopNode.getBody()));
      return node;
    }

    @Override
    Node processFunctionCall(FunctionCall callNode) {
      Node node = newNode(transformTokenType(callNode.getType()),
                           transform(callNode.getTarget()));
      for (AstNode child : callNode.getArguments()) {
        node.addChildToBack(transform(child));
      }

      node.setLineno(node.getFirstChild().getLineno());
      node.setCharno(node.getFirstChild().getCharno());
      maybeSetLengthFrom(node, callNode);
      return node;
    }

    @Override
    Node processFunctionNode(FunctionNode functionNode) {
      Name name = functionNode.getFunctionName();
      Boolean isUnnamedFunction = false;
      if (name == null) {
        int functionType = functionNode.getFunctionType();
        if (functionType != FunctionNode.FUNCTION_EXPRESSION) {
          errorReporter.error(
            "unnamed function statement",
            sourceName,
            functionNode.getLineno(), "", 0);
        }
        name = new Name();
        name.setIdentifier("");
        isUnnamedFunction = true;
      }
      Node node = newNode(Token.FUNCTION);
      Node newName = transform(name);
      if (isUnnamedFunction) {
        // Old Rhino tagged the empty name node with the line number of the
        // declaration.
        newName.setLineno(functionNode.getLineno());
        // TODO(bowdidge) Mark line number of paren correctly.
        // Same problem as below - the left paren might not be on the
        // same line as the function keyword.
        int lpColumn = functionNode.getAbsolutePosition() +
            functionNode.getLp();
        newName.setCharno(position2charno(lpColumn));
        maybeSetLengthFrom(newName, name);
      }

      node.addChildToBack(newName);
      Node lp = newNode(Token.PARAM_LIST);
      // The left paren's complicated because it's not represented by an
      // AstNode, so there's nothing that has the actual line number that it
      // appeared on.  We know the paren has to appear on the same line as the
      // function name (or else a semicolon will be inserted.)  If there's no
      // function name, assume the paren was on the same line as the function.
      // TODO(bowdidge): Mark line number of paren correctly.
      Name fnName = functionNode.getFunctionName();
      if (fnName != null) {
        lp.setLineno(fnName.getLineno());
      } else {
        lp.setLineno(functionNode.getLineno());
      }
      int lparenCharno = functionNode.getLp() +
          functionNode.getAbsolutePosition();

      lp.setCharno(position2charno(lparenCharno));
      for (AstNode param : functionNode.getParams()) {
        lp.addChildToBack(transform(param));
      }
      node.addChildToBack(lp);

      Node bodyNode = transform(functionNode.getBody());
      parseDirectives(bodyNode);
      node.addChildToBack(bodyNode);
     return node;
    }

    @Override
    Node processIfStatement(IfStatement statementNode) {
      Node node = newNode(Token.IF);
      node.addChildToBack(transform(statementNode.getCondition()));
      node.addChildToBack(transformBlock(statementNode.getThenPart()));
      if (statementNode.getElsePart() != null) {
        node.addChildToBack(transformBlock(statementNode.getElsePart()));
      }
      return node;
    }

    @Override
    Node processInfixExpression(InfixExpression exprNode) {
      Node n =  newNode(
          transformTokenType(exprNode.getType()),
          transform(exprNode.getLeft()),
          transform(exprNode.getRight()));
      n.setLineno(exprNode.getLineno());
      n.setCharno(position2charno(exprNode.getAbsolutePosition()));
      maybeSetLengthFrom(n, exprNode);
      return n;
    }

    @Override
    Node processKeywordLiteral(KeywordLiteral literalNode) {
      return newNode(transformTokenType(literalNode.getType()));
    }

    @Override
    Node processLabel(Label labelNode) {
      return newStringNode(Token.LABEL_NAME, labelNode.getName());
    }

    @Override
    Node processLabeledStatement(LabeledStatement statementNode) {
      Node node = newNode(Token.LABEL);
      Node prev = null;
      Node cur = node;
      for (Label label : statementNode.getLabels()) {
        if (prev != null) {
          prev.addChildToBack(cur);
        }
        cur.addChildToBack(transform(label));

        cur.setLineno(label.getLineno());
        maybeSetLengthFrom(cur, label);

        int clauseAbsolutePosition =
            position2charno(label.getAbsolutePosition());
        cur.setCharno(clauseAbsolutePosition);

        prev = cur;
        cur = newNode(Token.LABEL);
      }
      prev.addChildToBack(transform(statementNode.getStatement()));
      return node;
    }

    @Override
    Node processName(Name nameNode) {
      return processName(nameNode, false);
    }

    Node processName(Name nameNode, boolean asString) {
      if (asString) {
        return newStringNode(Token.STRING, nameNode.getIdentifier());
      } else {
        if (isReservedKeyword(nameNode.getIdentifier())) {
          errorReporter.error(
            "identifier is a reserved word",
            sourceName,
            nameNode.getLineno(), "", 0);
        }
        return newStringNode(Token.NAME, nameNode.getIdentifier());
      }
    }

    /**
     * @return Whether the
     */
    private boolean isReservedKeyword(String identifier) {
      return reservedKeywords != null && reservedKeywords.contains(identifier);
    }

    @Override
    Node processNewExpression(NewExpression exprNode) {
      return processFunctionCall(exprNode);
    }

    @Override
    Node processNumberLiteral(NumberLiteral literalNode) {
      return newNumberNode(literalNode.getNumber());
    }

    @Override
    Node processObjectLiteral(ObjectLiteral literalNode) {
      if (literalNode.isDestructuring()) {
        reportDestructuringAssign(literalNode);
      }

      Node node = newNode(Token.OBJECTLIT);
      for (ObjectProperty el : literalNode.getElements()) {
        if (config.languageMode == LanguageMode.ECMASCRIPT3) {
          if (el.isGetter()) {
            reportGetter(el);
            continue;
          } else if (el.isSetter()) {
            reportSetter(el);
            continue;
          }
        }

        Node key = transformAsString(el.getLeft());
        Node value = transform(el.getRight());
        if (el.isGetter()) {
          key.setType(Token.GETTER_DEF);
          Preconditions.checkState(value.isFunction());
          if (getFnParamNode(value).hasChildren()) {
            reportGetterParam(el.getLeft());
          }
        } else if (el.isSetter()) {
          key.setType(Token.SETTER_DEF);
          Preconditions.checkState(value.isFunction());
          if (!getFnParamNode(value).hasOneChild()) {
            reportSetterParam(el.getLeft());
          }
        }
        key.addChildToFront(value);
        node.addChildToBack(key);
      }
      return node;
    }

    /**
     * @param fnNode The function.
     * @return The Node containing the Function parameters.
     */
   Node getFnParamNode(Node fnNode) {
     // Function NODE: [ FUNCTION -> NAME, LP -> ARG1, ARG2, ... ]
     Preconditions.checkArgument(fnNode.isFunction());
     return fnNode.getFirstChild().getNext();
   }

    @Override
    Node processObjectProperty(ObjectProperty propertyNode) {
      return processInfixExpression(propertyNode);
    }

    @Override
    Node processParenthesizedExpression(ParenthesizedExpression exprNode) {
      Node node = transform(exprNode.getExpression());
      node.putProp(Node.PARENTHESIZED_PROP, Boolean.TRUE);
      return node;
    }

    @Override
    Node processPropertyGet(PropertyGet getNode) {
      Node leftChild = transform(getNode.getTarget());
      Node newNode = newNode(
          Token.GETPROP, leftChild, transformAsString(getNode.getProperty()));
      newNode.setLineno(leftChild.getLineno());
      newNode.setCharno(leftChild.getCharno());
      maybeSetLengthFrom(newNode, getNode);
      return newNode;
    }

    @Override
    Node processRegExpLiteral(RegExpLiteral literalNode) {
      Node literalStringNode = newStringNode(literalNode.getValue());
      // assume it's on the same line.
      literalStringNode.setLineno(literalNode.getLineno());
      maybeSetLengthFrom(literalStringNode, literalNode);
      Node node = newNode(Token.REGEXP, literalStringNode);
      String flags = literalNode.getFlags();
      if (flags != null && !flags.isEmpty()) {
        Node flagsNode = newStringNode(flags);
        // Assume the flags are on the same line as the literal node.
        flagsNode.setLineno(literalNode.getLineno());
        maybeSetLengthFrom(flagsNode, literalNode);
        node.addChildToBack(flagsNode);
      }
      return node;
    }

    @Override
    Node processReturnStatement(ReturnStatement statementNode) {
      Node node = newNode(Token.RETURN);
      if (statementNode.getReturnValue() != null) {
        node.addChildToBack(transform(statementNode.getReturnValue()));
      }
      return node;
    }

    @Override
    Node processScope(Scope scopeNode) {
      return processGeneric(scopeNode);
    }

    @Override
    Node processStringLiteral(StringLiteral literalNode) {
      String value = literalNode.getValue();
      Node n = newStringNode(value);
      if (value.indexOf('\u000B') != -1) {
        // NOTE(nicksantos): In JavaScript, there are 3 ways to
        // represent a vertical tab: \v, \x0B, \u000B.
        // The \v notation was added later, and is not understood
        // on IE. So we need to preserve it as-is. This is really
        // obnoxious, because we do not have a good way to represent
        // how the original string was encoded without making the
        // representation of strings much more complicated.
        //
        // To handle this, we look at the original source test, and
        // mark the string as \v-encoded or not. If a string is
        // \v encoded, then all the vertical tabs in that string
        // will be encoded with a \v.
        int start = literalNode.getAbsolutePosition();
        int end = start + literalNode.getLength();
        if (start < sourceString.length() &&
            (sourceString.substring(
                 start, Math.min(sourceString.length(), end))
             .indexOf("\\v") != -1)) {
          n.putBooleanProp(Node.SLASH_V, true);
        }
      }
      return n;
    }

    @Override
    Node processSwitchCase(SwitchCase caseNode) {
      Node node;
      if (caseNode.isDefault()) {
        node = newNode(Token.DEFAULT_CASE);
      } else {
        AstNode expr = caseNode.getExpression();
        node = newNode(Token.CASE, transform(expr));
      }
      Node block = newNode(Token.BLOCK);
      block.putBooleanProp(Node.SYNTHETIC_BLOCK_PROP, true);
      block.setLineno(caseNode.getLineno());
      block.setCharno(position2charno(caseNode.getAbsolutePosition()));
      maybeSetLengthFrom(block, caseNode);
      if (caseNode.getStatements() != null) {
        for (AstNode child : caseNode.getStatements()) {
          block.addChildToBack(transform(child));
        }
      }
      node.addChildToBack(block);
      return node;
    }

    @Override
    Node processSwitchStatement(SwitchStatement statementNode) {
      Node node = newNode(Token.SWITCH,
          transform(statementNode.getExpression()));
      for (AstNode child : statementNode.getCases()) {
        node.addChildToBack(transform(child));
      }
      return node;
    }

    @Override
    Node processThrowStatement(ThrowStatement statementNode) {
      return newNode(Token.THROW,
          transform(statementNode.getExpression()));
    }

    @Override
    Node processTryStatement(TryStatement statementNode) {
      Node node = newNode(Token.TRY,
          transformBlock(statementNode.getTryBlock()));
      Node block = newNode(Token.BLOCK);
      boolean lineSet = false;

      for (CatchClause cc : statementNode.getCatchClauses()) {
        // Mark the enclosing block at the same line as the first catch
        // clause.
        if (lineSet == false) {
          block.setLineno(cc.getLineno());
          maybeSetLengthFrom(block, cc);
          lineSet = true;
        }
        block.addChildToBack(transform(cc));
      }
      node.addChildToBack(block);

      AstNode finallyBlock = statementNode.getFinallyBlock();
      if (finallyBlock != null) {
        node.addChildToBack(transformBlock(finallyBlock));
      }

      // If we didn't set the line on the catch clause, then
      // we've got an empty catch clause.  Set its line to be the same
      // as the finally block (to match Old Rhino's behavior.)
      if ((lineSet == false) && (finallyBlock != null)) {
        block.setLineno(finallyBlock.getLineno());
        maybeSetLengthFrom(block, finallyBlock);
      }

      return node;
    }

    @Override
    Node processUnaryExpression(UnaryExpression exprNode) {
      int type = transformTokenType(exprNode.getType());
      Node operand = transform(exprNode.getOperand());
      if (type == Token.NEG && operand.isNumber()) {
        operand.setDouble(-operand.getDouble());
        return operand;
      } else {
        if (type == Token.DELPROP &&
            !(operand.isGetProp() ||
              operand.isGetElem() ||
              operand.isName())) {
          String msg =
              "Invalid delete operand. Only properties can be deleted.";
          errorReporter.error(
              msg,
              sourceName,
              operand.getLineno(), "", 0);
        } else  if (type == Token.INC || type == Token.DEC) {
          if (!validAssignmentTarget(operand)) {
            String msg = (type == Token.INC)
                ? "invalid increment target"
                : "invalid decrement target";
            errorReporter.error(
                msg,
                sourceName,
                operand.getLineno(), "", 0);
          }
        }

        Node node = newNode(type, operand);
        if (exprNode.isPostfix()) {
          node.putBooleanProp(Node.INCRDECR_PROP, true);
        }
        return node;
      }
    }

    private boolean validAssignmentTarget(Node target) {
      switch (target.getType()) {
        case Token.NAME:
        case Token.GETPROP:
        case Token.GETELEM:
          return true;
      }
      return false;
    }

    @Override
    Node processVariableDeclaration(VariableDeclaration declarationNode) {
      if (!config.acceptConstKeyword && declarationNode.getType() ==
          com.google.javascript.jscomp.mozilla.rhino.Token.CONST) {
        processIllegalToken(declarationNode);
      }

      Node node = newNode(Token.VAR);
      for (VariableInitializer child : declarationNode.getVariables()) {
        node.addChildToBack(transform(child));
      }
      return node;
    }

    @Override
    Node processVariableInitializer(VariableInitializer initializerNode) {
      Node node = transform(initializerNode.getTarget());
      if (initializerNode.getInitializer() != null) {
        Node initalizer = transform(initializerNode.getInitializer());
        node.addChildToBack(initalizer);
      }
      return node;
    }

    @Override
    Node processWhileLoop(WhileLoop loopNode) {
      return newNode(
          Token.WHILE,
          transform(loopNode.getCondition()),
          transformBlock(loopNode.getBody()));
    }

    @Override
    Node processWithStatement(WithStatement statementNode) {
      return newNode(
          Token.WITH,
          transform(statementNode.getExpression()),
          transformBlock(statementNode.getStatement()));
    }

    @Override
    Node processIllegalToken(AstNode node) {
      errorReporter.error(
          "Unsupported syntax: " +
          com.google.javascript.jscomp.mozilla.rhino.Token.typeToName(
              node.getType()),
          sourceName,
          node.getLineno(), "", 0);
      return newNode(Token.EMPTY);
    }

    void reportDestructuringAssign(AstNode node) {
      errorReporter.error(
          "destructuring assignment forbidden",
          sourceName,
          node.getLineno(), "", 0);
    }

    void reportGetter(AstNode node) {
      errorReporter.error(
          "getters are not supported in Internet Explorer",
          sourceName,
          node.getLineno(), "", 0);
    }

    void reportSetter(AstNode node) {
      errorReporter.error(
          "setters are not supported in Internet Explorer",
          sourceName,
          node.getLineno(), "", 0);
    }

    void reportGetterParam(AstNode node) {
      errorReporter.error(
          "getters may not have parameters",
          sourceName,
          node.getLineno(), "", 0);
    }

    void reportSetterParam(AstNode node) {
      errorReporter.error(
          "setters must have exactly one parameter",
          sourceName,
          node.getLineno(), "", 0);
    }
  }

  private static int transformTokenType(int token) {
    switch (token) {
      case com.google.javascript.jscomp.mozilla.rhino.Token.RETURN:
        return Token.RETURN;
      case com.google.javascript.jscomp.mozilla.rhino.Token.BITOR:
        return Token.BITOR;
      case com.google.javascript.jscomp.mozilla.rhino.Token.BITXOR:
        return Token.BITXOR;
      case com.google.javascript.jscomp.mozilla.rhino.Token.BITAND:
        return Token.BITAND;
      case com.google.javascript.jscomp.mozilla.rhino.Token.EQ:
        return Token.EQ;
      case com.google.javascript.jscomp.mozilla.rhino.Token.NE:
        return Token.NE;
      case com.google.javascript.jscomp.mozilla.rhino.Token.LT:
        return Token.LT;
      case com.google.javascript.jscomp.mozilla.rhino.Token.LE:
        return Token.LE;
      case com.google.javascript.jscomp.mozilla.rhino.Token.GT:
        return Token.GT;
      case com.google.javascript.jscomp.mozilla.rhino.Token.GE:
        return Token.GE;
      case com.google.javascript.jscomp.mozilla.rhino.Token.LSH:
        return Token.LSH;
      case com.google.javascript.jscomp.mozilla.rhino.Token.RSH:
        return Token.RSH;
      case com.google.javascript.jscomp.mozilla.rhino.Token.URSH:
        return Token.URSH;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ADD:
        return Token.ADD;
      case com.google.javascript.jscomp.mozilla.rhino.Token.SUB:
        return Token.SUB;
      case com.google.javascript.jscomp.mozilla.rhino.Token.MUL:
        return Token.MUL;
      case com.google.javascript.jscomp.mozilla.rhino.Token.DIV:
        return Token.DIV;
      case com.google.javascript.jscomp.mozilla.rhino.Token.MOD:
        return Token.MOD;
      case com.google.javascript.jscomp.mozilla.rhino.Token.NOT:
        return Token.NOT;
      case com.google.javascript.jscomp.mozilla.rhino.Token.BITNOT:
        return Token.BITNOT;
      case com.google.javascript.jscomp.mozilla.rhino.Token.POS:
        return Token.POS;
      case com.google.javascript.jscomp.mozilla.rhino.Token.NEG:
        return Token.NEG;
      case com.google.javascript.jscomp.mozilla.rhino.Token.NEW:
        return Token.NEW;
      case com.google.javascript.jscomp.mozilla.rhino.Token.DELPROP:
        return Token.DELPROP;
      case com.google.javascript.jscomp.mozilla.rhino.Token.TYPEOF:
        return Token.TYPEOF;
      case com.google.javascript.jscomp.mozilla.rhino.Token.GETPROP:
        return Token.GETPROP;
      case com.google.javascript.jscomp.mozilla.rhino.Token.GETELEM:
        return Token.GETELEM;
      case com.google.javascript.jscomp.mozilla.rhino.Token.CALL:
        return Token.CALL;
      case com.google.javascript.jscomp.mozilla.rhino.Token.NAME:
        return Token.NAME;
      case com.google.javascript.jscomp.mozilla.rhino.Token.NUMBER:
        return Token.NUMBER;
      case com.google.javascript.jscomp.mozilla.rhino.Token.STRING:
        return Token.STRING;
      case com.google.javascript.jscomp.mozilla.rhino.Token.NULL:
        return Token.NULL;
      case com.google.javascript.jscomp.mozilla.rhino.Token.THIS:
        return Token.THIS;
      case com.google.javascript.jscomp.mozilla.rhino.Token.FALSE:
        return Token.FALSE;
      case com.google.javascript.jscomp.mozilla.rhino.Token.TRUE:
        return Token.TRUE;
      case com.google.javascript.jscomp.mozilla.rhino.Token.SHEQ:
        return Token.SHEQ;
      case com.google.javascript.jscomp.mozilla.rhino.Token.SHNE:
        return Token.SHNE;
      case com.google.javascript.jscomp.mozilla.rhino.Token.REGEXP:
        return Token.REGEXP;
      case com.google.javascript.jscomp.mozilla.rhino.Token.THROW:
        return Token.THROW;
      case com.google.javascript.jscomp.mozilla.rhino.Token.IN:
        return Token.IN;
      case com.google.javascript.jscomp.mozilla.rhino.Token.INSTANCEOF:
        return Token.INSTANCEOF;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ARRAYLIT:
        return Token.ARRAYLIT;
      case com.google.javascript.jscomp.mozilla.rhino.Token.OBJECTLIT:
        return Token.OBJECTLIT;
      case com.google.javascript.jscomp.mozilla.rhino.Token.TRY:
        return Token.TRY;
      // The LP represents a parameter list
      case com.google.javascript.jscomp.mozilla.rhino.Token.LP:
        return Token.PARAM_LIST;
      case com.google.javascript.jscomp.mozilla.rhino.Token.COMMA:
        return Token.COMMA;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN:
        return Token.ASSIGN;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_BITOR:
        return Token.ASSIGN_BITOR;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_BITXOR:
        return Token.ASSIGN_BITXOR;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_BITAND:
        return Token.ASSIGN_BITAND;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_LSH:
        return Token.ASSIGN_LSH;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_RSH:
        return Token.ASSIGN_RSH;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_URSH:
        return Token.ASSIGN_URSH;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_ADD:
        return Token.ASSIGN_ADD;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_SUB:
        return Token.ASSIGN_SUB;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_MUL:
        return Token.ASSIGN_MUL;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_DIV:
        return Token.ASSIGN_DIV;
      case com.google.javascript.jscomp.mozilla.rhino.Token.ASSIGN_MOD:
        return Token.ASSIGN_MOD;
      case com.google.javascript.jscomp.mozilla.rhino.Token.HOOK:
        return Token.HOOK;
      case com.google.javascript.jscomp.mozilla.rhino.Token.OR:
        return Token.OR;
      case com.google.javascript.jscomp.mozilla.rhino.Token.AND:
        return Token.AND;
      case com.google.javascript.jscomp.mozilla.rhino.Token.INC:
        return Token.INC;
      case com.google.javascript.jscomp.mozilla.rhino.Token.DEC:
        return Token.DEC;
      case com.google.javascript.jscomp.mozilla.rhino.Token.FUNCTION:
        return Token.FUNCTION;
      case com.google.javascript.jscomp.mozilla.rhino.Token.IF:
        return Token.IF;
      case com.google.javascript.jscomp.mozilla.rhino.Token.SWITCH:
        return Token.SWITCH;
      case com.google.javascript.jscomp.mozilla.rhino.Token.CASE:
        return Token.CASE;
      case com.google.javascript.jscomp.mozilla.rhino.Token.DEFAULT:
        return Token.DEFAULT_CASE;
      case com.google.javascript.jscomp.mozilla.rhino.Token.WHILE:
        return Token.WHILE;
      case com.google.javascript.jscomp.mozilla.rhino.Token.DO:
        return Token.DO;
      case com.google.javascript.jscomp.mozilla.rhino.Token.FOR:
        return Token.FOR;
      case com.google.javascript.jscomp.mozilla.rhino.Token.BREAK:
        return Token.BREAK;
      case com.google.javascript.jscomp.mozilla.rhino.Token.CONTINUE:
        return Token.CONTINUE;
      case com.google.javascript.jscomp.mozilla.rhino.Token.VAR:
        return Token.VAR;
      case com.google.javascript.jscomp.mozilla.rhino.Token.WITH:
        return Token.WITH;
      case com.google.javascript.jscomp.mozilla.rhino.Token.CATCH:
        return Token.CATCH;
      case com.google.javascript.jscomp.mozilla.rhino.Token.VOID:
        return Token.VOID;
      case com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:
        return Token.EMPTY;
      case com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:
        return Token.BLOCK;
      case com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:
        return Token.LABEL;
      case com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:
      case com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:
        return Token.EXPR_RESULT;
      case com.google.javascript.jscomp.mozilla.rhino.Token.SCRIPT:
        return Token.SCRIPT;
      case com.google.javascript.jscomp.mozilla.rhino.Token.GET:
        return Token.GETTER_DEF;
      case com.google.javascript.jscomp.mozilla.rhino.Token.SET:
        return Token.SETTER_DEF;
      case com.google.javascript.jscomp.mozilla.rhino.Token.CONST:
        return Token.CONST;
      case com.google.javascript.jscomp.mozilla.rhino.Token.DEBUGGER:
        return Token.DEBUGGER;
    }

    // Token without name
    throw new IllegalStateException(String.valueOf(token));
  }

  // Simple helper to create nodes and set the initial node properties.
  private Node newNode(int type) {
    return new Node(type).clonePropsFrom(templateNode);
  }

  private Node newNode(int type, Node child1) {
    return new Node(type, child1).clonePropsFrom(templateNode);
  }

  private Node newNode(int type, Node child1, Node child2) {
    return new Node(type, child1, child2).clonePropsFrom(templateNode);
  }

  private Node newNode(int type, Node child1, Node child2, Node child3) {
    return new Node(type, child1, child2, child3).clonePropsFrom(templateNode);
  }

  private Node newStringNode(String value) {
    return IR.string(value).clonePropsFrom(templateNode);
  }

  private Node newStringNode(int type, String value) {
    return Node.newString(type, value).clonePropsFrom(templateNode);
  }

  private Node newNumberNode(Double value) {
    return IR.number(value).clonePropsFrom(templateNode);
  }
}
