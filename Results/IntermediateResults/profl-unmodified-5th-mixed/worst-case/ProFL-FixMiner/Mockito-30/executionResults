Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Mockito-30
02:40:24.570 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Mockito/30.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Mockito/30.txt
02:40:27.070 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
02:40:27.082 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Mockito-30/generalSusInfo.profl
02:40:27.096 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Mockito-30/aggregatedSusInfo.profl
02:40:27.102 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Fixing Beginning======
02:40:27.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.exceptions.Reporter ===439
02:40:27.971 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
throw new SmartNullPointerException(join(
                "You have a NullPointerException here:",
                new Location(),
                "Because this method was *not* stubbed correctly:",
                location,
                ""
                ));
if (location != null) {


}

02:40:27.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:40:28.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:40:28.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:43:12.604 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage]
02:43:12.604 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage]
02:43:12.604 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage
02:43:12.604 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
02:43:12.605 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
02:43:12.699 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Mockito-30/aggregatedSusInfo.profl
02:43:12.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:smartNullPointerException(Lorg/mockito/internal/debugging/Location;)V in org.mockito.exceptions.Reporter:439
02:43:12.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Mockito-30
if (location == null) {
    return;
}

if (location == null) {
    throw new IllegalArgumentException("Empty variable: " + location);
}

02:43:12.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:43:13.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:43:13.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:45:56.961 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage]
02:45:56.961 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage]
02:45:56.961 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage
02:45:56.961 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
02:45:56.961 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
02:45:57.072 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Mockito-30/aggregatedSusInfo.profl
02:45:57.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:smartNullPointerException(Lorg/mockito/internal/debugging/Location;)V in org.mockito.exceptions.Reporter:439
02:45:57.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Mockito-30
02:45:57.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:45:57.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:45:57.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:48:40.156 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage]
02:48:40.156 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage]
02:48:40.156 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage
02:48:40.156 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
02:48:40.156 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
02:48:42.007 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Mockito-30/aggregatedSusInfo.profl
02:48:42.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:smartNullPointerException(Lorg/mockito/internal/debugging/Location;)V in org.mockito.exceptions.Reporter:439
02:48:42.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Mockito-30

02:48:42.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:48:42.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:48:42.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:51:25.158 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage]
02:51:25.158 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 6, [- org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage, - org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldReturnAnObjectThatFailsOnAnyMethodInvocationForNonPrimitives, - org.mockitousage.basicapi.MocksCreationTest::shouldCombineMockNameAndSmartNulls, - org.mockitousage.stubbing.SmartNullsStubbingTest::shouldThrowSmartNPEWhenMethodReturnsClass, - org.mockitousage.stubbing.SmartNullsStubbingTest::shouldSmartNPEPointToUnstubbedCall, - org.mockitousage.stubbing.SmartNullsStubbingTest::shouldThrowSmartNPEWhenMethodReturnsInterface]
02:51:25.158 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage
02:51:25.158 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldReturnAnObjectThatFailsOnAnyMethodInvocationForNonPrimitives
02:51:25.158 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.basicapi.MocksCreationTest::shouldCombineMockNameAndSmartNulls
02:51:25.158 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.stubbing.SmartNullsStubbingTest::shouldThrowSmartNPEWhenMethodReturnsClass
02:51:25.159 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.stubbing.SmartNullsStubbingTest::shouldSmartNPEPointToUnstubbedCall
02:51:25.159 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.stubbing.SmartNullsStubbingTest::shouldThrowSmartNPEWhenMethodReturnsInterface
02:51:25.159 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=5, pp=Unknown
02:51:25.159 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
02:52:00.149 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Mockito-30/aggregatedSusInfo.profl
02:52:00.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:smartNullPointerException(Lorg/mockito/internal/debugging/Location;)V in org.mockito.exceptions.Reporter:439
02:52:00.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 6 Mockito-30
02:52:00.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls ===75
02:52:00.175 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
return ClassImposterizer.INSTANCE.imposterise(defaultReturnValue, new ThrowingInterceptor(invocation), type);
return ClassImposterizer.INSTANCE.imposterise(invocation, new ThrowingInterceptor(invocation), type);
return ClassImposterizer.INSTANCE.imposterise(this.delegate, new ThrowingInterceptor(invocation), type);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), defaultReturnValue);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), invocation);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), this.delegate);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), );
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), defaultReturnValue, type);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), invocation, type);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), this.delegate, type);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type, defaultReturnValue);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type, invocation);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type, this.delegate);
02:52:00.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:00.884 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:00.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:01.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:01.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:02.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:02.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:02.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:02.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:03.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:03.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:04.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:04.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:04.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:04.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:05.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:05.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:06.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:06.119 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:06.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:06.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:07.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:07.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:08.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:08.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:08.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
return ClassImposterizer.INSTANCE.imposterise(true, new ThrowingInterceptor(invocation), type);
return ClassImposterizer.INSTANCE.imposterise(false, new ThrowingInterceptor(invocation), type);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), true, type);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), false, type);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type, true);
return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type, false);
02:52:08.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:09.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:09.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:10.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:10.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:10.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:10.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:11.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:11.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:12.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:12.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:13.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (invocation != null) {


}

if (type != null) {


}

02:52:13.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:13.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:13.731 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:14.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (invocation == null) {
    return null;
}

if (invocation == null) {
    throw new IllegalArgumentException("Empty variable: " + invocation);
}

if (type == null) {
    return null;
}

if (type == null) {
    throw new IllegalArgumentException("Empty variable: " + type);
}

02:52:14.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:15.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:15.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:15.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:15.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:16.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:16.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:17.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 

02:52:17.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:17.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:17.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls ===74
02:52:17.924 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (ClassImposterizer.INSTANCE.canImposterise(type)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
if (ClassImposterizer.INSTANCE.canImposterise(defaultReturnValue)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
if (ClassImposterizer.INSTANCE.canImposterise(invocation)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
if (ClassImposterizer.INSTANCE.canImposterise(this.delegate)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
if (ClassImposterizer.INSTANCE.canImposterise()) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
if (ClassImposterizer.INSTANCE.canImposterise(defaultReturnValue, type)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
if (ClassImposterizer.INSTANCE.canImposterise(invocation, type)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
if (ClassImposterizer.INSTANCE.canImposterise(this.delegate, type)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
if (ClassImposterizer.INSTANCE.canImposterise(type, defaultReturnValue)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
if (ClassImposterizer.INSTANCE.canImposterise(type, invocation)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
if (ClassImposterizer.INSTANCE.canImposterise(type, this.delegate)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
02:52:17.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:18.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:18.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:19.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:19.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:19.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:19.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:20.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:20.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:21.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:21.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:22.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:22.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:22.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:22.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:23.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:23.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:24.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:24.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:24.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (type != null) {


}

02:52:24.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:25.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (type == null) {
    return null;
}

if (type == null) {
    throw new IllegalArgumentException("Empty variable: " + type);
}

02:52:25.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:26.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:26.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:26.984 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (ClassImposterizer.INSTANCE.canImposterise(type)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
	Object defaultReturnValue = delegate.answer(invocation);
        if (defaultReturnValue != null) {
            return defaultReturnValue;
        }
        Class<?> type = invocation.getMethod().getReturnType();
        
null
if (ClassImposterizer.INSTANCE.canImposterise(type)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
	if (defaultReturnValue != null) {
            return defaultReturnValue;
        }
        Class<?> type = invocation.getMethod().getReturnType();
        
null
if (ClassImposterizer.INSTANCE.canImposterise(type)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
	Class<?> type = invocation.getMethod().getReturnType();
        
null

        return null;
	if (ClassImposterizer.INSTANCE.canImposterise(type)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }

MOVE-BUGGY-STATEMENT
02:52:26.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:27.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:27.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:28.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:28.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:29.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:29.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:29.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 

02:52:29.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:30.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:30.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls ===73
02:52:30.452 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Class<?> type = invocation.getMethod().getReturnType();
Class<?> type = invocation.getMethod().getReturnType(type);
Class<?> type = invocation.getMethod().getReturnType(defaultReturnValue);
Class<?> type = invocation.getMethod().getReturnType(invocation);
Class<?> type = invocation.getMethod().getReturnType(this.delegate);
02:52:30.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:31.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:31.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:31.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:31.862 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:32.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:32.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:33.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
Class<?> type = type.getMethod().getReturnType();
Class<?> type = defaultReturnValue.getMethod().getReturnType();
Class<?> type = this.delegate.getMethod().getReturnType();
02:52:33.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:33.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:33.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:34.664 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:34.664 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:35.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (invocation != null) {


}

02:52:35.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:36.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (invocation == null) {
    return null;
}

if (invocation == null) {
    throw new IllegalArgumentException("Empty variable: " + invocation);
}

02:52:36.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:36.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:36.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:37.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 

02:52:37.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:38.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:38.133 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues ===72
02:52:38.146 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return null;

02:52:38.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:38.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:38.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls ===70
02:52:38.849 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (defaultReturnValue != null) {
            return defaultReturnValue;
        }
if (defaultReturnValue == null) {
            return defaultReturnValue;
        }
02:52:38.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:39.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (defaultReturnValue != null) {


}

02:52:39.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:40.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (defaultReturnValue == null) {
    return null;
}

if (defaultReturnValue == null) {
    throw new IllegalArgumentException("Empty variable: " + defaultReturnValue);
}

02:52:40.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:40.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:40.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:41.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (defaultReturnValue != null) {
            return defaultReturnValue;
        }
	Object defaultReturnValue = delegate.answer(invocation);
        
null

        Class<?> type = invocation.getMethod().getReturnType();
	if (defaultReturnValue != null) {
            return defaultReturnValue;
        }

MOVE-BUGGY-STATEMENT

        Class<?> type = invocation.getMethod().getReturnType();
        if (ClassImposterizer.INSTANCE.canImposterise(type)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
	if (defaultReturnValue != null) {
            return defaultReturnValue;
        }

MOVE-BUGGY-STATEMENT

        Class<?> type = invocation.getMethod().getReturnType();
        if (ClassImposterizer.INSTANCE.canImposterise(type)) {
            return ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);
        }
        return null;
	if (defaultReturnValue != null) {
            return defaultReturnValue;
        }

MOVE-BUGGY-STATEMENT
02:52:41.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:42.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:42.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:43.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:43.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:43.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:43.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:44.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 

02:52:44.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:45.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:45.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls ===69
02:52:45.097 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Object defaultReturnValue = delegate.answer(invocation);
Object defaultReturnValue = delegate.answer(defaultReturnValue);
Object defaultReturnValue = delegate.answer();
Object defaultReturnValue = delegate.answer(defaultReturnValue, invocation);
Object defaultReturnValue = delegate.answer(invocation, defaultReturnValue);
02:52:45.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:45.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:45.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:46.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:46.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:47.134 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:47.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:47.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
Object defaultReturnValue = defaultReturnValue.answer(invocation);
Object defaultReturnValue = invocation.answer(invocation);
Object defaultReturnValue = this.delegate.answer(invocation);
02:52:47.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:48.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:48.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:49.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:49.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:49.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (delegate != null) {


}

if (invocation != null) {


}

02:52:49.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:50.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:50.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:51.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (delegate == null) {
    return null;
}

if (delegate == null) {
    throw new IllegalArgumentException("Empty variable: " + delegate);
}

if (invocation == null) {
    return null;
}

if (invocation == null) {
    throw new IllegalArgumentException("Empty variable: " + invocation);
}

02:52:51.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:51.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:51.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:52.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:52.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:53.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:53.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:54.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 

02:52:54.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:54.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
02:52:54.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues ===68
02:52:54.713 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (type.isArray()) {
            Class<?> componenetType = type.getComponentType();
            return Array.newInstance(componenetType, 0);
        }
if (type.isArray(this.delegate)) {
            Class<?> componenetType = type.getComponentType();
            return Array.newInstance(componenetType, 0);
        }
02:52:54.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:55.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-30 ---Fixer: fix fail because of failed compiling! 
if (type != null && type.isArray()) {
            Class<?> componenetType = type.getComponentType();
            return Array.newInstance(componenetType, 0);
        }
if (type != null || type.isArray()) {
            Class<?> componenetType = type.getComponentType();
            return Array.newInstance(componenetType, 0);
        }
02:52:55.365 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:52:56.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:52:56.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:55:37.633 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage]
02:55:37.633 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage]
02:55:37.633 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage
02:55:37.633 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
02:55:37.633 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
03:08:55.576 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Mockito-30/aggregatedSusInfo.profl
03:08:55.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues:returnValueFor(Ljava/lang/Class;)Ljava/lang/Object; in org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues:68
03:08:55.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Mockito-30
03:08:55.577 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:08:56.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:08:56.289 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
03:11:37.616 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage]
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 13, [- org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersWhenCallingAMethodWithArgs, - org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldReturnAnObjectThatAllowsObjectMethods, - org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage, - org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldReturnAnObjectThatFailsOnAnyMethodInvocationForNonPrimitives, - org.mockitousage.annotation.AnnotationsTest::shouldInitMocksWithGivenSettings, - org.mockitousage.basicapi.MocksCreationTest::shouldCombineMockNameAndSmartNulls, - org.mockitousage.basicapi.ResetTest::shouldMaintainPreviousDefaultAnswer, - org.mockitousage.bugs.StubbingMocksThatAreConfiguredToReturnMocksTest::shouldAllowStubbingMocksConfiguredWithRETURNS_MOCKS, - org.mockitousage.stubbing.SmartNullsStubbingTest::shouldThrowSmartNPEWhenMethodReturnsClass, - org.mockitousage.stubbing.SmartNullsStubbingTest::shouldSmartNPEPointToUnstubbedCall, - org.mockitousage.stubbing.SmartNullsStubbingTest::shouldThrowSmartNPEWhenMethodReturnsInterface, - org.mockitousage.stubbing.SmartNullsStubbingTest::shouldNotThrowSmartNullPointerOnObjectMethods, - org.mockitousage.stubbing.SmartNullsStubbingTest::shouldNotThrowSmartNullPointerOnToString]
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersWhenCallingAMethodWithArgs
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldReturnAnObjectThatAllowsObjectMethods
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldPrintTheParametersOnSmartNullPointerExceptionMessage
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::shouldReturnAnObjectThatFailsOnAnyMethodInvocationForNonPrimitives
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.annotation.AnnotationsTest::shouldInitMocksWithGivenSettings
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.basicapi.MocksCreationTest::shouldCombineMockNameAndSmartNulls
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.basicapi.ResetTest::shouldMaintainPreviousDefaultAnswer
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.bugs.StubbingMocksThatAreConfiguredToReturnMocksTest::shouldAllowStubbingMocksConfiguredWithRETURNS_MOCKS
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.stubbing.SmartNullsStubbingTest::shouldThrowSmartNPEWhenMethodReturnsClass
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.stubbing.SmartNullsStubbingTest::shouldSmartNPEPointToUnstubbedCall
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.stubbing.SmartNullsStubbingTest::shouldThrowSmartNPEWhenMethodReturnsInterface
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.stubbing.SmartNullsStubbingTest::shouldNotThrowSmartNullPointerOnObjectMethods
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.stubbing.SmartNullsStubbingTest::shouldNotThrowSmartNullPointerOnToString
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=12, pp=Unknown
03:11:37.617 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
