Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Math-16
10:53:31.374 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-16 Failed Tests: 2
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Math/16.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Math/16.txt
10:53:37.130 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
10:53:37.144 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-16/generalSusInfo.profl
10:53:37.149 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-16/aggregatedSusInfo.profl
10:53:37.150 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Fixing Beginning======
10:53:37.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math3.util.FastMath ===393
10:53:38.602 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
if (x >= 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
if (x <= 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
if (x < 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:53:38.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
10:53:39.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
10:53:39.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
10:54:36.322 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:54:36.322 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:54:36.322 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:54:36.322 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:54:36.322 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
10:54:36.323 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
10:54:36.345 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-16/aggregatedSusInfo.profl
10:54:36.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
10:54:36.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Math-16
10:54:36.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
10:54:37.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
10:54:37.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
10:55:34.524 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 22, [- org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhDefinition, - org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testMatrixFunction, - org.apache.commons.math3.complex.ComplexTest::testCos, - org.apache.commons.math3.complex.ComplexTest::testSin, - org.apache.commons.math3.complex.ComplexTest::testCosh, - org.apache.commons.math3.complex.ComplexTest::testSinh, - org.apache.commons.math3.complex.ComplexTest::testTanhCritical, - org.apache.commons.math3.complex.ComplexTest::testTanCritical, - org.apache.commons.math3.complex.ComplexTest::testCoshInf, - org.apache.commons.math3.complex.ComplexTest::testCosInf, - org.apache.commons.math3.complex.ComplexTest::testSinhInf, - org.apache.commons.math3.complex.ComplexTest::testSinInf, - org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35], - org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative, - org.apache.commons.math3.util.FastMathTest::testHyperbolic, - org.apache.commons.math3.util.FastMathTest::testCoshAccuracy, - org.apache.commons.math3.util.FastMathTest::testHyperbolicInverses]
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhDefinition
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testMatrixFunction
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCos
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSin
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosh
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinh
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testTanhCritical
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testTanCritical
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCoshInf
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosInf
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinhInf
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinInf
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35]
10:55:34.525 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:55:34.526 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:55:34.526 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testHyperbolic
10:55:34.526 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testCoshAccuracy
10:55:34.526 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testHyperbolicInverses
10:55:34.526 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=20, pp=Unknown
10:55:34.526 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
10:55:34.540 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-16/aggregatedSusInfo.profl
10:55:34.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
10:55:34.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 22 Math-16
10:55:34.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
10:55:35.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
10:55:35.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
10:56:33.722 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:56:33.722 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 22, [- org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhDefinition, - org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testMatrixFunction, - org.apache.commons.math3.complex.ComplexTest::testCos, - org.apache.commons.math3.complex.ComplexTest::testSin, - org.apache.commons.math3.complex.ComplexTest::testCosh, - org.apache.commons.math3.complex.ComplexTest::testSinh, - org.apache.commons.math3.complex.ComplexTest::testTanhCritical, - org.apache.commons.math3.complex.ComplexTest::testTanCritical, - org.apache.commons.math3.complex.ComplexTest::testCoshInf, - org.apache.commons.math3.complex.ComplexTest::testCosInf, - org.apache.commons.math3.complex.ComplexTest::testSinhInf, - org.apache.commons.math3.complex.ComplexTest::testSinInf, - org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35], - org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative, - org.apache.commons.math3.util.FastMathTest::testHyperbolic, - org.apache.commons.math3.util.FastMathTest::testCoshAccuracy, - org.apache.commons.math3.util.FastMathTest::testHyperbolicInverses]
10:56:33.722 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable
10:56:33.722 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition
10:56:33.722 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh
10:56:33.722 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh
10:56:33.722 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhDefinition
10:56:33.722 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testMatrixFunction
10:56:33.722 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCos
10:56:33.722 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSin
10:56:33.722 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosh
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinh
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testTanhCritical
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testTanCritical
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCoshInf
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosInf
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinhInf
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinInf
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35]
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testHyperbolic
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testCoshAccuracy
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testHyperbolicInverses
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=20, pp=Unknown
10:56:33.723 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
10:56:33.876 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-16/aggregatedSusInfo.profl
10:56:33.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
10:56:33.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 22 Math-16
if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
	if (x != x) {
          return x;
      }

      // cosh[z] = (exp(z) + exp(-z))/2

      // for numbers with magnitude 20 or so,
      // exp(-z) can be ignored in comparison with exp(z)

      
null

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
      double recipb = recip - recipa;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
      double recipb = recip - recipa;

      // Correct for rounding in division
      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
      double recipb = recip - recipa;

      // Correct for rounding in division
      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;
      // Account for yb
      recipb += -yb * recip * recip;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
      double recipb = recip - recipa;

      // Correct for rounding in division
      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;
      // Account for yb
      recipb += -yb * recip * recip;

      // y = y + 1/y
      temp = ya + recipa;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
      double recipb = recip - recipa;

      // Correct for rounding in division
      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;
      // Account for yb
      recipb += -yb * recip * recip;

      // y = y + 1/y
      temp = ya + recipa;
      yb += -(temp - ya - recipa);
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
      double recipb = recip - recipa;

      // Correct for rounding in division
      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;
      // Account for yb
      recipb += -yb * recip * recip;

      // y = y + 1/y
      temp = ya + recipa;
      yb += -(temp - ya - recipa);
      ya = temp;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
      double recipb = recip - recipa;

      // Correct for rounding in division
      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;
      // Account for yb
      recipb += -yb * recip * recip;

      // y = y + 1/y
      temp = ya + recipa;
      yb += -(temp - ya - recipa);
      ya = temp;
      temp = ya + recipb;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
      double recipb = recip - recipa;

      // Correct for rounding in division
      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;
      // Account for yb
      recipb += -yb * recip * recip;

      // y = y + 1/y
      temp = ya + recipa;
      yb += -(temp - ya - recipa);
      ya = temp;
      temp = ya + recipb;
      yb += -(temp - ya - recipb);
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
      double recipb = recip - recipa;

      // Correct for rounding in division
      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;
      // Account for yb
      recipb += -yb * recip * recip;

      // y = y + 1/y
      temp = ya + recipa;
      yb += -(temp - ya - recipa);
      ya = temp;
      temp = ya + recipb;
      yb += -(temp - ya - recipb);
      ya = temp;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
      double recipb = recip - recipa;

      // Correct for rounding in division
      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;
      // Account for yb
      recipb += -yb * recip * recip;

      // y = y + 1/y
      temp = ya + recipa;
      yb += -(temp - ya - recipa);
      ya = temp;
      temp = ya + recipb;
      yb += -(temp - ya - recipb);
      ya = temp;

      double result = ya + yb;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
      double recipb = recip - recipa;

      // Correct for rounding in division
      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;
      // Account for yb
      recipb += -yb * recip * recip;

      // y = y + 1/y
      temp = ya + recipa;
      yb += -(temp - ya - recipa);
      ya = temp;
      temp = ya + recipb;
      yb += -(temp - ya - recipb);
      ya = temp;

      double result = ya + yb;
      result *= 0.5;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT

      if (x < -20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(-x);
      }

      final double hiPrec[] = new double[2];
      if (x < 0.0) {
          x = -x;
      }
      exp(x, 0.0, hiPrec);

      double ya = hiPrec[0] + hiPrec[1];
      double yb = -(ya - hiPrec[0] - hiPrec[1]);

      double temp = ya * HEX_40000000;
      double yaa = ya + temp - temp;
      double yab = ya - yaa;

      // recip = 1/y
      double recip = 1.0/ya;
      temp = recip * HEX_40000000;
      double recipa = recip + temp - temp;
      double recipb = recip - recipa;

      // Correct for rounding in division
      recipb += (1.0 - yaa*recipa - yaa*recipb - yab*recipa - yab*recipb) * recip;
      // Account for yb
      recipb += -yb * recip * recip;

      // y = y + 1/y
      temp = ya + recipa;
      yb += -(temp - ya - recipa);
      ya = temp;
      temp = ya + recipb;
      yb += -(temp - ya - recipb);
      ya = temp;

      double result = ya + yb;
      result *= 0.5;
      return result;
	if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }

MOVE-BUGGY-STATEMENT
10:56:33.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
10:56:34.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
10:56:34.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
10:57:30.923 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:57:30.923 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:57:30.923 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:57:30.923 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:57:30.923 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
10:57:30.923 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
10:57:33.045 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-16/aggregatedSusInfo.profl
10:57:33.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
10:57:33.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Math-16
10:57:33.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
10:57:33.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
10:57:33.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
10:58:30.507 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:58:30.507 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:58:30.507 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:58:30.507 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:58:30.507 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
10:58:30.507 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
10:59:00.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-16/aggregatedSusInfo.profl
10:59:00.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
10:59:00.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Math-16
10:59:00.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
10:59:01.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
10:59:01.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
10:59:58.190 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:59:58.190 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:59:58.190 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:59:58.190 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:59:58.190 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
10:59:58.190 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
11:07:08.633 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-16/aggregatedSusInfo.profl
11:07:08.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
11:07:08.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Math-16
11:07:08.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
11:07:09.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
11:07:09.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
11:08:07.286 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
11:08:07.287 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
11:08:07.287 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
11:08:07.287 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
11:08:07.287 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
11:08:07.287 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
12:51:44.072 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-16/aggregatedSusInfo.profl
12:51:44.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
12:51:44.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Math-16
12:51:44.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:51:45.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
12:51:45.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
12:52:41.836 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
12:52:41.836 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
12:52:41.836 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
12:52:41.836 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
12:52:41.836 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
12:52:41.836 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
