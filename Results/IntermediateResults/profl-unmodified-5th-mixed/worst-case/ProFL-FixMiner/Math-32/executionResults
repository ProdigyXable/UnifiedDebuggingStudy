Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Math-32
15:24:40.390 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Math/32.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Math/32.txt
15:24:45.641 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
15:24:45.676 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-32/generalSusInfo.profl
15:24:45.677 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Fixing Beginning======
15:24:45.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet ===330
15:24:46.430 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return null;

15:24:46.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:24:47.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
15:24:47.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
15:25:33.579 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780]
15:25:33.579 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780]
15:25:33.579 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780
15:25:33.579 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
15:25:33.579 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
15:25:33.616 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-32/aggregatedSusInfo.profl
15:25:33.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:followLoop(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;)Ljava/util/List; in org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:330
15:25:33.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-32
15:25:33.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math3.geometry.partitioning.utilities.AVLTree ===167
15:25:33.801 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return null;

15:25:33.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:25:34.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:25:34.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet ===136
15:25:34.659 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if ((Boolean) tree.getAttribute()) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
if (tree != null) {


}

15:25:34.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:25:35.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
15:25:35.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
15:26:20.279 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780]
15:26:20.279 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780]
15:26:20.279 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780
15:26:20.279 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
15:26:20.279 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
15:26:20.487 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-32/aggregatedSusInfo.profl
15:26:20.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:computeGeometricalProperties()V in org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:136
15:26:20.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-32
if (tree == null) {
    return;
}

if (tree == null) {
    throw new IllegalArgumentException("Empty variable: " + tree);
}

15:26:20.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:26:21.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
15:26:21.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
15:27:05.786 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780]
15:27:05.787 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780]
15:27:05.787 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780
15:27:05.787 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
15:27:05.787 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
15:27:07.227 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-32/aggregatedSusInfo.profl
15:27:07.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:computeGeometricalProperties()V in org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:136
15:27:07.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-32
15:27:07.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:27:08.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
15:27:08.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
15:27:53.171 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780]
15:27:53.171 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780]
15:27:53.171 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780
15:27:53.171 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
15:27:53.171 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
15:28:19.597 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-32/aggregatedSusInfo.profl
15:28:19.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:computeGeometricalProperties()V in org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:136
15:28:19.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-32
if ((Boolean) tree.getAttribute()) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
	final BSPTree<Euclidean2D> tree = getTree(false);
            
null

        } else if (v[0][0] == null) {
            // there is at least one open-loop: the polygon is infinite
            setSize(Double.POSITIVE_INFINITY);
            setBarycenter(Vector2D.NaN);
        } else {
            // all loops are closed, we compute some integrals around the shape

            double sum  = 0;
            double sumX = 0;
            double sumY = 0;

            for (Vector2D[] loop : v) {
                double x1 = loop[loop.length - 1].getX();
                double y1 = loop[loop.length - 1].getY();
                for (final Vector2D point : loop) {
                    final double x0 = x1;
                    final double y0 = y1;
                    x1 = point.getX();
                    y1 = point.getY();
                    final double factor = x0 * y1 - y0 * x1;
                    sum  += factor;
                    sumX += factor * (x0 + x1);
                    sumY += factor * (y0 + y1);
                }
            }

            if (sum < 0) {
                // the polygon as a finite outside surrounded by an infinite inside
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(sum / 2);
                setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum)));
            }

        }
	if ((Boolean) tree.getAttribute()) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }

MOVE-BUGGY-STATEMENT
15:28:19.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:28:20.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:28:20.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:28:21.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 

15:28:21.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:28:22.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
15:28:22.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
15:29:05.781 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780]
15:29:05.781 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780]
15:29:05.782 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testIssue780
15:29:05.782 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
15:29:05.782 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
15:40:43.692 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-32/aggregatedSusInfo.profl
15:40:43.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:computeGeometricalProperties()V in org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:136
15:40:43.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-32
if ((Boolean) tree.getAttribute(v)) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
if ((Boolean) tree.getAttribute(this.vertices)) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
if ((Boolean) tree.getAttribute(true)) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
if ((Boolean) tree.getAttribute(false)) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
if ((Boolean) tree.getCut()) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
if ((Boolean) tree.copySelf()) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
if ((Boolean) tree.getPlus()) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
if ((Boolean) tree.getMinus()) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
if ((Boolean) tree.getParent()) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
if ((Boolean) tree.condense()) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
if ((Boolean) getVertices().getAttribute()) {
                // the instance covers the whole space
                setSize(Double.POSITIVE_INFINITY);
                setBarycenter(Vector2D.NaN);
            } else {
                setSize(0);
                setBarycenter(new Vector2D(0, 0));
            }
15:40:43.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:40:44.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:40:44.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:40:45.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:40:45.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:40:46.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:40:46.219 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:40:47.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:40:47.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:40:47.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:40:47.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:40:48.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:40:48.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:40:49.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:40:49.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:40:50.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:40:50.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:40:51.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:40:51.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:40:52.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:40:52.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:40:52.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-32 ---Fixer: fix fail because of failed compiling! 
15:40:52.953 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Finish off Fixing======
