Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-56
01:54:05.713 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 Failed Tests: 3
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/56.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/56.txt
01:57:12.235 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
01:57:12.267 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-56/generalSusInfo.profl
01:57:12.295 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-56/aggregatedSusInfo.profl
01:57:12.298 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Fixing Beginning======
01:57:12.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===141
01:57:12.901 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
throw new RuntimeException(msg.toString());
if (msg != null) {


}

01:57:12.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:13.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (msg == null) {
    return null;
}

if (msg == null) {
    throw new IllegalArgumentException("Empty variable: " + msg);
}

01:57:13.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:14.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:14.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:15.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
throw new RuntimeException(msg.toString());
	StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      
null
throw new RuntimeException(msg.toString());
	MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      
null
throw new RuntimeException(msg.toString());
	for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      
null
01:57:15.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:16.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:16.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:17.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:17.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:17.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

01:57:17.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:18.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:18.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===139
01:57:18.764 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
msg.append(formatter.formatError(e));
msg.append(true, formatter.formatError(e));
msg.append(false, formatter.formatError(e));
msg.append(formatter.formatError(e), true);
msg.append(formatter.formatError(e), false);
01:57:18.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:19.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:19.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:20.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:20.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:21.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:21.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:21.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
msg.append(e, formatter.formatError(e));
msg.append(formatter, formatter.formatError(e));
msg.append(errors, formatter.formatError(e));
msg.append(input, formatter.formatError(e));
msg.append(extractCompilerPass, formatter.formatError(e));
msg.append(compiler, formatter.formatError(e));
msg.append(inputs, formatter.formatError(e));
msg.append(this.style, formatter.formatError(e));
msg.append(this.idGenerator, formatter.formatError(e));
msg.append(formatter.formatError(e), e);
msg.append(formatter.formatError(e), formatter);
msg.append(formatter.formatError(e), errors);
msg.append(formatter.formatError(e), input);
msg.append(formatter.formatError(e), extractCompilerPass);
msg.append(formatter.formatError(e), compiler);
msg.append(formatter.formatError(e), inputs);
msg.append(formatter.formatError(e), this.style);
msg.append(formatter.formatError(e), this.idGenerator);
01:57:21.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:22.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:22.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:23.548 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:23.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:24.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:24.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:25.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:25.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:25.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:25.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:26.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:26.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:27.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:27.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:28.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:28.331 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:29.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:29.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:29.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:29.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:30.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:30.789 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:31.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:31.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:32.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:32.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:33.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:33.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:33.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:33.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:34.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:34.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:35.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:35.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:36.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (msg != null) {


}

if (formatter != null) {


}

if (e != null) {


}

01:57:36.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:37.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:37.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:37.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:37.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:38.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (msg == null) {
    return null;
}

if (msg == null) {
    throw new IllegalArgumentException("Empty variable: " + msg);
}

if (formatter == null) {
    return null;
}

if (formatter == null) {
    throw new IllegalArgumentException("Empty variable: " + formatter);
}

if (e == null) {
    return null;
}

if (e == null) {
    throw new IllegalArgumentException("Empty variable: " + e);
}

01:57:38.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:39.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:39.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:40.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:40.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:41.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:41.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:41.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:41.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:42.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:42.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:43.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

01:57:43.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:44.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:44.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===138
01:57:44.229 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
if (errors != null) {


}

01:57:44.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:45.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (errors == null) {
    return null;
}

if (errors == null) {
    throw new IllegalArgumentException("Empty variable: " + errors);
}

01:57:45.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:45.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:45.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:46.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
	StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      
null
for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
	MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      
null

      throw new RuntimeException(msg.toString());
	for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }

MOVE-BUGGY-STATEMENT
01:57:46.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:47.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:47.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:48.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:48.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:49.048 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

01:57:49.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:49.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:49.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===137
01:57:49.880 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
MessageFormatter formatter = new LightweightMessageFormatter(compiler);
if (compiler != null) {


}

01:57:49.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:50.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (compiler == null) {
    return null;
}

if (compiler == null) {
    throw new IllegalArgumentException("Empty variable: " + compiler);
}

01:57:50.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:51.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:51.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:52.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

01:57:52.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:53.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:53.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===136
01:57:53.164 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
StringBuilder msg = new StringBuilder("JSCompiler errors\n");

01:57:53.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:53.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:53.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.SourceFile ===231
01:57:54.022 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
pos = nextpos + 1;
if (nextpos == 0) {
    new IllegalArgumentException("");
}

if (nextpos != 0) {

    
}

if (nextpos > 0) {

    
}

01:57:54.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:54.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:54.866 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:55.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:55.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:56.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
findLineOffsets();
	pos = nextpos + 1;
pos = nextpos + 1;
	findLineOffsets();
clearCachedSource();
	pos = nextpos + 1;
pos = nextpos + 1;
	clearCachedSource();
01:57:56.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:57.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:57.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:58.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:58.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:58.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:57:58.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:57:59.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
pos = nextpos + 1;
	int nextpos = js.indexOf('\n', pos);
      if (nextpos == -1) {
        return null;
      }
      
null
pos = nextpos + 1;
	if (nextpos == -1) {
        return null;
      }
      
null
01:57:59.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:00.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:00.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:01.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

01:58:01.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:02.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:02.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.SourceFile ===228
01:58:02.440 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (nextpos == -1) {
        return null;
      }
if (nextpos != -1) {
        return null;
      }
01:58:02.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:03.252 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (n == -1) {
        return null;
      }
if (startLine == -1) {
        return null;
      }
if (pos == -1) {
        return null;
      }
if (lineNumber == -1) {
        return null;
      }
01:58:03.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:04.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:04.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:04.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:04.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:05.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:05.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:06.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (nextpos == 0) {
    new IllegalArgumentException("");
}

if (nextpos != 0) {

    
}

if (nextpos > 0) {

    
}

01:58:06.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:07.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:07.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:08.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:08.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:09.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
findLineOffsets();
	if (nextpos == -1) {
        return null;
      }
if (nextpos == -1) {
        return null;
      }
	findLineOffsets();
clearCachedSource();
	if (nextpos == -1) {
        return null;
      }
if (nextpos == -1) {
        return null;
      }
	clearCachedSource();
01:58:09.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:09.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:09.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:10.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:10.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:11.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:11.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:12.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (nextpos == -1) {
        return null;
      }
	int nextpos = js.indexOf('\n', pos);
      
null

      pos = nextpos + 1;
	if (nextpos == -1) {
        return null;
      }

MOVE-BUGGY-STATEMENT
01:58:12.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:13.197 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:13.197 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:14.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

01:58:14.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:14.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:14.896 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.SourceFile ===227
01:58:14.969 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
int nextpos = js.indexOf('\n', pos);

double nextpos = js.indexOf('\n', pos);
float nextpos = js.indexOf('\n', pos);
long nextpos = js.indexOf('\n', pos);
short nextpos = js.indexOf('\n', pos);
byte nextpos = js.indexOf('\n', pos);
01:58:14.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:15.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:15.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:16.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:16.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:17.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:17.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:18.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:18.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:19.197 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
int nextpos = js.lastIndexOf('\n', pos);
01:58:19.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:20.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
int nextpos = js.indexOf(nextpos, '\n', pos);
int nextpos = js.indexOf(n, '\n', pos);
int nextpos = js.indexOf(startLine, '\n', pos);
int nextpos = js.indexOf(lineNumber, '\n', pos);
int nextpos = js.indexOf(SOURCE_EXCERPT_REGION_LENGTH, '\n', pos);
int nextpos = js.indexOf(this.fileName, '\n', pos);
int nextpos = js.indexOf(this.isExternFile, '\n', pos);
int nextpos = js.indexOf(this.originalPath, '\n', pos);
int nextpos = js.indexOf(this.lineOffsets, '\n', pos);
int nextpos = js.indexOf(this.lastOffset, '\n', pos);
int nextpos = js.indexOf(this.lastLine, '\n', pos);
int nextpos = js.indexOf(this.code, '\n', pos);
int nextpos = js.indexOf('\n', nextpos);
int nextpos = js.indexOf('\n', n);
int nextpos = js.indexOf('\n', startLine);
int nextpos = js.indexOf('\n', lineNumber);
int nextpos = js.indexOf('\n', SOURCE_EXCERPT_REGION_LENGTH);
int nextpos = js.indexOf('\n', this.fileName);
int nextpos = js.indexOf('\n', this.isExternFile);
int nextpos = js.indexOf('\n', this.originalPath);
int nextpos = js.indexOf('\n', this.lineOffsets);
int nextpos = js.indexOf('\n', this.lastOffset);
int nextpos = js.indexOf('\n', this.lastLine);
int nextpos = js.indexOf('\n', this.code);
int nextpos = js.indexOf('\n', );
int nextpos = js.indexOf('\n', nextpos, pos);
int nextpos = js.indexOf('\n', n, pos);
int nextpos = js.indexOf('\n', startLine, pos);
int nextpos = js.indexOf('\n', lineNumber, pos);
int nextpos = js.indexOf('\n', SOURCE_EXCERPT_REGION_LENGTH, pos);
int nextpos = js.indexOf('\n', this.fileName, pos);
int nextpos = js.indexOf('\n', this.isExternFile, pos);
int nextpos = js.indexOf('\n', this.originalPath, pos);
int nextpos = js.indexOf('\n', this.lineOffsets, pos);
int nextpos = js.indexOf('\n', this.lastOffset, pos);
int nextpos = js.indexOf('\n', this.lastLine, pos);
int nextpos = js.indexOf('\n', this.code, pos);
int nextpos = js.indexOf('\n', pos, nextpos);
int nextpos = js.indexOf('\n', pos, n);
int nextpos = js.indexOf('\n', pos, startLine);
int nextpos = js.indexOf('\n', pos, lineNumber);
int nextpos = js.indexOf('\n', pos, SOURCE_EXCERPT_REGION_LENGTH);
int nextpos = js.indexOf('\n', pos, this.fileName);
int nextpos = js.indexOf('\n', pos, this.isExternFile);
int nextpos = js.indexOf('\n', pos, this.originalPath);
int nextpos = js.indexOf('\n', pos, this.lineOffsets);
int nextpos = js.indexOf('\n', pos, this.lastOffset);
int nextpos = js.indexOf('\n', pos, this.lastLine);
int nextpos = js.indexOf('\n', pos, this.code);
01:58:20.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:20.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:20.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:21.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:21.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:22.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:22.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:23.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:23.442 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:24.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:24.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:25.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:25.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:25.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:25.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:26.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:26.840 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:27.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:27.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:28.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:28.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:29.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:29.347 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:30.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:30.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:30.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:30.991 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:31.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:31.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:32.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:32.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:33.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:33.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:34.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:34.290 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:35.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:35.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:35.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:35.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:36.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:36.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:37.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:37.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:38.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:38.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:39.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:39.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:40.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:40.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:40.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:40.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:41.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:41.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:42.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:42.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:42.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:42.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:43.753 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:43.753 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:44.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:44.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:45.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:45.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:46.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:46.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:46.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:46.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:47.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:47.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:48.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:48.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:49.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:49.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:50.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:50.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:51.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:51.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:51.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:51.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:52.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:52.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:53.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:53.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:54.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:54.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:55.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:55.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:56.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:56.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:56.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:56.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:57.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:57.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:58.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:58.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:58:59.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:58:59.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:00.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
int nextpos = nextpos.indexOf('\n', pos);
int nextpos = n.indexOf('\n', pos);
int nextpos = startLine.indexOf('\n', pos);
int nextpos = pos.indexOf('\n', pos);
int nextpos = lineNumber.indexOf('\n', pos);
int nextpos = SOURCE_EXCERPT_REGION_LENGTH.indexOf('\n', pos);
int nextpos = this.fileName.indexOf('\n', pos);
int nextpos = this.isExternFile.indexOf('\n', pos);
int nextpos = this.originalPath.indexOf('\n', pos);
int nextpos = this.lineOffsets.indexOf('\n', pos);
int nextpos = this.lastOffset.indexOf('\n', pos);
int nextpos = this.lastLine.indexOf('\n', pos);
int nextpos = this.code.indexOf('\n', pos);
01:59:00.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:01.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:01.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:01.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:01.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:02.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:02.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:03.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:03.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:04.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:04.321 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:05.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:05.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:05.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:05.952 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:06.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:06.781 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:07.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:07.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:08.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:08.400 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:09.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:09.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:10.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:10.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:10.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (js != null) {


}

01:59:10.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:11.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (js == null) {
    return null;
}

if (js == null) {
    throw new IllegalArgumentException("Empty variable: " + js);
}

01:59:11.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:12.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:12.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:13.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (pos == 0) {
    new IllegalArgumentException("");
}

if (pos != 0) {

    
}

if (pos > 0) {

    
}

01:59:13.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:14.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:14.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:15.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:15.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:16.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
findLineOffsets();
	int nextpos = js.indexOf('\n', pos);
int nextpos = js.indexOf('\n', pos);
	findLineOffsets();
clearCachedSource();
	int nextpos = js.indexOf('\n', pos);
int nextpos = js.indexOf('\n', pos);
	clearCachedSource();
01:59:16.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:16.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:16.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:17.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:17.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:18.511 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:18.511 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:19.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

01:59:19.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:20.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:20.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===135
01:59:20.192 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }
if (errors.length >= 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }
if (errors.length <= 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }
if (errors.length < 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }
01:59:20.193 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:20.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:20.958 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:21.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:21.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:22.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }
	Compiler compiler = new Compiler();
    compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());

    ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

    JSError[] errors = compiler.getErrors();
    // Check for errors.
    
null
if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }
	compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());

    ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

    JSError[] errors = compiler.getErrors();
    // Check for errors.
    
null
if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }
	ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

    JSError[] errors = compiler.getErrors();
    // Check for errors.
    
null
if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }
	for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

    JSError[] errors = compiler.getErrors();
    // Check for errors.
    
null
if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }
	JSError[] errors = compiler.getErrors();
    // Check for errors.
    
null


    return extractCompilerPass.getMessages();
	if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }

MOVE-BUGGY-STATEMENT
01:59:22.582 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:23.352 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:23.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:24.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:24.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:24.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:24.903 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:25.674 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:25.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:26.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:26.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:27.257 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

01:59:27.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:28.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:28.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===133
01:59:28.038 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
JSError[] errors = compiler.getErrors();
JSError[] errors = compiler.getMessages();
JSError[] errors = compiler.getWarnings();
01:59:28.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:28.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:28.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:29.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
JSError[] errors = compiler.getErrors(errors);
JSError[] errors = compiler.getErrors(input);
JSError[] errors = compiler.getErrors(extractCompilerPass);
JSError[] errors = compiler.getErrors(inputs);
JSError[] errors = compiler.getErrors(this.style);
JSError[] errors = compiler.getErrors(this.idGenerator);
01:59:29.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:30.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:30.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:31.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:31.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:32.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:32.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:32.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:32.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:33.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:33.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:34.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
JSError[] errors = errors.getErrors();
JSError[] errors = input.getErrors();
JSError[] errors = extractCompilerPass.getErrors();
JSError[] errors = inputs.getErrors();
JSError[] errors = this.style.getErrors();
JSError[] errors = this.idGenerator.getErrors();
01:59:34.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:35.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:35.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:35.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:35.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:36.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:36.755 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:37.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:37.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:38.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:38.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:39.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (compiler != null) {


}

01:59:39.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:39.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (compiler == null) {
    return null;
}

if (compiler == null) {
    throw new IllegalArgumentException("Empty variable: " + compiler);
}

01:59:39.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:40.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:40.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:41.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

01:59:41.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:42.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:42.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===131
01:59:42.217 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }
if (inputs != null) {


}

01:59:42.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:43.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (inputs == null) {
    return null;
}

if (inputs == null) {
    throw new IllegalArgumentException("Empty variable: " + inputs);
}

01:59:43.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:43.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:43.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:44.618 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }
	Compiler compiler = new Compiler();
    compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());

    ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    
null
for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }
	compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());

    ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    
null
for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }
	ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    
null


    JSError[] errors = compiler.getErrors();
	for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

MOVE-BUGGY-STATEMENT


    JSError[] errors = compiler.getErrors();
    // Check for errors.
    if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }
	for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

MOVE-BUGGY-STATEMENT


    JSError[] errors = compiler.getErrors();
    // Check for errors.
    if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }

    return extractCompilerPass.getMessages();
	for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

MOVE-BUGGY-STATEMENT
01:59:44.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:45.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:45.444 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:46.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:46.284 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:47.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:47.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:47.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:47.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:48.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:48.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:49.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

01:59:49.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:50.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:50.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===130
01:59:50.161 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
extractCompilerPass.process(null, root);
extractCompilerPass.process(true, null, root);
extractCompilerPass.process(false, null, root);
extractCompilerPass.process(null, true, root);
extractCompilerPass.process(null, false, root);
extractCompilerPass.process(null, root, true);
extractCompilerPass.process(null, root, false);
01:59:50.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:50.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:50.944 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:51.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:51.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:52.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:52.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:53.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:53.288 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:54.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:54.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:54.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
extractCompilerPass.process(input, null, root);
extractCompilerPass.process(compiler, null, root);
extractCompilerPass.process(inputs, null, root);
extractCompilerPass.process(this.style, null, root);
extractCompilerPass.process(this.idGenerator, null, root);
extractCompilerPass.process(null, input);
extractCompilerPass.process(null, compiler);
extractCompilerPass.process(null, inputs);
extractCompilerPass.process(null, this.style);
extractCompilerPass.process(null, this.idGenerator);
extractCompilerPass.process(null, );
extractCompilerPass.process(null, input, root);
extractCompilerPass.process(null, compiler, root);
extractCompilerPass.process(null, inputs, root);
extractCompilerPass.process(null, this.style, root);
extractCompilerPass.process(null, this.idGenerator, root);
extractCompilerPass.process(null, root, input);
extractCompilerPass.process(null, root, compiler);
extractCompilerPass.process(null, root, inputs);
extractCompilerPass.process(null, root, this.style);
extractCompilerPass.process(null, root, this.idGenerator);
01:59:54.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:55.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:55.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:56.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:56.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:57.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:57.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:58.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:58.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:58.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:58.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:59:59.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
01:59:59.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:00.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:00.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:01.157 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:01.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:01.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:01.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:02.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:02.732 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:03.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:03.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:03.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:03.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:04.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:04.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:05.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:05.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:06.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:06.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:07.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:07.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:07.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:07.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:08.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:08.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:09.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:09.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:10.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:10.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:11.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (extractCompilerPass != null) {


}

if (root != null) {


}

02:00:11.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:11.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:11.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:12.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (extractCompilerPass == null) {
    return null;
}

if (extractCompilerPass == null) {
    throw new IllegalArgumentException("Empty variable: " + extractCompilerPass);
}

if (root == null) {
    return null;
}

if (root == null) {
    throw new IllegalArgumentException("Empty variable: " + root);
}

02:00:12.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:13.404 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:13.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:14.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:14.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:15.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:15.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:15.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
extractCompilerPass.process(null, root);
	Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      
null
02:00:15.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:16.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

02:00:16.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:17.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:17.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===127
02:00:17.363 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Node root = new JsAst(input).getAstRoot(compiler);
Node root = new JsAst(input).getAstRoot(root);
Node root = new JsAst(input).getAstRoot(input);
Node root = new JsAst(input).getAstRoot(extractCompilerPass);
Node root = new JsAst(input).getAstRoot(inputs);
Node root = new JsAst(input).getAstRoot(this.style);
Node root = new JsAst(input).getAstRoot(this.idGenerator);
Node root = new JsAst(input).getAstRoot();
Node root = new JsAst(input).getAstRoot(root, compiler);
Node root = new JsAst(input).getAstRoot(input, compiler);
Node root = new JsAst(input).getAstRoot(extractCompilerPass, compiler);
Node root = new JsAst(input).getAstRoot(inputs, compiler);
Node root = new JsAst(input).getAstRoot(this.style, compiler);
Node root = new JsAst(input).getAstRoot(this.idGenerator, compiler);
Node root = new JsAst(input).getAstRoot(compiler, root);
Node root = new JsAst(input).getAstRoot(compiler, input);
Node root = new JsAst(input).getAstRoot(compiler, extractCompilerPass);
Node root = new JsAst(input).getAstRoot(compiler, inputs);
Node root = new JsAst(input).getAstRoot(compiler, this.style);
Node root = new JsAst(input).getAstRoot(compiler, this.idGenerator);
02:00:17.364 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:18.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:18.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:18.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:18.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:19.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:19.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:20.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:20.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:21.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:21.249 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:22.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:22.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:22.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:22.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:23.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:23.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:24.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:24.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:25.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:25.156 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:25.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:25.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:26.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:26.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:27.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:27.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:28.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:28.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:29.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:29.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:29.945 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:29.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:30.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:30.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:31.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:31.547 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:32.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (input != null) {


}

if (compiler != null) {


}

02:00:32.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:33.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:33.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:33.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (input == null) {
    return null;
}

if (input == null) {
    throw new IllegalArgumentException("Empty variable: " + input);
}

if (compiler == null) {
    return null;
}

if (compiler == null) {
    throw new IllegalArgumentException("Empty variable: " + compiler);
}

02:00:33.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:34.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:34.744 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:35.511 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:35.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:36.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:36.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:37.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

02:00:37.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:37.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:37.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===124
02:00:37.832 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }
if (inputs != null) {


}

02:00:37.833 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:38.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (inputs == null) {
    return null;
}

if (inputs == null) {
    throw new IllegalArgumentException("Empty variable: " + inputs);
}

02:00:38.617 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:39.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:39.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:40.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }
	Compiler compiler = new Compiler();
    compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());

    ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    
null
for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }
	compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());

    ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    
null
for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }
	ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    
null


    JSError[] errors = compiler.getErrors();
	for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

MOVE-BUGGY-STATEMENT


    JSError[] errors = compiler.getErrors();
    // Check for errors.
    if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }
	for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

MOVE-BUGGY-STATEMENT


    JSError[] errors = compiler.getErrors();
    // Check for errors.
    if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }

    return extractCompilerPass.getMessages();
	for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

MOVE-BUGGY-STATEMENT
02:00:40.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:40.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:40.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:41.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:41.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:42.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:42.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:43.376 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:43.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:44.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:44.186 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:44.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

02:00:44.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:45.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:45.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===122
02:00:45.764 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
if (compiler != null) {


}

02:00:45.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:46.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (compiler == null) {
    return null;
}

if (compiler == null) {
    throw new IllegalArgumentException("Empty variable: " + compiler);
}

02:00:46.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:47.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:47.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:48.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

02:00:48.120 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:48.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:48.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===117
02:00:48.938 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.init(
        true, new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.init(
        false, new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.init(
        new JSSourceFile[] {},
        true, Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.init(
        new JSSourceFile[] {},
        false, Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        true, new CompilerOptions());
compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        false, new CompilerOptions());
compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions(), true);
compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions(), false);
02:00:48.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:49.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:49.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:50.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:50.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:51.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:51.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:52.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:52.024 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:52.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:52.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:53.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:53.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:54.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:54.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:55.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
compiler.init(
        inputs, new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.init(
        this.style, new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.init(
        this.idGenerator, new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.init(
        new JSSourceFile[] {},
        inputs, Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.init(
        new JSSourceFile[] {},
        this.style, Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.init(
        new JSSourceFile[] {},
        this.idGenerator, Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        inputs, new CompilerOptions());
compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        this.style, new CompilerOptions());
compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        this.idGenerator, new CompilerOptions());
compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions(), inputs);
compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions(), this.style);
compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions(), this.idGenerator);
02:00:55.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:56.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:56.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:56.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:56.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:57.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:57.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:58.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:58.459 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:00:59.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:00:59.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:00.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:00.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:00.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:00.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:01.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:01.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:02.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:02.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:03.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:03.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:03.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:03.962 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:04.742 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
compiler.runCallable(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.compile(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.compileModules(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.toSource(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
compiler.initModules(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
02:01:04.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:05.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:05.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:06.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:06.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:07.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:07.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:08.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:08.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:08.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (compiler != null) {


}

if (inputs != null) {


}

02:01:08.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:09.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:09.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:10.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (compiler == null) {
    return null;
}

if (compiler == null) {
    throw new IllegalArgumentException("Empty variable: " + compiler);
}

if (inputs == null) {
    return null;
}

if (inputs == null) {
    throw new IllegalArgumentException("Empty variable: " + inputs);
}

02:01:10.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:11.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:11.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:12.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:12.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:12.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:12.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:13.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());
	Compiler compiler = new Compiler();
    
null


    ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
	compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());

MOVE-BUGGY-STATEMENT


    ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }
	compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());

MOVE-BUGGY-STATEMENT


    ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

    JSError[] errors = compiler.getErrors();
	compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());

MOVE-BUGGY-STATEMENT


    ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

    JSError[] errors = compiler.getErrors();
    // Check for errors.
    if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }
	compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());

MOVE-BUGGY-STATEMENT


    ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

    JSError[] errors = compiler.getErrors();
    // Check for errors.
    if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }

    return extractCompilerPass.getMessages();
	compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());

MOVE-BUGGY-STATEMENT
02:01:13.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:14.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:14.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:15.252 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:15.253 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:16.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:16.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:16.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:16.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:17.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:17.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:18.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

02:01:18.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:19.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:19.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===116
02:01:19.315 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Compiler compiler = new Compiler();

02:01:19.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:20.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:20.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===100
02:01:20.120 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return extractMessages(ImmutableList.copyOf(inputs));
return extractMessages(inputs, ImmutableList.copyOf(inputs));
return extractMessages(this.style, ImmutableList.copyOf(inputs));
return extractMessages(this.idGenerator, ImmutableList.copyOf(inputs));
return extractMessages(ImmutableList.copyOf(inputs), inputs);
return extractMessages(ImmutableList.copyOf(inputs), this.style);
return extractMessages(ImmutableList.copyOf(inputs), this.idGenerator);
02:01:20.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:20.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:20.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:21.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:21.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:22.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:22.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:23.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:23.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:24.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:24.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:25.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
return extractMessages(true, ImmutableList.copyOf(inputs));
return extractMessages(false, ImmutableList.copyOf(inputs));
return extractMessages(ImmutableList.copyOf(inputs), true);
return extractMessages(ImmutableList.copyOf(inputs), false);
02:01:25.001 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:25.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:25.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:26.568 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:26.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:27.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:27.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:28.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (inputs != null) {


}

02:01:28.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:28.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
if (inputs == null) {
    return null;
}

if (inputs == null) {
    throw new IllegalArgumentException("Empty variable: " + inputs);
}

02:01:28.939 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:29.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:29.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:30.559 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 

02:01:30.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:01:31.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-56 ---Fixer: fix fail because of failed compiling! 
02:01:31.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.JsMessageExtractor ===51
02:01:31.351 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
public class JsMessageExtractor {

  private final JsMessage.Style style;
  private final JsMessage.IdGenerator idGenerator;

  public JsMessageExtractor(JsMessage.IdGenerator idGenerator,
      JsMessage.Style style) {
    this.idGenerator = idGenerator;
    this.style = style;
  }

  /**
   * Visitor that collects messages.
   */
  private class ExtractMessagesVisitor extends JsMessageVisitor {
    // We use List here as we want to preserve insertion-order for found
    // messages.
    // Take into account that messages with the same id could be present in the
    // result list. Message could have the same id only in case if they are
    // unnamed and have the same text but located in different source files.
    private final List<JsMessage> messages = Lists.newLinkedList();

    private ExtractMessagesVisitor(AbstractCompiler compiler) {
      super(compiler, true, style, idGenerator);
    }

    @Override
    protected void processJsMessage(JsMessage message,
        JsMessageDefinition definition) {
      if (!message.isExternal()) {
        messages.add(message);
      }
    }

    /**
     * Returns extracted messages.
     *
     * @return collection of JsMessage objects that was found in js sources.
     */
    public Collection<JsMessage> getMessages() {
      return messages;
    }
  }

  /**
   * Extracts js messages from javascript code.
   */
  public Collection<JsMessage> extractMessages(JSSourceFile... inputs)
      throws IOException {
    return extractMessages(ImmutableList.copyOf(inputs));
  }


  /**
   * Extracts js messages from javascript code.
   *
   * @param inputs  the javascript source code inputs
   * @return the extracted messages collection
   * @throws IOException if there is a problem reading the js code
   * @throws RuntimeException if there are problems parsing the js code or the
   *     js messages, or if two messages have the same key
   */
  public Collection<JsMessage> extractMessages(
      Iterable<JSSourceFile> inputs) throws IOException {

    Compiler compiler = new Compiler();
    compiler.init(
        new JSSourceFile[] {},
        Iterables.toArray(inputs, JSSourceFile.class),
        new CompilerOptions());

    ExtractMessagesVisitor extractCompilerPass =
        new ExtractMessagesVisitor(compiler);
    for (JSSourceFile input : inputs) {
      // Parse the js files individually, to prevent out-of-memory
      // problems.
      Node root = new JsAst(input).getAstRoot(compiler);

      // Traverse the returned nodes and extract messages.
      extractCompilerPass.process(null, root);
    }

    JSError[] errors = compiler.getErrors();
    // Check for errors.
    if (errors.length > 0) {
      StringBuilder msg = new StringBuilder("JSCompiler errors\n");
      MessageFormatter formatter = new LightweightMessageFormatter(compiler);
      for (JSError e : errors) {
        msg.append(formatter.formatError(e));
      }
      throw new RuntimeException(msg.toString());
    }

    return extractCompilerPass.getMessages();
  }
}
