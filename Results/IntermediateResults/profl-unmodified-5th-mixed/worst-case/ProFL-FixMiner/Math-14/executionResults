Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Math-14
12:18:42.608 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Math/14.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Math/14.txt
12:18:50.416 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
12:18:50.430 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-14/generalSusInfo.profl
12:18:50.431 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Fixing Beginning======
12:18:50.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math3.fitting.PolynomialFitter ===68
12:18:51.017 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return fit(new PolynomialFunction.Parametric(), guess);
return fit(new PolynomialFunction.Parametric(), );
12:18:51.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:18:51.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
return fit(true, new PolynomialFunction.Parametric(), guess);
return fit(false, new PolynomialFunction.Parametric(), guess);
return fit(new PolynomialFunction.Parametric(), true, guess);
return fit(new PolynomialFunction.Parametric(), false, guess);
return fit(new PolynomialFunction.Parametric(), guess, true);
return fit(new PolynomialFunction.Parametric(), guess, false);
12:18:51.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:18:52.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:18:52.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:18:52.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:18:52.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:18:53.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:18:53.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:18:54.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:18:54.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:18:55.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:18:55.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:18:56.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
if (guess != null) {


}

12:18:56.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:18:57.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
if (guess == null) {
    return null;
}

if (guess == null) {
    throw new IllegalArgumentException("Empty variable: " + guess);
}

12:18:57.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:18:57.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
12:18:57.856 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
12:20:52.134 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:20:52.134 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:20:52.135 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample
12:20:52.135 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
12:20:52.135 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
12:20:52.142 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-14/aggregatedSusInfo.profl
12:20:52.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D in org.apache.commons.math3.fitting.PolynomialFitter:68
12:20:52.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-14
12:20:52.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:20:52.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
12:20:52.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
12:22:46.861 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:22:46.861 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:22:46.861 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample
12:22:46.862 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
12:22:46.862 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
12:22:46.932 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-14/aggregatedSusInfo.profl
12:22:46.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D in org.apache.commons.math3.fitting.PolynomialFitter:68
12:22:46.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-14

12:22:46.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:47.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:47.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math3.fitting.CurveFitter ===136
12:22:47.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return fit(Integer.MAX_VALUE, f, initialGuess);
return fit(this.optimizer, Integer.MAX_VALUE, f, initialGuess);
return fit(this.observations, Integer.MAX_VALUE, f, initialGuess);
return fit(Integer.MAX_VALUE, this.optimizer, initialGuess);
return fit(Integer.MAX_VALUE, this.observations, initialGuess);
return fit(Integer.MAX_VALUE,  initialGuess);
return fit(Integer.MAX_VALUE, this.optimizer, f, initialGuess);
return fit(Integer.MAX_VALUE, this.observations, f, initialGuess);
return fit(Integer.MAX_VALUE, f, this.optimizer);
return fit(Integer.MAX_VALUE, f, this.observations);
return fit(Integer.MAX_VALUE, f, );
return fit(Integer.MAX_VALUE, f, this.optimizer, initialGuess);
return fit(Integer.MAX_VALUE, f, this.observations, initialGuess);
return fit(Integer.MAX_VALUE, f, initialGuess, this.optimizer);
return fit(Integer.MAX_VALUE, f, initialGuess, this.observations);
12:22:47.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:48.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:48.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:49.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:49.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:50.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:50.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:51.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:51.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:52.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:52.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:53.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:53.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:54.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:54.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:54.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:54.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:55.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:55.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:56.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:56.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:56.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:56.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:57.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:57.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:58.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:22:58.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:22:59.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
return getObservations();
12:22:59.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:23:00.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
return fit(true, Integer.MAX_VALUE, f, initialGuess);
return fit(false, Integer.MAX_VALUE, f, initialGuess);
return fit(Integer.MAX_VALUE, true, f, initialGuess);
return fit(Integer.MAX_VALUE, false, f, initialGuess);
return fit(Integer.MAX_VALUE, f, true, initialGuess);
return fit(Integer.MAX_VALUE, f, false, initialGuess);
return fit(Integer.MAX_VALUE, f, initialGuess, true);
return fit(Integer.MAX_VALUE, f, initialGuess, false);
12:23:00.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:23:01.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:23:01.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:23:01.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:23:01.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:23:02.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:23:02.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:23:03.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:23:03.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:23:04.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:23:04.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:23:04.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:23:04.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:23:05.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:23:05.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:23:06.583 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
if (f != null) {


}

if (initialGuess != null) {


}

12:23:06.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:23:07.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:23:07.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:23:08.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
if (f == null) {
    return null;
}

if (f == null) {
    throw new IllegalArgumentException("Empty variable: " + f);
}

if (initialGuess == null) {
    return null;
}

if (initialGuess == null) {
    throw new IllegalArgumentException("Empty variable: " + initialGuess);
}

12:23:08.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:23:09.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
12:23:09.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
12:25:03.523 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:25:03.523 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:25:03.523 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample
12:25:03.523 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
12:25:03.523 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
12:25:03.605 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-14/aggregatedSusInfo.profl
12:25:03.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D in org.apache.commons.math3.fitting.CurveFitter:136
12:25:03.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-14
12:25:03.605 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:25:04.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
12:25:04.320 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
12:26:53.309 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:26:53.309 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:26:53.309 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample
12:26:53.309 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
12:26:53.309 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
12:26:54.513 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-14/aggregatedSusInfo.profl
12:26:54.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D in org.apache.commons.math3.fitting.CurveFitter:136
12:26:54.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-14
12:26:54.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:26:55.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
12:26:55.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
12:28:38.157 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:28:38.157 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:28:38.158 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample
12:28:38.158 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
12:28:38.158 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
12:28:59.650 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-14/aggregatedSusInfo.profl
12:28:59.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D in org.apache.commons.math3.fitting.CurveFitter:136
12:28:59.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-14
12:28:59.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:29:00.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
12:29:00.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
12:30:39.867 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:30:39.867 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:30:39.867 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample
12:30:39.867 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
12:30:39.867 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
12:36:26.945 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-14/aggregatedSusInfo.profl
12:36:26.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D in org.apache.commons.math3.fitting.CurveFitter:136
12:36:26.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-14

12:36:26.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:27.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:27.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math3.fitting.CurveFitter ===172
12:36:27.703 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(optimum, new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(model, new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(point, new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(i, new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(weights, new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(target, new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(maxEval, new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(f, new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(initialGuess, new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(this.observations, new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 optimum, model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model, model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 point, model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 i, model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 weights, model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 target, model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 maxEval, model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 f, model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 initialGuess, model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 this.observations, model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 optimum, model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model, model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 point, model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 i, model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 weights, model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 target, model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 maxEval, model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 f, model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 initialGuess, model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 this.observations, model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 optimum, new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 model, new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 point, new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 i, new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 weights, new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 target, new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 maxEval, new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 f, new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 initialGuess, new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 this.observations, new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 optimum, new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 model, new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 point, new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 i, new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 weights, new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 target, new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 maxEval, new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 f, new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 initialGuess, new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 this.observations, new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 optimum, new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 model, new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 point, new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 i, new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 weights, new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 target, new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 maxEval, new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 f, new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 initialGuess, new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 this.observations, new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess), optimum);
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess), model);
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess), point);
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess), i);
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess), weights);
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess), target);
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess), maxEval);
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess), f);
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess), initialGuess);
final PointVectorValuePair optimum
            = optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess), this.observations);
12:36:27.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:28.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:28.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:29.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:29.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:29.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:29.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:30.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:30.431 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:31.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:31.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:31.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:31.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:32.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:32.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:33.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:33.071 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:33.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:33.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:34.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:34.375 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:35.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:35.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:35.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:35.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:36.323 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:36.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:37.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:37.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:37.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:37.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:38.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:38.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:39.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:39.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:39.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:39.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:40.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:40.461 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:41.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:41.137 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:41.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:41.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:42.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:42.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:43.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:43.159 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:43.854 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:43.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:44.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:44.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:45.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:45.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:45.953 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:45.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:46.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:46.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:47.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:47.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:48.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:48.016 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:48.724 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:48.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:49.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:49.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:50.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:50.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:50.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:50.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:51.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:51.494 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:52.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:52.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:52.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:52.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:53.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:53.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:54.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:54.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:54.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:54.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:55.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:55.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:56.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:56.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:56.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:56.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:57.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:57.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:58.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:58.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:59.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:59.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:36:59.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:36:59.718 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:00.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:00.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:01.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:01.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:01.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:01.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:02.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:02.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:03.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:03.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:03.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:03.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:04.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:04.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:05.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:05.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:05.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:05.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:06.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:06.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:07.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:07.004 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:07.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:07.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:08.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:08.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:09.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:09.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:09.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:09.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:10.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:10.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:11.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:11.110 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:11.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:11.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:12.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:12.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:13.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:13.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:13.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:13.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:14.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:14.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:15.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
final PointVectorValuePair optimum
            = optimum.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = model.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = point.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = i.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = weights.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = target.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = maxEval.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = f.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = initialGuess.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = this.optimizer.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
final PointVectorValuePair optimum
            = this.observations.optimize(new MaxEval(maxEval),
                                 model.getModelFunction(),
                                 model.getModelFunctionJacobian(),
                                 new Target(target),
                                 new Weight(weights),
                                 new InitialGuess(initialGuess));
12:37:15.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:15.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:15.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:16.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:16.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:17.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:17.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:17.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:17.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:18.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:18.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:19.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:19.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:19.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:19.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:20.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:20.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:21.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
12:37:21.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
12:37:21.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
12:37:21.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
12:38:56.212 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:38:56.212 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
12:38:56.212 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample
12:38:56.213 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
12:38:56.213 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
14:50:45.692 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Math-14/aggregatedSusInfo.profl
14:50:45.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D in org.apache.commons.math3.fitting.CurveFitter:172
14:50:45.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-14
14:50:45.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
14:50:46.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
if (optimizer != null) {


}

if (model != null) {


}

if (model != null) {


}

if (target != null) {


}

if (weights != null) {


}

if (initialGuess != null) {


}

14:50:46.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
14:50:47.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
14:50:47.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
14:50:47.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
14:50:47.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
14:50:48.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
14:50:48.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
14:50:49.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
14:50:49.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
14:50:49.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
14:50:49.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
14:50:50.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-14 ---Fixer: fix fail because of failed compiling! 
if (optimizer == null) {
    return null;
}

if (optimizer == null) {
    throw new IllegalArgumentException("Empty variable: " + optimizer);
}

if (model == null) {
    return null;
}

if (model == null) {
    throw new IllegalArgumentException("Empty variable: " + model);
}

if (model == null) {
    return null;
}

if (model == null) {
    throw new IllegalArgumentException("Empty variable: " + model);
}

if (target == null) {
    return null;
}

if (target == null) {
    throw new IllegalArgumentException("Empty variable: " + target);
}

if (weights == null) {
    return null;
}

if (weights == null) {
    throw new IllegalArgumentException("Empty variable: " + weights);
}

if (initialGuess == null) {
    return null;
}

if (initialGuess == null) {
    throw new IllegalArgumentException("Empty variable: " + initialGuess);
}

14:50:50.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
14:50:51.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
14:50:51.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
14:52:25.365 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
14:52:25.365 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample]
14:52:25.365 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.fitting.PolynomialFitterTest::testLargeSample
14:52:25.365 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
14:52:25.365 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
