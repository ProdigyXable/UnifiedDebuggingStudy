Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-3
08:50:33.831 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 Failed Tests: 3
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/3.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/3.txt
08:53:40.992 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
08:53:41.075 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-3/generalSusInfo.profl
08:53:41.188 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/fixminer/ProFL-FixMiner/Closure-3/aggregatedSusInfo.profl
08:53:41.190 [main] INFO edu.lu.uni.serval.bug.fixer.FixMinerFixer - =======Fixing Beginning======
08:53:41.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===232
08:53:41.821 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case ASSIGN:
if (ASSIGN == 0) {
    new IllegalArgumentException("");
}

if (ASSIGN != 0) {

    
}

if (ASSIGN > 0) {

    
}

08:53:41.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:42.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:42.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:42.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:42.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:43.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:53:43.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:43.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:43.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.MaybeReachingVariableUse ===163
08:53:43.705 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return true;
return false;
08:53:43.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:44.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:53:44.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:45.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:45.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===131
08:53:45.671 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case FREE_CALL:
if (FREE_CALL == 0) {
    new IllegalArgumentException("");
}

if (FREE_CALL != 0) {

    
}

if (FREE_CALL > 0) {

    
}

08:53:45.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:46.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:46.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:47.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:47.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:47.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
setType(FREE_CALL);
setType(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setType(FREE_CALL);
removeProp(FREE_CALL);
removeProp(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	removeProp(FREE_CALL);
setLength(FREE_CALL);
setLength(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setLength(FREE_CALL);
setLineno(FREE_CALL);
setLineno(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setLineno(FREE_CALL);
setCharno(FREE_CALL);
setCharno(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setCharno(FREE_CALL);
setSourceEncodedPosition(FREE_CALL);
setSourceEncodedPosition(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setSourceEncodedPosition(FREE_CALL);
setSourceEncodedPositionForTree(FREE_CALL);
setSourceEncodedPositionForTree(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setSourceEncodedPositionForTree(FREE_CALL);
detachChildren();
	case FREE_CALL:
case FREE_CALL:
	detachChildren();
setSideEffectFlags(FREE_CALL);
setSideEffectFlags(FREE_CALL);
	case FREE_CALL:
case FREE_CALL:
	setSideEffectFlags(FREE_CALL);
setQuotedString();
	case FREE_CALL:
case FREE_CALL:
	setQuotedString();
08:53:47.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:48.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:48.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:49.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:49.287 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:50.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:50.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:51.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:51.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:52.179 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:52.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:53.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:53.152 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:54.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:54.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:55.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:55.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:55.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:55.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:56.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:56.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:57.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:57.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:58.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:58.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:53:59.834 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:53:59.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:00.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:00.815 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:01.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:01.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:02.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:02.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:03.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:03.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:04.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:04.659 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:05.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:05.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:06.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:06.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:07.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:07.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:08.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:08.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:09.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:09.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:10.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:10.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:11.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:11.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:12.445 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:12.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:13.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:13.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:14.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:54:14.369 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:15.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:15.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===224
08:54:15.352 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case THROW:
if (THROW == 0) {
    new IllegalArgumentException("");
}

if (THROW != 0) {

    
}

if (THROW > 0) {

    
}

08:54:15.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:15.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:15.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:16.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:16.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:16.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:54:16.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:17.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:17.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1440
08:54:17.308 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return res;
if (res != null) {


}

08:54:17.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:18.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (res == null) {
    return null;
}

if (res == null) {
    throw new IllegalArgumentException("Empty variable: " + res);
}

08:54:18.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:19.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:19.233 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:20.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
detachChildren();
	return res;
return res;
	detachChildren();
setQuotedString();
	return res;
return res;
	setQuotedString();
08:54:20.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:21.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:21.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:22.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:22.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:23.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:23.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:24.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:54:24.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:25.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:25.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1411
08:54:25.134 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
if (node2 != null) {


}

08:54:25.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:26.152 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (node2 == null) {
    return null;
}

if (node2 == null) {
    throw new IllegalArgumentException("Empty variable: " + node2);
}

08:54:26.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:27.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:27.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:28.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:54:28.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:29.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:29.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===261
08:54:29.020 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case CATCH:
if (CATCH == 0) {
    new IllegalArgumentException("");
}

if (CATCH != 0) {

    
}

if (CATCH > 0) {

    
}

08:54:29.022 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:29.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:29.611 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:29.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:29.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:30.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:54:30.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:30.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:30.820 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===227
08:54:30.829 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (DiGraphEdge<N, E> e : a.getOutEdges()) {
      // Once we visited that edge once, we no longer need to
      // re-visit it again.
      if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
    }
if (a != null) {


}

08:54:30.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:31.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (a == null) {
    return true;
}

if (a == null) {
    return false;
}

if (a == null) {
    throw new IllegalArgumentException("Empty variable: " + a);
}

08:54:31.527 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:32.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:32.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:32.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:32.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:33.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
for (DiGraphEdge<N, E> e : a.getOutEdges()) {
      // Once we visited that edge once, we no longer need to
      // re-visit it again.
      if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
    }
	if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }
    if (a == b) {
      return false;
    }
    
null
for (DiGraphEdge<N, E> e : a.getOutEdges()) {
      // Once we visited that edge once, we no longer need to
      // re-visit it again.
      if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
    }
	if (a == b) {
      return false;
    }
    
null

    return false;
	for (DiGraphEdge<N, E> e : a.getOutEdges()) {
      // Once we visited that edge once, we no longer need to
      // re-visit it again.
      if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
    }

MOVE-BUGGY-STATEMENT
08:54:33.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:34.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:34.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:34.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:34.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:35.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:54:35.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:36.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:36.386 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===206
08:54:36.395 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
08:54:36.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:37.078 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:54:37.079 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:37.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:37.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===184
08:54:37.792 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case RETURN:
if (RETURN == 0) {
    new IllegalArgumentException("");
}

if (RETURN != 0) {

    
}

if (RETURN > 0) {

    
}

08:54:37.794 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:38.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:38.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:38.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:38.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:38.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:54:38.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:39.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:39.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===228
08:54:39.551 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return false;
return true;
08:54:39.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:40.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:54:40.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:41.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:41.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.ControlFlowGraph ===201
08:54:41.071 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return n != parent.getFirstChild();
if (n != null) {


}

if (parent != null) {


}

08:54:41.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:41.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:41.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:42.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (n == null) {
    return true;
}

if (n == null) {
    return false;
}

if (n == null) {
    throw new IllegalArgumentException("Empty variable: " + n);
}

if (parent == null) {
    return true;
}

if (parent == null) {
    return false;
}

if (parent == null) {
    throw new IllegalArgumentException("Empty variable: " + parent);
}

08:54:42.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:43.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:43.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:44.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:44.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:44.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:44.714 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:45.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:45.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:46.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:46.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:46.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:54:46.963 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:47.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:47.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===229
08:54:47.783 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case TRY:
if (TRY == 0) {
    new IllegalArgumentException("");
}

if (TRY != 0) {

    
}

if (TRY > 0) {

    
}

08:54:47.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:48.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:48.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:48.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:48.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:48.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:54:48.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:49.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:49.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===224
08:54:49.584 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
if (checkAllPathsWithoutBackEdges(next, b)) {
        return true;
      }
08:54:49.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:50.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (checkSomePathsWithoutBackEdges(e, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(a, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(this.nodePredicate, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(this.edgePredicate, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(this.inclusive, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(BACK_EDGE, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(VISITED_EDGE, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(WHITE, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(GRAY, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(BLACK, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(this.graph, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(this.start, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(this.end, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges( b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(e, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(a, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(this.nodePredicate, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(this.edgePredicate, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(this.inclusive, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(BACK_EDGE, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(VISITED_EDGE, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(WHITE, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(GRAY, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(BLACK, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(this.graph, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(this.start, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(this.end, next, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, e)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, a)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, this.nodePredicate)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, this.edgePredicate)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, this.inclusive)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, BACK_EDGE)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, VISITED_EDGE)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, WHITE)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, GRAY)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, BLACK)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, this.graph)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, this.start)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, this.end)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, )) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, e, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, a, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, this.nodePredicate, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, this.edgePredicate, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, this.inclusive, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, BACK_EDGE, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, VISITED_EDGE, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, WHITE, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, GRAY, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, BLACK, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, this.graph, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, this.start, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, this.end, b)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, e)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, a)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, this.nodePredicate)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, this.edgePredicate)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, this.inclusive)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, BACK_EDGE)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, VISITED_EDGE)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, WHITE)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, GRAY)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, BLACK)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, this.graph)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, this.start)) {
        return true;
      }
if (checkSomePathsWithoutBackEdges(next, b, this.end)) {
        return true;
      }
08:54:50.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:50.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:50.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:51.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:51.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:52.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:52.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:53.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:53.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:53.823 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:53.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:54.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:54.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:55.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:55.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:55.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:55.983 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:56.741 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:56.741 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:57.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:57.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:58.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:58.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:58.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:58.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:54:59.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:54:59.573 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:00.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:00.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:00.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:00.971 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:01.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:01.690 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:02.356 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:02.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:03.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:03.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:03.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:03.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:04.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:04.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:05.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:05.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:05.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:05.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:06.504 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:06.505 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:07.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:07.185 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:07.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:07.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:08.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:08.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:09.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:09.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:09.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:09.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:10.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:10.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:11.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:11.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:12.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:12.029 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:12.777 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:12.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:13.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:13.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:14.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:14.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:14.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:14.860 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:15.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:15.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:16.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:16.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:16.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:16.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:17.760 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:17.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:18.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:18.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:18.762 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:18.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:19.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:19.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:20.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:20.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:20.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:20.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:21.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:21.684 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:22.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:22.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:23.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:23.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:23.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:23.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:24.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:24.501 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:25.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:25.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:25.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:25.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:26.598 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:26.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:27.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:27.340 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:28.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:28.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:28.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:28.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:29.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:29.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:30.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:30.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:30.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:30.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:31.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:31.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:32.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:32.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:33.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:33.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:33.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:33.801 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:34.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:34.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:35.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:35.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:35.912 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:35.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:36.652 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:36.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:37.383 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (next != null) {


}

if (b != null) {


}

08:55:37.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:38.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:38.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:38.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (next == null) {
    return true;
}

if (next == null) {
    return false;
}

if (next == null) {
    throw new IllegalArgumentException("Empty variable: " + next);
}

if (b == null) {
    return true;
}

if (b == null) {
    return false;
}

if (b == null) {
    throw new IllegalArgumentException("Empty variable: " + b);
}

08:55:38.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:39.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:39.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:40.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:40.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:40.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:40.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:41.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:41.697 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:42.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:42.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:43.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
	if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      
null
if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
	e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      
null
if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
	if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      
null
if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
	if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      
null
if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
	DiGraphNode<N, E> next = e.getDestination();
      
null
08:55:43.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:43.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:43.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:44.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:44.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:45.329 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:45.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:46.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:46.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:46.729 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:55:46.730 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:47.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:47.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===223
08:55:47.527 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
DiGraphNode<N, E> next = e.getDestination();
DiGraphNode<N, E> next = e.getDestination(next);
DiGraphNode<N, E> next = e.getDestination(a);
DiGraphNode<N, E> next = e.getDestination(b);
DiGraphNode<N, E> next = e.getDestination(this.nodePredicate);
DiGraphNode<N, E> next = e.getDestination(this.edgePredicate);
DiGraphNode<N, E> next = e.getDestination(this.inclusive);
DiGraphNode<N, E> next = e.getDestination(BACK_EDGE);
DiGraphNode<N, E> next = e.getDestination(VISITED_EDGE);
DiGraphNode<N, E> next = e.getDestination(WHITE);
DiGraphNode<N, E> next = e.getDestination(GRAY);
DiGraphNode<N, E> next = e.getDestination(BLACK);
DiGraphNode<N, E> next = e.getDestination(this.graph);
DiGraphNode<N, E> next = e.getDestination(this.start);
DiGraphNode<N, E> next = e.getDestination(this.end);
08:55:47.528 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:48.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:48.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:49.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:49.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:49.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:49.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:50.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:50.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:51.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:51.184 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:51.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:51.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:52.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:52.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:53.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:53.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:53.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:53.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:54.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:54.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:55.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:55.381 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:56.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:56.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:56.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:56.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:57.569 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
DiGraphNode<N, E> next = next.getDestination();
DiGraphNode<N, E> next = a.getDestination();
DiGraphNode<N, E> next = b.getDestination();
DiGraphNode<N, E> next = this.nodePredicate.getDestination();
DiGraphNode<N, E> next = this.edgePredicate.getDestination();
DiGraphNode<N, E> next = this.inclusive.getDestination();
DiGraphNode<N, E> next = BACK_EDGE.getDestination();
DiGraphNode<N, E> next = VISITED_EDGE.getDestination();
DiGraphNode<N, E> next = WHITE.getDestination();
DiGraphNode<N, E> next = GRAY.getDestination();
DiGraphNode<N, E> next = BLACK.getDestination();
DiGraphNode<N, E> next = this.graph.getDestination();
DiGraphNode<N, E> next = this.start.getDestination();
DiGraphNode<N, E> next = this.end.getDestination();
08:55:57.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:58.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:58.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:59.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:59.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:55:59.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:55:59.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:00.519 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:00.520 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:01.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:01.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:01.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:01.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:02.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:02.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:03.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:03.319 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:04.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:04.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:04.741 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:04.741 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:05.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:05.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:06.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:06.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:06.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:06.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:07.553 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (e != null) {


}

08:56:07.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:08.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (e == null) {
    return true;
}

if (e == null) {
    return false;
}

if (e == null) {
    throw new IllegalArgumentException("Empty variable: " + e);
}

08:56:08.243 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:08.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:08.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:09.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:09.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:10.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
setUp();
	DiGraphNode<N, E> next = e.getDestination();
DiGraphNode<N, E> next = e.getDestination();
	setUp();
tearDown();
	DiGraphNode<N, E> next = e.getDestination();
DiGraphNode<N, E> next = e.getDestination();
	tearDown();
discoverBackEdges(next);
discoverBackEdges(next);
	DiGraphNode<N, E> next = e.getDestination();
DiGraphNode<N, E> next = e.getDestination();
	discoverBackEdges(next);
08:56:10.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:11.066 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:11.067 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:11.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:11.788 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:12.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:12.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:13.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:13.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:13.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:13.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:14.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:14.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:15.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:56:15.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:16.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:16.031 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===219
08:56:16.042 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }
if (e.getAnnotation() != BACK_EDGE) {
        continue;
      }
08:56:16.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:16.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (e != null) {


}

if (BACK_EDGE != null) {


}

08:56:16.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:17.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:17.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:18.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (e == null) {
    return true;
}

if (e == null) {
    return false;
}

if (e == null) {
    throw new IllegalArgumentException("Empty variable: " + e);
}

if (BACK_EDGE == null) {
    return true;
}

if (BACK_EDGE == null) {
    return false;
}

if (BACK_EDGE == null) {
    throw new IllegalArgumentException("Empty variable: " + BACK_EDGE);
}

08:56:18.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:18.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:18.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:19.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:19.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:20.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:20.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:21.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:21.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:21.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:21.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:22.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
setUp();
	if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }
if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }
	setUp();
tearDown();
	if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }
if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }
	tearDown();
08:56:22.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:23.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:23.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:23.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:23.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:24.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:24.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:25.420 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }
	if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      
null
if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }
	e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      
null
if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }
	if (ignoreEdge(e)) {
        continue;
      }
      
null


      DiGraphNode<N, E> next = e.getDestination();
	if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

MOVE-BUGGY-STATEMENT


      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
	if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

MOVE-BUGGY-STATEMENT
08:56:25.421 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:26.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:26.115 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:26.857 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:26.858 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:27.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:27.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:28.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:28.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:28.940 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:56:28.941 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:29.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:29.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===216
08:56:29.665 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (ignoreEdge(e)) {
        continue;
      }
if (ignoreEdge(a)) {
        continue;
      }
if (ignoreEdge(b)) {
        continue;
      }
if (ignoreEdge(this.nodePredicate)) {
        continue;
      }
if (ignoreEdge(this.edgePredicate)) {
        continue;
      }
if (ignoreEdge(this.inclusive)) {
        continue;
      }
if (ignoreEdge(BACK_EDGE)) {
        continue;
      }
if (ignoreEdge(VISITED_EDGE)) {
        continue;
      }
if (ignoreEdge(WHITE)) {
        continue;
      }
if (ignoreEdge(GRAY)) {
        continue;
      }
if (ignoreEdge(BLACK)) {
        continue;
      }
if (ignoreEdge(this.graph)) {
        continue;
      }
if (ignoreEdge(this.start)) {
        continue;
      }
if (ignoreEdge(this.end)) {
        continue;
      }
if (ignoreEdge()) {
        continue;
      }
if (ignoreEdge(a, e)) {
        continue;
      }
if (ignoreEdge(b, e)) {
        continue;
      }
if (ignoreEdge(this.nodePredicate, e)) {
        continue;
      }
if (ignoreEdge(this.edgePredicate, e)) {
        continue;
      }
if (ignoreEdge(this.inclusive, e)) {
        continue;
      }
if (ignoreEdge(BACK_EDGE, e)) {
        continue;
      }
if (ignoreEdge(VISITED_EDGE, e)) {
        continue;
      }
if (ignoreEdge(WHITE, e)) {
        continue;
      }
if (ignoreEdge(GRAY, e)) {
        continue;
      }
if (ignoreEdge(BLACK, e)) {
        continue;
      }
if (ignoreEdge(this.graph, e)) {
        continue;
      }
if (ignoreEdge(this.start, e)) {
        continue;
      }
if (ignoreEdge(this.end, e)) {
        continue;
      }
if (ignoreEdge(e, a)) {
        continue;
      }
if (ignoreEdge(e, b)) {
        continue;
      }
if (ignoreEdge(e, this.nodePredicate)) {
        continue;
      }
if (ignoreEdge(e, this.edgePredicate)) {
        continue;
      }
if (ignoreEdge(e, this.inclusive)) {
        continue;
      }
if (ignoreEdge(e, BACK_EDGE)) {
        continue;
      }
if (ignoreEdge(e, VISITED_EDGE)) {
        continue;
      }
if (ignoreEdge(e, WHITE)) {
        continue;
      }
if (ignoreEdge(e, GRAY)) {
        continue;
      }
if (ignoreEdge(e, BLACK)) {
        continue;
      }
if (ignoreEdge(e, this.graph)) {
        continue;
      }
if (ignoreEdge(e, this.start)) {
        continue;
      }
if (ignoreEdge(e, this.end)) {
        continue;
      }
08:56:29.666 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:30.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:30.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:31.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:31.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:31.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:31.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:32.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:32.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:33.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:33.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:34.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:34.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:34.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:34.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:35.454 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:35.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:36.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:36.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:36.892 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:36.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:37.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:37.581 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:38.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:38.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:38.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:38.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:39.709 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:39.710 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:40.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:40.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:41.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:41.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:41.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:41.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:42.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:42.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:43.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:43.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:43.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:43.922 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:44.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:44.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:45.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:45.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:46.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:46.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:46.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:46.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:47.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:47.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:48.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:48.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:48.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:48.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:49.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:49.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:50.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:50.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:50.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:50.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:51.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:51.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:52.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:52.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:53.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:53.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:53.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:53.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:54.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:54.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:55.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:55.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:55.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:55.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:56.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:56.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:57.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:57.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:57.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (e != null) {


}

08:56:57.957 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:58.666 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (e == null) {
    return true;
}

if (e == null) {
    return false;
}

if (e == null) {
    throw new IllegalArgumentException("Empty variable: " + e);
}

08:56:58.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:56:59.415 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:56:59.416 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:00.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:00.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:00.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (ignoreEdge(e)) {
        continue;
      }
	if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      
null
if (ignoreEdge(e)) {
        continue;
      }
	e.setAnnotation(VISITED_EDGE);

      
null

      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }
	if (ignoreEdge(e)) {
        continue;
      }

MOVE-BUGGY-STATEMENT

      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
	if (ignoreEdge(e)) {
        continue;
      }

MOVE-BUGGY-STATEMENT

      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
	if (ignoreEdge(e)) {
        continue;
      }

MOVE-BUGGY-STATEMENT
08:57:00.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:01.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:01.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:02.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:02.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:02.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:02.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:03.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:03.634 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:04.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:57:04.327 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:05.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:05.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===214
08:57:05.067 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
e.setAnnotation(VISITED_EDGE);
e.setAnnotation(true, VISITED_EDGE);
e.setAnnotation(false, VISITED_EDGE);
e.setAnnotation(VISITED_EDGE, true);
e.setAnnotation(VISITED_EDGE, false);
08:57:05.069 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:05.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:05.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:06.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:06.458 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:07.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:07.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:07.859 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
e.setAnnotation(a);
e.setAnnotation(b);
e.setAnnotation(this.nodePredicate);
e.setAnnotation(this.edgePredicate);
e.setAnnotation(this.inclusive);
e.setAnnotation(BACK_EDGE);
e.setAnnotation(WHITE);
e.setAnnotation(GRAY);
e.setAnnotation(BLACK);
e.setAnnotation(this.graph);
e.setAnnotation(this.start);
e.setAnnotation(this.end);
e.setAnnotation();
e.setAnnotation(a, VISITED_EDGE);
e.setAnnotation(b, VISITED_EDGE);
e.setAnnotation(this.nodePredicate, VISITED_EDGE);
e.setAnnotation(this.edgePredicate, VISITED_EDGE);
e.setAnnotation(this.inclusive, VISITED_EDGE);
e.setAnnotation(BACK_EDGE, VISITED_EDGE);
e.setAnnotation(WHITE, VISITED_EDGE);
e.setAnnotation(GRAY, VISITED_EDGE);
e.setAnnotation(BLACK, VISITED_EDGE);
e.setAnnotation(this.graph, VISITED_EDGE);
e.setAnnotation(this.start, VISITED_EDGE);
e.setAnnotation(this.end, VISITED_EDGE);
e.setAnnotation(VISITED_EDGE, a);
e.setAnnotation(VISITED_EDGE, b);
e.setAnnotation(VISITED_EDGE, this.nodePredicate);
e.setAnnotation(VISITED_EDGE, this.edgePredicate);
e.setAnnotation(VISITED_EDGE, this.inclusive);
e.setAnnotation(VISITED_EDGE, BACK_EDGE);
e.setAnnotation(VISITED_EDGE, WHITE);
e.setAnnotation(VISITED_EDGE, GRAY);
e.setAnnotation(VISITED_EDGE, BLACK);
e.setAnnotation(VISITED_EDGE, this.graph);
e.setAnnotation(VISITED_EDGE, this.start);
e.setAnnotation(VISITED_EDGE, this.end);
08:57:07.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:08.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:08.572 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:09.291 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:09.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:09.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:09.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:10.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:10.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:11.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:11.396 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:12.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:12.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:12.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:12.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:13.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:13.506 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:14.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:14.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:14.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:14.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:15.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:15.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:16.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:16.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:17.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:17.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:17.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:17.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:18.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:18.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:19.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:19.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:19.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:19.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:20.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:20.575 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:21.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:21.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:21.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:21.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:22.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:22.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:23.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:23.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:24.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:24.154 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:24.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:24.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:25.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:25.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:26.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:26.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:26.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:26.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:27.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:27.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:28.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:28.393 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:29.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:29.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:29.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:29.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:30.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:30.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:31.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:31.232 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:31.936 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:31.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:32.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:32.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:33.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:33.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:34.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (e != null) {


}

if (VISITED_EDGE != null) {


}

08:57:34.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:34.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:34.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:35.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (e == null) {
    return true;
}

if (e == null) {
    return false;
}

if (e == null) {
    throw new IllegalArgumentException("Empty variable: " + e);
}

if (VISITED_EDGE == null) {
    return true;
}

if (VISITED_EDGE == null) {
    return false;
}

if (VISITED_EDGE == null) {
    throw new IllegalArgumentException("Empty variable: " + VISITED_EDGE);
}

08:57:35.561 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:36.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:36.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:36.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:36.972 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:37.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:37.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:38.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:38.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:39.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:39.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:39.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
e.setAnnotation(VISITED_EDGE);
	if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      
null


      if (ignoreEdge(e)) {
        continue;
      }
	e.setAnnotation(VISITED_EDGE);

MOVE-BUGGY-STATEMENT


      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }
	e.setAnnotation(VISITED_EDGE);

MOVE-BUGGY-STATEMENT


      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
	e.setAnnotation(VISITED_EDGE);

MOVE-BUGGY-STATEMENT


      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
	e.setAnnotation(VISITED_EDGE);

MOVE-BUGGY-STATEMENT
08:57:39.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:40.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:40.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:41.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:41.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:42.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:42.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:42.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:42.792 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:43.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:57:43.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:44.160 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:44.161 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===211
08:57:44.171 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
if (e.getAnnotation() != VISITED_EDGE) {
        continue;
      }
08:57:44.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:44.878 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (e != null) {


}

if (VISITED_EDGE != null) {


}

08:57:44.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:45.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:45.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:46.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (e == null) {
    return true;
}

if (e == null) {
    return false;
}

if (e == null) {
    throw new IllegalArgumentException("Empty variable: " + e);
}

if (VISITED_EDGE == null) {
    return true;
}

if (VISITED_EDGE == null) {
    return false;
}

if (VISITED_EDGE == null) {
    throw new IllegalArgumentException("Empty variable: " + VISITED_EDGE);
}

08:57:46.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:46.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:46.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:47.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:47.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:48.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:48.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:49.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:49.041 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:49.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:49.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:50.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
setUp();
	if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
	setUp();
tearDown();
	if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
	tearDown();
08:57:50.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:51.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:51.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:51.904 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:51.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:52.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:52.631 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:53.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

      e.setAnnotation(VISITED_EDGE);
	if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }

MOVE-BUGGY-STATEMENT

      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
	if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }

MOVE-BUGGY-STATEMENT

      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }
	if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }

MOVE-BUGGY-STATEMENT

      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
	if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }

MOVE-BUGGY-STATEMENT

      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
	if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }

MOVE-BUGGY-STATEMENT
08:57:53.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:54.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:54.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:54.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:54.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:55.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:55.451 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:56.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:56.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:56.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:57:56.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:57.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:57.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===208
08:57:57.521 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
for (DiGraphEdge<N, E> e : a.getOutEdges()) {
      // Once we visited that edge once, we no longer need to
      // re-visit it again.
      if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
    }
if (a != null) {


}

08:57:57.521 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:58.206 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (a == null) {
    return true;
}

if (a == null) {
    return false;
}

if (a == null) {
    throw new IllegalArgumentException("Empty variable: " + a);
}

08:57:58.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:58.894 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:58.895 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:57:59.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:57:59.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:00.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
for (DiGraphEdge<N, E> e : a.getOutEdges()) {
      // Once we visited that edge once, we no longer need to
      // re-visit it again.
      if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
    }
	if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }
    if (a == b) {
      return false;
    }
    
null
for (DiGraphEdge<N, E> e : a.getOutEdges()) {
      // Once we visited that edge once, we no longer need to
      // re-visit it again.
      if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
    }
	if (a == b) {
      return false;
    }
    
null

    return false;
	for (DiGraphEdge<N, E> e : a.getOutEdges()) {
      // Once we visited that edge once, we no longer need to
      // re-visit it again.
      if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
    }

MOVE-BUGGY-STATEMENT
08:58:00.379 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:01.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:01.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:01.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:01.932 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:02.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:58:02.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:03.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:03.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===205
08:58:03.317 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (a == b) {
      return false;
    }
if (a != b) {
      return false;
    }
08:58:03.317 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:04.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (b == b) {
      return false;
    }
08:58:04.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:04.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (a != null) {


}

if (b != null) {


}

08:58:04.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:05.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:05.427 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:06.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (a == null) {
    return true;
}

if (a == null) {
    return false;
}

if (a == null) {
    throw new IllegalArgumentException("Empty variable: " + a);
}

if (b == null) {
    return true;
}

if (b == null) {
    return false;
}

if (b == null) {
    throw new IllegalArgumentException("Empty variable: " + b);
}

08:58:06.108 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:06.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:06.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:07.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:07.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:08.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:08.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:08.942 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:08.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:09.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:09.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:10.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
setUp();
	if (a == b) {
      return false;
    }
if (a == b) {
      return false;
    }
	setUp();
tearDown();
	if (a == b) {
      return false;
    }
if (a == b) {
      return false;
    }
	tearDown();
discoverBackEdges(b);
discoverBackEdges(b);
	if (a == b) {
      return false;
    }
if (a == b) {
      return false;
    }
	discoverBackEdges(b);
discoverBackEdges(a);
discoverBackEdges(a);
	if (a == b) {
      return false;
    }
if (a == b) {
      return false;
    }
	discoverBackEdges(a);
08:58:10.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:11.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:11.123 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:11.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:11.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:12.487 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:12.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:13.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:13.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:13.928 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:13.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:14.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:14.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:15.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:15.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:16.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:16.068 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:16.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:16.767 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:17.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (a == b) {
      return false;
    }
	if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }
    
null

    for (DiGraphEdge<N, E> e : a.getOutEdges()) {
      // Once we visited that edge once, we no longer need to
      // re-visit it again.
      if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
    }
	if (a == b) {
      return false;
    }

MOVE-BUGGY-STATEMENT

    for (DiGraphEdge<N, E> e : a.getOutEdges()) {
      // Once we visited that edge once, we no longer need to
      // re-visit it again.
      if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
    }
    return false;
	if (a == b) {
      return false;
    }

MOVE-BUGGY-STATEMENT
08:58:17.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:18.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:18.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:18.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:18.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:19.550 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:58:19.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:20.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:20.239 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===201
08:58:20.247 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }
if (nodePredicate.apply(a.getValue()) || (inclusive || (a != start && a != end))) {
      return true;
    }
if (nodePredicate.apply(a.getValue()) &&
        (inclusive && (a != start && a != end))) {
      return true;
    }
if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start || a != end))) {
      return true;
    }
if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a == start && a != end))) {
      return true;
    }
if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a == end))) {
      return true;
    }
08:58:20.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:21.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:21.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:21.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:21.750 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:22.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:22.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:23.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:23.196 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:23.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (b != start && a != end))) {
      return true;
    }
if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && b != end))) {
      return true;
    }
08:58:23.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:24.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:24.599 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:25.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (nodePredicate != null) {


}

if (a != null) {


}

if (inclusive != null) {


}

if (a != null) {


}

if (start != null) {


}

if (a != null) {


}

if (end != null) {


}

08:58:25.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:25.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:25.965 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:26.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:26.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:27.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:27.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:28.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:28.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:28.774 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:28.775 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:29.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:29.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:30.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (nodePredicate == null) {
    return true;
}

if (nodePredicate == null) {
    return false;
}

if (nodePredicate == null) {
    throw new IllegalArgumentException("Empty variable: " + nodePredicate);
}

if (a == null) {
    return true;
}

if (a == null) {
    return false;
}

if (a == null) {
    throw new IllegalArgumentException("Empty variable: " + a);
}

if (inclusive == null) {
    return true;
}

if (inclusive == null) {
    return false;
}

if (inclusive == null) {
    throw new IllegalArgumentException("Empty variable: " + inclusive);
}

if (a == null) {
    return true;
}

if (a == null) {
    return false;
}

if (a == null) {
    throw new IllegalArgumentException("Empty variable: " + a);
}

if (start == null) {
    return true;
}

if (start == null) {
    return false;
}

if (start == null) {
    throw new IllegalArgumentException("Empty variable: " + start);
}

if (a == null) {
    return true;
}

if (a == null) {
    return false;
}

if (a == null) {
    throw new IllegalArgumentException("Empty variable: " + a);
}

if (end == null) {
    return true;
}

if (end == null) {
    return false;
}

if (end == null) {
    throw new IllegalArgumentException("Empty variable: " + end);
}

08:58:30.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:30.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:30.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:31.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:31.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:32.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:32.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:33.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:33.008 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:33.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:33.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:34.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:34.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:35.105 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:35.106 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:35.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:35.804 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:58:36.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:58:36.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:05.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:05.208 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:12.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:12.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:12.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:12.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:13.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:13.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:14.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:14.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:15.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:15.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:15.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:15.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:16.428 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:16.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:17.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:17.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:17.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:17.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:18.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:18.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:19.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
setUp();
	if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }
if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }
	setUp();
tearDown();
	if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }
if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }
	tearDown();
discoverBackEdges(a);
discoverBackEdges(a);
	if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }
if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }
	discoverBackEdges(a);
discoverBackEdges(a);
discoverBackEdges(a);
	if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }
if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }
	discoverBackEdges(a);
08:59:19.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:19.995 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:19.996 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:20.716 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:20.717 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:21.408 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:21.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:22.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:22.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:22.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:22.845 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:23.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:23.539 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:24.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:24.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:24.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:24.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:25.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:25.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:26.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

    if (a == b) {
      return false;
    }
	if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }

MOVE-BUGGY-STATEMENT

    if (a == b) {
      return false;
    }
    for (DiGraphEdge<N, E> e : a.getOutEdges()) {
      // Once we visited that edge once, we no longer need to
      // re-visit it again.
      if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
    }
	if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }

MOVE-BUGGY-STATEMENT

    if (a == b) {
      return false;
    }
    for (DiGraphEdge<N, E> e : a.getOutEdges()) {
      // Once we visited that edge once, we no longer need to
      // re-visit it again.
      if (e.getAnnotation() == VISITED_EDGE) {
        continue;
      }
      e.setAnnotation(VISITED_EDGE);

      if (ignoreEdge(e)) {
        continue;
      }
      if (e.getAnnotation() == BACK_EDGE) {
        continue;
      }

      DiGraphNode<N, E> next = e.getDestination();
      if (checkSomePathsWithoutBackEdges(next, b)) {
        return true;
      }
    }
    return false;
	if (nodePredicate.apply(a.getValue()) &&
        (inclusive || (a != start && a != end))) {
      return true;
    }

MOVE-BUGGY-STATEMENT
08:59:26.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:27.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:27.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:27.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:27.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:28.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

08:59:28.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:29.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:29.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===125
08:59:29.095 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return result;
setUp();
	return result;
return result;
	setUp();
tearDown();
	return result;
return result;
	tearDown();
08:59:29.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:29.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:29.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
08:59:46.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
08:59:46.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:04.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:04.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:05.557 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

09:00:05.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:06.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:06.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===124
09:00:06.341 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
tearDown();
tearDown(true);
tearDown(false);
09:00:06.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:07.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:07.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:07.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
tearDown(result);
tearDown(this.nodePredicate);
tearDown(this.edgePredicate);
tearDown(this.inclusive);
tearDown(BACK_EDGE);
tearDown(VISITED_EDGE);
tearDown(WHITE);
tearDown(GRAY);
tearDown(BLACK);
tearDown(this.graph);
tearDown(this.start);
tearDown(this.end);
09:00:07.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:08.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:08.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:09.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:09.113 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:09.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:09.791 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:10.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:10.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:11.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:11.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:11.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:11.824 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:12.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:12.507 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:13.194 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:13.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:13.871 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:13.872 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:14.625 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:14.626 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:15.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:15.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:16.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
setUp();
allPathsSatisfyPredicate();
somePathsSatisfyPredicate();
09:00:16.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:17.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:17.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:17.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:17.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:18.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
tearDown();
	setUp();
    boolean result = checkSomePathsWithoutBackEdges(start, end);
    
null
tearDown();
	boolean result = checkSomePathsWithoutBackEdges(start, end);
    
null

    return result;
	tearDown();

MOVE-BUGGY-STATEMENT
09:00:18.550 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:19.292 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:19.293 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:20.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:20.004 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:20.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

09:00:20.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:21.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:21.434 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===123
09:00:21.442 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
boolean result = checkSomePathsWithoutBackEdges(start, end);
boolean result = checkAllPathsWithoutBackEdges(start, end);
09:00:21.443 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:22.166 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
boolean result = checkSomePathsWithoutBackEdges(result, end);
boolean result = checkSomePathsWithoutBackEdges(this.nodePredicate, end);
boolean result = checkSomePathsWithoutBackEdges(this.edgePredicate, end);
boolean result = checkSomePathsWithoutBackEdges(this.inclusive, end);
boolean result = checkSomePathsWithoutBackEdges(BACK_EDGE, end);
boolean result = checkSomePathsWithoutBackEdges(VISITED_EDGE, end);
boolean result = checkSomePathsWithoutBackEdges(WHITE, end);
boolean result = checkSomePathsWithoutBackEdges(GRAY, end);
boolean result = checkSomePathsWithoutBackEdges(BLACK, end);
boolean result = checkSomePathsWithoutBackEdges(this.graph, end);
boolean result = checkSomePathsWithoutBackEdges(this.start, end);
boolean result = checkSomePathsWithoutBackEdges(this.end, end);
boolean result = checkSomePathsWithoutBackEdges( end);
boolean result = checkSomePathsWithoutBackEdges(result, start, end);
boolean result = checkSomePathsWithoutBackEdges(this.nodePredicate, start, end);
boolean result = checkSomePathsWithoutBackEdges(this.edgePredicate, start, end);
boolean result = checkSomePathsWithoutBackEdges(this.inclusive, start, end);
boolean result = checkSomePathsWithoutBackEdges(BACK_EDGE, start, end);
boolean result = checkSomePathsWithoutBackEdges(VISITED_EDGE, start, end);
boolean result = checkSomePathsWithoutBackEdges(WHITE, start, end);
boolean result = checkSomePathsWithoutBackEdges(GRAY, start, end);
boolean result = checkSomePathsWithoutBackEdges(BLACK, start, end);
boolean result = checkSomePathsWithoutBackEdges(this.graph, start, end);
boolean result = checkSomePathsWithoutBackEdges(this.start, start, end);
boolean result = checkSomePathsWithoutBackEdges(this.end, start, end);
boolean result = checkSomePathsWithoutBackEdges(start, result);
boolean result = checkSomePathsWithoutBackEdges(start, this.nodePredicate);
boolean result = checkSomePathsWithoutBackEdges(start, this.edgePredicate);
boolean result = checkSomePathsWithoutBackEdges(start, this.inclusive);
boolean result = checkSomePathsWithoutBackEdges(start, BACK_EDGE);
boolean result = checkSomePathsWithoutBackEdges(start, VISITED_EDGE);
boolean result = checkSomePathsWithoutBackEdges(start, WHITE);
boolean result = checkSomePathsWithoutBackEdges(start, GRAY);
boolean result = checkSomePathsWithoutBackEdges(start, BLACK);
boolean result = checkSomePathsWithoutBackEdges(start, this.graph);
boolean result = checkSomePathsWithoutBackEdges(start, this.start);
boolean result = checkSomePathsWithoutBackEdges(start, this.end);
boolean result = checkSomePathsWithoutBackEdges(start, );
boolean result = checkSomePathsWithoutBackEdges(start, result, end);
boolean result = checkSomePathsWithoutBackEdges(start, this.nodePredicate, end);
boolean result = checkSomePathsWithoutBackEdges(start, this.edgePredicate, end);
boolean result = checkSomePathsWithoutBackEdges(start, this.inclusive, end);
boolean result = checkSomePathsWithoutBackEdges(start, BACK_EDGE, end);
boolean result = checkSomePathsWithoutBackEdges(start, VISITED_EDGE, end);
boolean result = checkSomePathsWithoutBackEdges(start, WHITE, end);
boolean result = checkSomePathsWithoutBackEdges(start, GRAY, end);
boolean result = checkSomePathsWithoutBackEdges(start, BLACK, end);
boolean result = checkSomePathsWithoutBackEdges(start, this.graph, end);
boolean result = checkSomePathsWithoutBackEdges(start, this.start, end);
boolean result = checkSomePathsWithoutBackEdges(start, this.end, end);
boolean result = checkSomePathsWithoutBackEdges(start, end, result);
boolean result = checkSomePathsWithoutBackEdges(start, end, this.nodePredicate);
boolean result = checkSomePathsWithoutBackEdges(start, end, this.edgePredicate);
boolean result = checkSomePathsWithoutBackEdges(start, end, this.inclusive);
boolean result = checkSomePathsWithoutBackEdges(start, end, BACK_EDGE);
boolean result = checkSomePathsWithoutBackEdges(start, end, VISITED_EDGE);
boolean result = checkSomePathsWithoutBackEdges(start, end, WHITE);
boolean result = checkSomePathsWithoutBackEdges(start, end, GRAY);
boolean result = checkSomePathsWithoutBackEdges(start, end, BLACK);
boolean result = checkSomePathsWithoutBackEdges(start, end, this.graph);
boolean result = checkSomePathsWithoutBackEdges(start, end, this.start);
boolean result = checkSomePathsWithoutBackEdges(start, end, this.end);
09:00:22.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:22.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:22.931 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:23.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:23.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:24.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:24.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:24.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:24.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:25.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:25.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:26.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:26.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:27.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:27.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:27.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:27.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:28.481 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:28.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:29.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:29.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:29.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:29.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:30.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:30.524 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:31.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:31.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:31.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:31.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:32.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:32.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:33.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:33.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:33.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:33.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:34.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:34.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:35.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:35.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:36.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:36.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:36.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:36.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:37.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:37.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:38.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:38.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:38.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:38.761 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:39.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:39.498 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:40.436 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:40.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:41.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:41.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:42.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:42.330 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:43.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:43.035 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:43.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:43.738 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:44.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:44.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:45.837 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:45.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:46.537 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:46.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:47.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:47.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:47.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:47.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:48.623 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:48.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:49.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:49.310 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:49.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:49.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:50.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:50.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:50.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:50.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:51.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:51.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:52.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:52.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:53.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:53.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:53.795 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:53.796 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:54.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:54.565 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:55.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:55.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:56.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:56.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:57.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:57.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:58.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:58.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:58.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:58.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:00:59.612 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:00:59.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:00.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:00.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:00.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:00.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:01.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:01.687 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:02.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:02.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:03.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:03.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:03.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:03.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:04.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:04.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:05.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:05.192 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:05.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:05.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:06.681 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:06.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:07.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
boolean result = result;
boolean result = this.nodePredicate;
boolean result = this.edgePredicate;
boolean result = this.inclusive;
boolean result = BACK_EDGE;
boolean result = VISITED_EDGE;
boolean result = WHITE;
boolean result = GRAY;
boolean result = BLACK;
boolean result = this.graph;
boolean result = this.start;
boolean result = this.end;
09:01:07.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:08.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:08.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:08.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:08.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:09.432 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:09.433 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:10.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:10.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:10.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:10.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:11.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:11.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:12.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:12.363 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:13.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:13.107 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:13.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:13.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:14.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:14.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:15.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:15.338 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:16.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (start != null) {


}

if (end != null) {


}

09:01:16.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:17.751 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:17.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:18.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (start == null) {
    return true;
}

if (start == null) {
    return false;
}

if (start == null) {
    throw new IllegalArgumentException("Empty variable: " + start);
}

if (end == null) {
    return true;
}

if (end == null) {
    return false;
}

if (end == null) {
    throw new IllegalArgumentException("Empty variable: " + end);
}

09:01:18.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:19.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:19.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:20.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:20.676 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:21.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:21.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:22.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:22.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:23.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:23.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:23.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
setUp();
	boolean result = checkSomePathsWithoutBackEdges(start, end);
boolean result = checkSomePathsWithoutBackEdges(start, end);
	setUp();
tearDown();
	boolean result = checkSomePathsWithoutBackEdges(start, end);
boolean result = checkSomePathsWithoutBackEdges(start, end);
	tearDown();
09:01:23.829 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:24.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:24.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:25.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:25.250 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:25.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:25.969 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:26.666 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

09:01:26.667 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:27.603 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:27.604 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.CheckPathsBetweenNodes ===122
09:01:27.615 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
setUp();
setUp(true);
setUp(false);
09:01:27.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:28.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:28.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:29.348 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
setUp(this.nodePredicate);
setUp(this.edgePredicate);
setUp(this.inclusive);
setUp(BACK_EDGE);
setUp(VISITED_EDGE);
setUp(WHITE);
setUp(GRAY);
setUp(BLACK);
setUp(this.graph);
setUp(this.start);
setUp(this.end);
09:01:29.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:30.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:30.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:30.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:30.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:31.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:31.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:32.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:32.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:32.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:32.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:33.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:33.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:34.282 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:34.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:34.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:34.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:35.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:35.683 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:36.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:36.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:37.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
tearDown();
allPathsSatisfyPredicate();
somePathsSatisfyPredicate();
09:01:37.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:37.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:37.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:38.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:38.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:39.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

    boolean result = checkSomePathsWithoutBackEdges(start, end);
	setUp();

MOVE-BUGGY-STATEMENT

    boolean result = checkSomePathsWithoutBackEdges(start, end);
    tearDown();
	setUp();

MOVE-BUGGY-STATEMENT

    boolean result = checkSomePathsWithoutBackEdges(start, end);
    tearDown();
    return result;
	setUp();

MOVE-BUGGY-STATEMENT
09:01:39.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:39.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:39.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:40.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:40.679 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:41.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

09:01:41.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:42.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:42.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1427
09:01:42.213 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return new NodeMismatch(this, node2);
if (node2 != null) {


}

09:01:42.218 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:43.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (node2 == null) {
    return null;
}

if (node2 == null) {
    throw new IllegalArgumentException("Empty variable: " + node2);
}

09:01:43.203 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:44.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:44.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:45.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
addChildToFront(node2);
addChildToFront(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildToFront(node2);
addChildToBack(node2);
addChildToBack(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildToBack(node2);
addChildrenToFront(node2);
addChildrenToFront(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildrenToFront(node2);
addChildrenToBack(node2);
addChildrenToBack(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	addChildrenToBack(node2);
removeChild(node2);
removeChild(node2);
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	removeChild(node2);
detachChildren();
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	detachChildren();
setQuotedString();
	return new NodeMismatch(this, node2);
return new NodeMismatch(this, node2);
	setQuotedString();
09:01:45.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:46.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:46.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:47.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:47.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:48.606 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:48.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:49.595 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:49.596 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:50.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:50.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:51.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:51.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:52.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:52.464 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:53.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:53.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:54.412 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:54.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:55.377 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:55.378 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:56.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:56.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:57.304 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:57.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:58.299 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:58.300 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:01:59.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:01:59.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:00.273 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:00.274 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:01.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:01.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:02.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:02.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:03.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:03.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:04.150 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

09:02:04.151 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:05.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:05.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FlowSensitiveInlineVariables ===166
09:02:05.165 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
inlinedNewDependencies.add(t.getScope().getVar(c.varName));
inlinedNewDependencies.add(true, t.getScope().getVar(c.varName));
inlinedNewDependencies.add(false, t.getScope().getVar(c.varName));
inlinedNewDependencies.add(t.getScope().getVar(c.varName), true);
inlinedNewDependencies.add(t.getScope().getVar(c.varName), false);
09:02:05.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:05.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:05.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:06.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:06.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:07.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:07.543 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:08.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
inlinedNewDependencies.add(c, t.getScope().getVar(c.varName));
inlinedNewDependencies.add(cfa, t.getScope().getVar(c.varName));
inlinedNewDependencies.add(t, t.getScope().getVar(c.varName));
inlinedNewDependencies.add(this.compiler, t.getScope().getVar(c.varName));
inlinedNewDependencies.add(this.cfg, t.getScope().getVar(c.varName));
inlinedNewDependencies.add(this.candidates, t.getScope().getVar(c.varName));
inlinedNewDependencies.add(this.reachingDef, t.getScope().getVar(c.varName));
inlinedNewDependencies.add(this.reachingUses, t.getScope().getVar(c.varName));
inlinedNewDependencies.add(SIDE_EFFECT_PREDICATE, t.getScope().getVar(c.varName));
inlinedNewDependencies.add(t.getScope().getVar(c.varName), c);
inlinedNewDependencies.add(t.getScope().getVar(c.varName), cfa);
inlinedNewDependencies.add(t.getScope().getVar(c.varName), t);
inlinedNewDependencies.add(t.getScope().getVar(c.varName), this.compiler);
inlinedNewDependencies.add(t.getScope().getVar(c.varName), this.cfg);
inlinedNewDependencies.add(t.getScope().getVar(c.varName), this.candidates);
inlinedNewDependencies.add(t.getScope().getVar(c.varName), this.reachingDef);
inlinedNewDependencies.add(t.getScope().getVar(c.varName), this.reachingUses);
inlinedNewDependencies.add(t.getScope().getVar(c.varName), SIDE_EFFECT_PREDICATE);
09:02:08.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:09.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:09.089 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:09.873 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:09.874 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:10.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:10.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:11.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:11.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:12.247 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:12.248 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:13.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:13.009 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:13.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:13.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:14.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:14.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:15.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:15.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:16.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:16.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:17.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:17.003 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:17.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:17.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:18.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:18.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:19.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:19.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:20.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:20.251 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:21.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:21.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:21.831 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:21.832 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:22.648 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (inlinedNewDependencies != null) {


}

if (t != null) {


}

09:02:22.649 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:23.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:23.446 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:24.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (inlinedNewDependencies == null) {
    return;
}

if (inlinedNewDependencies == null) {
    throw new IllegalArgumentException("Empty variable: " + inlinedNewDependencies);
}

if (t == null) {
    return;
}

if (t == null) {
    throw new IllegalArgumentException("Empty variable: " + t);
}

09:02:24.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:25.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:25.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:25.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:25.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:26.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:26.622 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:27.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

09:02:27.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:28.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:28.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.DataFlowAnalysis ===575
09:02:28.262 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
escaped.add(var);
escaped.add(true, var);
escaped.add(false, var);
escaped.add(var, true);
escaped.add(var, false);
09:02:28.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:29.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:29.173 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:30.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:30.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:30.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:30.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:31.719 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
escaped.add(i);
escaped.add(t);
escaped.add(finder);
escaped.add(jsScope);
escaped.add(compiler);
escaped.add(this.cfg);
escaped.add(this.joinOp);
escaped.add(this.orderedWorkSet);
escaped.add(MAX_STEPS);
escaped.add();
escaped.add(i, var);
escaped.add(t, var);
escaped.add(finder, var);
escaped.add(jsScope, var);
escaped.add(compiler, var);
escaped.add(this.cfg, var);
escaped.add(this.joinOp, var);
escaped.add(this.orderedWorkSet, var);
escaped.add(MAX_STEPS, var);
escaped.add(var, i);
escaped.add(var, t);
escaped.add(var, finder);
escaped.add(var, jsScope);
escaped.add(var, compiler);
escaped.add(var, this.cfg);
escaped.add(var, this.joinOp);
escaped.add(var, this.orderedWorkSet);
escaped.add(var, MAX_STEPS);
09:02:31.720 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:32.562 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:32.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:33.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:33.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:34.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:34.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:35.221 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:35.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:36.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:36.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:36.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:36.976 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:37.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:37.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:38.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:38.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:39.570 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:39.571 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:40.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:40.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:41.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:41.298 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:42.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:42.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:43.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:43.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:43.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:43.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:44.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:44.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:45.672 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:45.673 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:46.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:46.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:47.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:47.516 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:48.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:48.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:49.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:49.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:50.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:50.162 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:51.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:51.002 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:51.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:51.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:52.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:52.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:53.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:53.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:54.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:54.567 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:55.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:55.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:56.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (escaped != null) {


}

if (var != null) {


}

09:02:56.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:57.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:57.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:58.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
if (escaped == null) {
    return;
}

if (escaped == null) {
    throw new IllegalArgumentException("Empty variable: " + escaped);
}

if (var == null) {
    return;
}

if (var == null) {
    throw new IllegalArgumentException("Empty variable: " + var);
}

09:02:58.124 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:58.992 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:58.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:02:59.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:02:59.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:03:00.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:03:00.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:03:01.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 

09:03:01.602 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
09:03:02.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-3 ---Fixer: fix fail because of failed compiling! 
09:03:02.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.FlowSensitiveInlineVariables ===60
09:03:02.478 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
FlowSensitiveInlineVariables extends AbstractPostOrderCallback
    implements CompilerPass, ScopedCallback {

  /**
   * Implementation:
   *
   * This pass first perform a traversal to gather a list of Candidates that
   * could be inlined using {@link GatherCandiates}.
   *
   * The second step involves verifying that each candidate is actually safe
   * to inline with {@link Candidate#canInline()} and finally perform inlining
   * using {@link Candidate#inlineVariable()}.
   *
   * The reason for the delayed evaluation of the candidates is because we
   * need two separate dataflow result.
   */
  private final AbstractCompiler compiler;
  private final Set<Var> inlinedNewDependencies = Sets.newHashSet();

  // These two pieces of data is persistent in the whole execution of enter
  // scope.
  private ControlFlowGraph<Node> cfg;
  private List<Candidate> candidates;
  private MustBeReachingVariableDef reachingDef;
  private MaybeReachingVariableUse reachingUses;

  private static final Predicate<Node> SIDE_EFFECT_PREDICATE =
    new Predicate<Node>() {
      @Override
      public boolean apply(Node n) {
        // When the node is null it means, we reached the implicit return
        // where the function returns (possibly without an return statement)
        if (n == null) {
          return false;
        }

        // TODO(user): We only care about calls to functions that
        // passes one of the dependent variable to a non-side-effect free
        // function.
        if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
          return true;
        }

        if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
          return true;
        }

        if (n.isDelProp()) {
          return true;
        }

        for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
          if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
            return true;
          }
        }
        return false;
      }
  };

  public FlowSensitiveInlineVariables(AbstractCompiler compiler) {
    this.compiler = compiler;
  }

  @Override
  public void enterScope(NodeTraversal t) {

    if (t.inGlobalScope()) {
      return; // Don't even brother. All global variables are likely escaped.
    }

    if (LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE <
        t.getScope().getVarCount()) {
      return;
    }

    // Compute the forward reaching definition.
    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);
    // Process the body of the function.
    Preconditions.checkState(t.getScopeRoot().isFunction());
    cfa.process(null, t.getScopeRoot().getLastChild());
    cfg = cfa.getCfg();
    reachingDef = new MustBeReachingVariableDef(cfg, t.getScope(), compiler);
    reachingDef.analyze();
    candidates = Lists.newLinkedList();

    // Using the forward reaching definition search to find all the inline
    // candidates
    new NodeTraversal(compiler, new GatherCandiates()).traverse(
        t.getScopeRoot().getLastChild());

    // Compute the backward reaching use. The CFG can be reused.
    reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);
    reachingUses.analyze();
    for (Candidate c : candidates) {
      if (c.canInline()) {
        c.inlineVariable();

        // If definition c has dependencies, then inlining it may have
        // introduced new dependencies for our other inlining candidates.
        //
        // MustBeReachingVariableDef uses this dependency graph in its
        // analysis, so some of these candidates may no longer be valid.
        // We keep track of when the variable dependency graph changed
        // so that we can back off appropriately.
        if (!c.defMetadata.depends.isEmpty()) {
          inlinedNewDependencies.add(t.getScope().getVar(c.varName));
        }
      }
    }
  }

  @Override
  public void exitScope(NodeTraversal t) {}

  @Override
  public void process(Node externs, Node root) {
    (new NodeTraversal(compiler, this)).traverseRoots(externs, root);
  }

  @Override
  public void visit(NodeTraversal t, Node n, Node parent) {
    // TODO(user): While the helpers do a subtree traversal on the AST, the
    // compiler pass itself only traverse the AST to look for function
    // declarations to perform dataflow analysis on. We could combine
    // the traversal in DataFlowAnalysis's computeEscaped later to save some
    // time.
  }

  /**
   * Gathers a list of possible candidates for inlining based only on
   * information from {@link MustBeReachingVariableDef}. The list will be stored
   * in {@code candidates} and the validity of each inlining Candidate should
   * be later verified with {@link Candidate#canInline()} when
   * {@link MaybeReachingVariableUse} has been performed.
   */
  private class GatherCandiates extends AbstractShallowCallback {
    @Override
    public void visit(NodeTraversal t, Node n, Node parent) {
      DiGraphNode<Node, Branch> graphNode = cfg.getDirectedGraphNode(n);
      if (graphNode == null) {
        // Not a CFG node.
        return;
      }
      FlowState<MustDef> state = graphNode.getAnnotation();
      final MustDef defs = state.getIn();
      final Node cfgNode = n;
      AbstractCfgNodeTraversalCallback gatherCb =
          new AbstractCfgNodeTraversalCallback() {

        @Override
        public void visit(NodeTraversal t, Node n, Node parent) {
          if (n.isName()) {

            // n.getParent() isn't null. This just the case where n is the root
            // node that gatherCb started at.
            if (parent == null) {
              return;
            }

            // Make sure that the name node is purely a read.
            if ((NodeUtil.isAssignmentOp(parent) && parent.getFirstChild() == n)
                || parent.isVar() || parent.isInc() || parent.isDec() ||
                parent.isParamList() || parent.isCatch()) {
              return;
            }

            String name = n.getString();
            if (compiler.getCodingConvention().isExported(name)) {
              return;
            }

            Definition def = reachingDef.getDef(name, cfgNode);
            // TODO(nicksantos): We need to add some notion of @const outer
            // scope vars. We can inline those just fine.
            if (def != null &&
                !reachingDef.dependsOnOuterScopeVars(def)) {
              candidates.add(new Candidate(name, def, n, cfgNode));
            }
          }
        }
      };

      NodeTraversal.traverse(compiler, cfgNode, gatherCb);
    }
  }

  /**
   * Models the connection between a definition and a use of that definition.
   */
  private class Candidate {

    // Name of the variable.
    private final String varName;

    // Nodes related to the definition.
    private Node def;
    private final Definition defMetadata;

    // Nodes related to the use.
    private final Node use;
    private final Node useCfgNode;

    // Number of uses of the variable within the CFG node that represented the
    // use in the CFG.
    private int numUseWithinUseCfgNode;

    Candidate(String varName, Definition defMetadata,
        Node use, Node useCfgNode) {
      Preconditions.checkArgument(use.isName());
      this.varName = varName;
      this.defMetadata = defMetadata;
      this.use = use;
      this.useCfgNode = useCfgNode;
    }

    private Node getDefCfgNode() {
      return defMetadata.node;
    }

    private boolean canInline() {
      // Cannot inline a parameter.
      if (getDefCfgNode().isFunction()) {
        return false;
      }

      // If one of our dependencies has been inlined, then our dependency
      // graph is wrong. Re-computing it would take another CFG computation,
      // so we just back off for now.
      for (Var dependency : defMetadata.depends) {
        if (inlinedNewDependencies.contains(dependency)) {
          return false;
        }
      }

      getDefinition(getDefCfgNode(), null);
      getNumUseInUseCfgNode(useCfgNode, null);

      // Definition was not found.
      if (def == null) {
        return false;
      }

      // Check that the assignment isn't used as a R-Value.
      // TODO(user): Certain cases we can still inline.
      if (def.isAssign() && !NodeUtil.isExprAssign(def.getParent())) {
        return false;
      }

      // The right of the definition has side effect:
      // Example, for x:
      // x = readProp(b), modifyProp(b); print(x);
      if (checkRightOf(def, getDefCfgNode(), SIDE_EFFECT_PREDICATE)) {
        return false;
      }

      // Similar check as the above but this time, all the sub-expressions
      // left of the use of the variable.
      // x = readProp(b); modifyProp(b), print(x);
      if (checkLeftOf(use, useCfgNode, SIDE_EFFECT_PREDICATE)) {
        return false;
      }

      // TODO(user): Side-effect is OK sometimes. As long as there are no
      // side-effect function down all paths to the use. Once we have all the
      // side-effect analysis tool.
      if (NodeUtil.mayHaveSideEffects(def.getLastChild(), compiler)) {
        return false;
      }

      // TODO(user): We could inline all the uses if the expression is short.

      // Finally we have to make sure that there are no more than one use
      // in the program and in the CFG node. Even when it is semantically
      // correctly inlining twice increases code size.
      if (numUseWithinUseCfgNode != 1) {
        return false;
      }

      // Make sure that the name is not within a loop
      if (NodeUtil.isWithinLoop(use)) {
        return false;
      }


      Collection<Node> uses = reachingUses.getUses(varName, getDefCfgNode());

      if (uses.size() != 1) {
        return false;
      }

      // We give up inlining stuff with R-Value that has:
      // 1) GETPROP, GETELEM,
      // 2) anything that creates a new object.
      // 3) a direct reference to a catch expression.
      // Example:
      // var x = a.b.c; j.c = 1; print(x);
      // Inlining print(a.b.c) is not safe consider j and be alias to a.b.
      // TODO(user): We could get more accuracy by looking more in-detail
      // what j is and what x is trying to into to.
      // TODO(johnlenz): rework catch expression handling when we
      // have lexical scope support so catch expressions don't
      // need to be special cased.
      if (NodeUtil.has(def.getLastChild(),
          new Predicate<Node>() {
              @Override
              public boolean apply(Node input) {
                switch (input.getType()) {
                  case Token.GETELEM:
                  case Token.GETPROP:
                  case Token.ARRAYLIT:
                  case Token.OBJECTLIT:
                  case Token.REGEXP:
                  case Token.NEW:
                    return true;
                }
                return false;
              }
          },
          new Predicate<Node>() {
              @Override
              public boolean apply(Node input) {
                // Recurse if the node is not a function.
                return !input.isFunction();
              }
          })) {
        return false;
      }

      // We can skip the side effect check along the paths of two nodes if
      // they are just next to each other.
      if (NodeUtil.isStatementBlock(getDefCfgNode().getParent()) &&
          getDefCfgNode().getNext() != useCfgNode) {
        // Similar side effect check as above but this time the side effect is
        // else where along the path.
        // x = readProp(b); while(modifyProp(b)) {}; print(x);
        CheckPathsBetweenNodes<Node, ControlFlowGraph.Branch>
          pathCheck = new CheckPathsBetweenNodes<Node, ControlFlowGraph.Branch>(
                 cfg,
                 cfg.getDirectedGraphNode(getDefCfgNode()),
                 cfg.getDirectedGraphNode(useCfgNode),
                 SIDE_EFFECT_PREDICATE,
                 Predicates.
                     <DiGraphEdge<Node, ControlFlowGraph.Branch>>alwaysTrue(),
                 false);
        if (pathCheck.somePathsSatisfyPredicate()) {
          return false;
        }
      }

      return true;
    }

    /**
     * Actual transformation.
     */
    private void inlineVariable() {
      Node defParent = def.getParent();
      Node useParent = use.getParent();
      if (def.isAssign()) {
        Node rhs = def.getLastChild();
        rhs.detachFromParent();
        // Oh yes! I have grandparent to remove this.
        Preconditions.checkState(defParent.isExprResult());
        while (defParent.getParent().isLabel()) {
          defParent = defParent.getParent();
        }
        defParent.detachFromParent();
        useParent.replaceChild(use, rhs);
      } else if (defParent.isVar()) {
        Node rhs = def.getLastChild();
        def.removeChild(rhs);
        useParent.replaceChild(use, rhs);
      } else {
        Preconditions.checkState(false, "No other definitions can be inlined.");
      }
      compiler.reportCodeChange();
    }

    /**
     * Set the def node
     *
     * @param n A node that has a corresponding CFG node in the CFG.
     */
    private void getDefinition(Node n, Node parent) {
      AbstractCfgNodeTraversalCallback gatherCb =
        new AbstractCfgNodeTraversalCallback() {

        @Override
        public void visit(NodeTraversal t, Node n, Node parent) {
          switch (n.getType()) {
            case Token.NAME:
              if (n.getString().equals(varName) && n.hasChildren()) {
                def = n;
              }
              return;

            case Token.ASSIGN:
              Node lhs = n.getFirstChild();
              if (lhs.isName() && lhs.getString().equals(varName)) {
                def = n;
              }
              return;
          }
        }
      };
      NodeTraversal.traverse(compiler, n, gatherCb);
    }

    /**
     * Computes the number of uses of the variable varName and store it in
     * numUseWithinUseCfgNode.
     */
    private void getNumUseInUseCfgNode(Node n, Node parant) {

      AbstractCfgNodeTraversalCallback gatherCb =
          new AbstractCfgNodeTraversalCallback() {

        @Override
        public void visit(NodeTraversal t, Node n, Node parent) {
          if (n.isName() && n.getString().equals(varName) &&
              // do not count in if it is left child of an assignment operator
              !(parent.isAssign() &&
               (parent.getFirstChild() == n))) {
            numUseWithinUseCfgNode++;
          }
        }
      };

      NodeTraversal.traverse(compiler, n, gatherCb);
    }
  }

  /**
   * Given an expression by its root and sub-expression n, return true if there
   * the predicate is true for some expression on the right of n.
   *
   * Example:
   *
   * NotChecked(), NotChecked(), n, Checked(), Checked();
   */
  private static boolean checkRightOf(
      Node n, Node expressionRoot, Predicate<Node> predicate) {
    for (Node p = n; p != expressionRoot; p = p.getParent()) {
      for (Node cur = p.getNext(); cur != null; cur = cur.getNext()) {
        if (predicate.apply(cur)) {
          return true;
        }
      }
    }
    return false;
  }

  /**
   * Given an expression by its root and sub-expression n, return true if there
   * the predicate is true for some expression on the left of n.
   *
   * Example:
   *
   * Checked(), Checked(), n, NotChecked(), NotChecked();
   */
  private static boolean checkLeftOf(
      Node n, Node expressionRoot, Predicate<Node> predicate) {
    for (Node p = n.getParent(); p != expressionRoot; p = p.getParent()) {
      for (Node cur = p.getParent().getFirstChild(); cur != p;
          cur = cur.getNext()) {
        if (predicate.apply(cur)) {
          return true;
        }
      }
    }
    return false;
  }
}
