=== Number of PatchCategory.CleanFixFull = 15 ===
	 org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V = 2
	 org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V = 5
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D = 8
=== Number of PatchCategory.CleanFixPartial = 0 ===
=== Number of PatchCategory.NoisyFixFull = 189 ===
	 org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V = 1
	 org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V = 10
	 org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; = 1
	 org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z = 18
	 org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V = 15
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V = 4
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V = 13
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z = 10
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V = 3
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z = 33
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z = 18
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D = 3
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I = 4
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I = 17
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D = 7
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D = 32
=== Number of PatchCategory.NoisyFixPartial = 0 ===
=== Number of PatchCategory.NoneFix = 1374 ===
	 org.apache.commons.math.MathRuntimeException$6:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V = 7
	 org.apache.commons.math.MathRuntimeException:createConcurrentModificationException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/util/ConcurrentModificationException; = 3
	 org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V = 18
	 org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V = 13
	 org.apache.commons.math.linear.OpenMapRealVector:<init>(ID)V = 11
	 org.apache.commons.math.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V = 18
	 org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector; = 50
	 org.apache.commons.math.linear.OpenMapRealVector:getDimension()I = 8
	 org.apache.commons.math.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap; = 7
	 org.apache.commons.math.linear.OpenMapRealVector:getEntry(I)D = 15
	 org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z = 15
	 org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V = 38
	 org.apache.commons.math.util.FastMath:abs(D)D = 9
	 org.apache.commons.math.util.FastMath:ceil(D)D = 44
	 org.apache.commons.math.util.FastMath:floor(D)D = 77
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V = 6
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V = 75
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z = 9
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:key()I = 58
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D = 48
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V = 7
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V = 27
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V = 111
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I = 48
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(I)Z = 56
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z = 39
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:doRemove(I)D = 93
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I = 26
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I = 36
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D = 91
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I = 123
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; = 3
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D = 116
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:remove(I)D = 48
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z = 21
=== Number of PatchCategory.NegFix = 0 ===
