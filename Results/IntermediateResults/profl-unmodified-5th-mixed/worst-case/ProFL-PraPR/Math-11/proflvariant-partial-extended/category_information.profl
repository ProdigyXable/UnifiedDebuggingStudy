=== Number of PatchCategory.CleanFixFull = 0 ===
=== Number of PatchCategory.CleanFixPartial = 0 ===
=== Number of PatchCategory.NoisyFixFull = 0 ===
=== Number of PatchCategory.NoisyFixPartial = 0 ===
=== Number of PatchCategory.NoneFix = 5014 ===
	 org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;I)V = 4
	 org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution:getDimension()I = 7
	 org.apache.commons.math3.distribution.AbstractRealDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V = 8
	 org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V = 176
	 org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>([D[[D)V = 10
	 org.apache.commons.math3.distribution.MultivariateNormalDistribution:density([D)D = 68
	 org.apache.commons.math3.distribution.MultivariateNormalDistribution:getExponentTerm([D)D = 98
	 org.apache.commons.math3.distribution.MultivariateNormalDistribution:getMeans()[D = 17
	 org.apache.commons.math3.distribution.NormalDistribution:<init>(DD)V = 8
	 org.apache.commons.math3.distribution.NormalDistribution:<init>(DDD)V = 17
	 org.apache.commons.math3.distribution.NormalDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V = 18
	 org.apache.commons.math3.distribution.NormalDistribution:density(D)D = 80
	 org.apache.commons.math3.linear.AbstractRealMatrix$5:<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V = 2
	 org.apache.commons.math3.linear.AbstractRealMatrix$5:visit(IID)V = 13
	 org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V = 18
	 org.apache.commons.math3.linear.AbstractRealMatrix:isSquare()Z = 20
	 org.apache.commons.math3.linear.AbstractRealMatrix:multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; = 106
	 org.apache.commons.math3.linear.AbstractRealMatrix:setColumn(I[D)V = 39
	 org.apache.commons.math3.linear.AbstractRealMatrix:transpose()Lorg/apache/commons/math3/linear/RealMatrix; = 26
	 org.apache.commons.math3.linear.AbstractRealMatrix:walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D = 11
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:<init>(II)V = 5
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:<init>([[D)V = 2
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:copyIn([[D)V = 5
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:copyOut()[[D = 45
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix; = 10
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:getColumnDimension()I = 29
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:getData()[[D = 9
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:getEntry(II)D = 9
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:getRowDimension()I = 18
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:multiplyEntry(IID)V = 21
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:preMultiply([D)[D = 82
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:setEntry(IID)V = 12
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:setSubMatrix([[DII)V = 163
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D = 87
	 org.apache.commons.math3.linear.ArrayRealVector:<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;Z)V = 29
	 org.apache.commons.math3.linear.ArrayRealVector:<init>([D)V = 4
	 org.apache.commons.math3.linear.ArrayRealVector:copy()Lorg/apache/commons/math3/linear/ArrayRealVector; = 10
	 org.apache.commons.math3.linear.ArrayRealVector:getDataRef()[D = 8
	 org.apache.commons.math3.linear.ArrayRealVector:toArray()[D = 13
	 org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor:end()D = 2
	 org.apache.commons.math3.linear.EigenDecomposition$Solver:<init>([D[D[Lorg/apache/commons/math3/linear/ArrayRealVector;)V = 12
	 org.apache.commons.math3.linear.EigenDecomposition$Solver:getInverse()Lorg/apache/commons/math3/linear/RealMatrix; = 122
	 org.apache.commons.math3.linear.EigenDecomposition$Solver:isNonSingular()Z = 43
	 org.apache.commons.math3.linear.EigenDecomposition:<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V = 70
	 org.apache.commons.math3.linear.EigenDecomposition:findEigenVectors([[D)V = 595
	 org.apache.commons.math3.linear.EigenDecomposition:getDeterminant()D = 46
	 org.apache.commons.math3.linear.EigenDecomposition:getEigenvector(I)Lorg/apache/commons/math3/linear/RealVector; = 11
	 org.apache.commons.math3.linear.EigenDecomposition:getRealEigenvalues()[D = 18
	 org.apache.commons.math3.linear.EigenDecomposition:getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver; = 33
	 org.apache.commons.math3.linear.EigenDecomposition:hasComplexEigenvalues()Z = 50
	 org.apache.commons.math3.linear.EigenDecomposition:transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V = 37
	 org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V = 17
	 org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V = 6
	 org.apache.commons.math3.linear.MatrixUtils:checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V = 15
	 org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V = 17
	 org.apache.commons.math3.linear.MatrixUtils:createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix; = 44
	 org.apache.commons.math3.linear.MatrixUtils:isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)Z = 6
	 org.apache.commons.math3.linear.MatrixUtils:isSymmetricInternal(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z = 50
	 org.apache.commons.math3.linear.TriDiagonalTransformer:<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V = 43
	 org.apache.commons.math3.linear.TriDiagonalTransformer:getMainDiagonalRef()[D = 9
	 org.apache.commons.math3.linear.TriDiagonalTransformer:getQ()Lorg/apache/commons/math3/linear/RealMatrix; = 44
	 org.apache.commons.math3.linear.TriDiagonalTransformer:getQT()Lorg/apache/commons/math3/linear/RealMatrix; = 70
	 org.apache.commons.math3.linear.TriDiagonalTransformer:getSecondaryDiagonalRef()[D = 9
	 org.apache.commons.math3.linear.TriDiagonalTransformer:transform()V = 88
	 org.apache.commons.math3.random.AbstractWell:<init>(IIII)V = 18
	 org.apache.commons.math3.random.AbstractWell:<init>(IIII[I)V = 360
	 org.apache.commons.math3.random.AbstractWell:setSeed(J)V = 38
	 org.apache.commons.math3.random.AbstractWell:setSeed([I)V = 217
	 org.apache.commons.math3.random.BitsStreamGenerator:<init>()V = 2
	 org.apache.commons.math3.random.BitsStreamGenerator:clear()V = 2
	 org.apache.commons.math3.random.RandomDataGenerator:<init>()V = 2
	 org.apache.commons.math3.random.RandomDataImpl:<init>()V = 5
	 org.apache.commons.math3.random.Well19937c:<init>()V = 4
	 org.apache.commons.math3.util.FastMath:abs(D)D = 9
	 org.apache.commons.math3.util.FastMath:abs(J)J = 9
	 org.apache.commons.math3.util.FastMath:exp(D)D = 8
	 org.apache.commons.math3.util.FastMath:exp(DD[D)D = 306
	 org.apache.commons.math3.util.FastMath:log(D[D)D = 705
	 org.apache.commons.math3.util.FastMath:min(II)I = 14
	 org.apache.commons.math3.util.FastMath:pow(DD)D = 449
	 org.apache.commons.math3.util.FastMath:pow(DI)D = 12
	 org.apache.commons.math3.util.MathArrays:copyOf([D)[D = 10
	 org.apache.commons.math3.util.MathArrays:copyOf([DI)[D = 14
	 org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V = 3
	 org.apache.commons.math3.util.Precision:equals(DDD)Z = 33
	 org.apache.commons.math3.util.Precision:equals(DDI)Z = 30
=== Number of PatchCategory.NegFix = 0 ===
