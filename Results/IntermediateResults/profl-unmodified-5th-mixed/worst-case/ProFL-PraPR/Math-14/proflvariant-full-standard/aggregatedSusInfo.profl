001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.analysis.polynomials.PolynomialFunction:<init>([D)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.fitting.CurveFitter:addObservedPoint(DDD)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.fitting.WeightedObservedPoint:getWeight()D
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.linear.BlockRealMatrix:blockWidth(I)I
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.linear.BlockRealMatrix:copy()Lorg/apache/commons/math3/linear/BlockRealMatrix;
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.linear.BlockRealMatrix:createBlocksLayout(II)[[D
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.linear.BlockRealMatrix:getColumnDimension()I
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.linear.BlockRealMatrix:getRowDimension()I
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.linear.BlockRealMatrix:setEntry(IID)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.optim.MaxEval:<init>(I)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.optim.nonlinear.vector.Weight:getWeight()Lorg/apache/commons/math3/linear/RealMatrix;
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.util.FastMath:min(II)I
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V
001|100.000000|PatchCategory.NegFix|org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V
