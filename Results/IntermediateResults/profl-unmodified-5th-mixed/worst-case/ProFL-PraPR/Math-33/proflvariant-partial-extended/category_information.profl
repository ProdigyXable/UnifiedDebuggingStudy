=== Number of PatchCategory.CleanFixFull = 1 ===
	 org.apache.commons.math3.optimization.linear.SimplexTableau:dropPhase1Objective()V = 1
=== Number of PatchCategory.CleanFixPartial = 0 ===
=== Number of PatchCategory.NoisyFixFull = 47 ===
	 org.apache.commons.math3.optimization.linear.SimplexSolver:getPivotColumn(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)Ljava/lang/Integer; = 3
	 org.apache.commons.math3.optimization.linear.SimplexSolver:getPivotRow(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;I)Ljava/lang/Integer; = 7
	 org.apache.commons.math3.optimization.linear.SimplexTableau:dropPhase1Objective()V = 29
	 org.apache.commons.math3.optimization.linear.SimplexTableau:normalize(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint; = 5
	 org.apache.commons.math3.optimization.linear.SimplexTableau:normalizeConstraints(Ljava/util/Collection;)Ljava/util/List; = 3
=== Number of PatchCategory.NoisyFixPartial = 0 ===
=== Number of PatchCategory.NoneFix = 4413 ===
	 org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V = 18
	 org.apache.commons.math3.linear.AbstractRealMatrix:getRow(I)[D = 29
	 org.apache.commons.math3.linear.AbstractRealMatrix:getRowVector(I)Lorg/apache/commons/math3/linear/RealVector; = 16
	 org.apache.commons.math3.linear.AbstractRealMatrix:setRowVector(ILorg/apache/commons/math3/linear/RealVector;)V = 43
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:<init>(II)V = 6
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:<init>([[D)V = 2
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:copyIn([[D)V = 5
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:getColumnDimension()I = 29
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:getDataRef()[[D = 7
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:getEntry(II)D = 9
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:getRowDimension()I = 18
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:setEntry(IID)V = 15
	 org.apache.commons.math3.linear.Array2DRowRealMatrix:setSubMatrix([[DII)V = 163
	 org.apache.commons.math3.linear.ArrayRealVector:<init>(I)V = 1
	 org.apache.commons.math3.linear.ArrayRealVector:<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;Z)V = 29
	 org.apache.commons.math3.linear.ArrayRealVector:<init>([D)V = 4
	 org.apache.commons.math3.linear.ArrayRealVector:<init>([DZ)V = 14
	 org.apache.commons.math3.linear.ArrayRealVector:checkVectorDimensions(I)V = 17
	 org.apache.commons.math3.linear.ArrayRealVector:copy()Lorg/apache/commons/math3/linear/ArrayRealVector; = 10
	 org.apache.commons.math3.linear.ArrayRealVector:dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D = 56
	 org.apache.commons.math3.linear.ArrayRealVector:getDimension()I = 7
	 org.apache.commons.math3.linear.ArrayRealVector:getEntry(I)D = 7
	 org.apache.commons.math3.linear.ArrayRealVector:mapMultiplyToSelf(D)Lorg/apache/commons/math3/linear/RealVector; = 32
	 org.apache.commons.math3.linear.ArrayRealVector:subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector; = 75
	 org.apache.commons.math3.linear.ArrayRealVector:toArray()[D = 13
	 org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V = 17
	 org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V = 6
	 org.apache.commons.math3.linear.MatrixUtils:checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V = 17
	 org.apache.commons.math3.linear.RealVector:mapMultiply(D)Lorg/apache/commons/math3/linear/RealVector; = 23
	 org.apache.commons.math3.optimization.PointValuePair:<init>([DD)V = 4
	 org.apache.commons.math3.optimization.PointValuePair:<init>([DDZ)V = 19
	 org.apache.commons.math3.optimization.PointValuePair:getPoint()[D = 14
	 org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:<init>()V = 3
	 org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:getConstraints()Ljava/util/Collection; = 13
	 org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:getFunction()Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction; = 7
	 org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:getGoalType()Lorg/apache/commons/math3/optimization/GoalType; = 7
	 org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:incrementIterationsCounter()V = 45
	 org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:optimize(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;Z)Lorg/apache/commons/math3/optimization/PointValuePair; = 23
	 org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:restrictToNonNegative()Z = 8
	 org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:setMaxIterations(I)V = 7
	 org.apache.commons.math3.optimization.linear.LinearConstraint:<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/optimization/linear/Relationship;D)V = 6
	 org.apache.commons.math3.optimization.linear.LinearConstraint:<init>([DLorg/apache/commons/math3/optimization/linear/Relationship;D)V = 13
	 org.apache.commons.math3.optimization.linear.LinearConstraint:getCoefficients()Lorg/apache/commons/math3/linear/RealVector; = 7
	 org.apache.commons.math3.optimization.linear.LinearConstraint:getRelationship()Lorg/apache/commons/math3/optimization/linear/Relationship; = 7
	 org.apache.commons.math3.optimization.linear.LinearConstraint:getValue()D = 7
	 org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:<init>(Lorg/apache/commons/math3/linear/RealVector;D)V = 4
	 org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:<init>([DD)V = 10
	 org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:getCoefficients()Lorg/apache/commons/math3/linear/RealVector; = 7
	 org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:getConstantTerm()D = 7
	 org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:getValue([D)D = 32
	 org.apache.commons.math3.optimization.linear.Relationship:oppositeRelationship()Lorg/apache/commons/math3/optimization/linear/Relationship; = 13
	 org.apache.commons.math3.optimization.linear.SimplexSolver:<init>()V = 5
	 org.apache.commons.math3.optimization.linear.SimplexSolver:<init>(DI)V = 4
	 org.apache.commons.math3.optimization.linear.SimplexSolver:doIteration(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)V = 82
	 org.apache.commons.math3.optimization.linear.SimplexSolver:doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair; = 47
	 org.apache.commons.math3.optimization.linear.SimplexSolver:getPivotColumn(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)Ljava/lang/Integer; = 75
	 org.apache.commons.math3.optimization.linear.SimplexSolver:getPivotRow(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;I)Ljava/lang/Integer; = 195
	 org.apache.commons.math3.optimization.linear.SimplexSolver:solvePhase1(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)V = 51
	 org.apache.commons.math3.optimization.linear.SimplexTableau:<init>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V = 107
	 org.apache.commons.math3.optimization.linear.SimplexTableau:copyArray([D[D)V = 17
	 org.apache.commons.math3.optimization.linear.SimplexTableau:createTableau(Z)Lorg/apache/commons/math3/linear/RealMatrix; = 848
	 org.apache.commons.math3.optimization.linear.SimplexTableau:divideRow(ID)V = 77
	 org.apache.commons.math3.optimization.linear.SimplexTableau:dropPhase1Objective()V = 420
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getArtificialVariableOffset()I = 66
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getBasicRow(I)Ljava/lang/Integer; = 131
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getConstraintTypeCounts(Lorg/apache/commons/math3/optimization/linear/Relationship;)I = 26
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getEntry(II)D = 20
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getHeight()I = 9
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getInvertedCoefficientSum(Lorg/apache/commons/math3/linear/RealVector;)D = 32
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getNumArtificialVariables()I = 16
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getNumObjectiveFunctions()I = 25
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getNumSlackVariables()I = 16
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getOriginalNumDecisionVariables()I = 16
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getRhsOffset()I = 27
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getSlackVariableOffset()I = 40
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getSolution()Lorg/apache/commons/math3/optimization/PointValuePair; = 268
	 org.apache.commons.math3.optimization.linear.SimplexTableau:getWidth()I = 9
	 org.apache.commons.math3.optimization.linear.SimplexTableau:initializeColumnLabels()V = 317
	 org.apache.commons.math3.optimization.linear.SimplexTableau:isOptimal()Z = 87
	 org.apache.commons.math3.optimization.linear.SimplexTableau:normalize(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint; = 75
	 org.apache.commons.math3.optimization.linear.SimplexTableau:normalizeConstraints(Ljava/util/Collection;)Ljava/util/List; = 21
	 org.apache.commons.math3.optimization.linear.SimplexTableau:subtractRow(IID)V = 81
	 org.apache.commons.math3.util.FastMath:abs(D)D = 9
	 org.apache.commons.math3.util.FastMath:abs(J)J = 16
	 org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V = 3
	 org.apache.commons.math3.util.Pair:<init>(Ljava/lang/Object;Ljava/lang/Object;)V = 8
	 org.apache.commons.math3.util.Pair:getKey()Ljava/lang/Object; = 11
	 org.apache.commons.math3.util.Precision:compareTo(DDD)I = 50
	 org.apache.commons.math3.util.Precision:compareTo(DDI)I = 43
	 org.apache.commons.math3.util.Precision:equals(DDD)Z = 66
	 org.apache.commons.math3.util.Precision:equals(DDI)Z = 46
=== Number of PatchCategory.NegFix = 0 ===
