=== Number of PatchCategory.CleanFixFull = 0 ===
=== Number of PatchCategory.CleanFixPartial = 0 ===
=== Number of PatchCategory.NoisyFixFull = 0 ===
=== Number of PatchCategory.NoisyFixPartial = 0 ===
=== Number of PatchCategory.NoneFix = 999 ===
	 org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D = 26
	 org.apache.commons.math.linear.AbstractRealVector:getNorm()D = 36
	 org.apache.commons.math.linear.ArrayRealVector:<init>([D)V = 4
	 org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D = 45
	 org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D = 55
	 org.apache.commons.math.linear.ArrayRealVector:getNorm()D = 52
	 org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;)V = 3
	 org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry:getValue()D = 7
	 org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V = 13
	 org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:hasNext()Z = 8
	 org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry; = 13
	 org.apache.commons.math.linear.OpenMapRealVector:<init>([D)V = 5
	 org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V = 43
	 org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D = 39
	 org.apache.commons.math.linear.OpenMapRealVector:isDefaultValue(D)Z = 34
	 org.apache.commons.math.linear.OpenMapRealVector:sparseIterator()Ljava/util/Iterator; = 3
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V = 10
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V = 98
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z = 19
	 org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:value()D = 48
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V = 7
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V = 27
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I = 51
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex(I)I = 30
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I = 53
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I = 123
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator; = 3
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:put(ID)D = 123
	 org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z = 21
=== Number of PatchCategory.NegFix = 0 ===
