Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Mockito-10
00:40:29.893 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Mockito/10.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Mockito/10.txt
00:40:35.027 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - ProFL successfully initialized
00:40:35.056 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Mockito-10/generalSusInfo.profl
00:40:35.116 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Mockito-10/aggregatedSusInfo.profl
00:40:35.116 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Start to fix suspicious code======
00:40:35.116 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.mockito.exceptions.Reporter ===761
00:40:36.155 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + classToMock.getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.156 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Looking at org.mockito.exceptions.Reporter:761 ---
00:40:36.156 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Attempting to fix org/mockito/exceptions/Reporter.java 761 ---
00:40:36.156 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - [- org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
00:40:36.555 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + cannotStubWithNullThrowable().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.555 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + incorrectUseOfApi().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.555 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + missingMethodInvocation().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.555 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + nullPassedToVerify().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.555 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + notAMockPassedToWhenMethod().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + nullPassedToWhenMethod().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + mocksHaveToBePassedToVerifyNoMoreInteractions().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + notAMockPassedToVerifyNoMoreInteractions().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + nullPassedToVerifyNoMoreInteractions().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + notAMockPassedWhenCreatingInOrder().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + nullPassedWhenCreatingInOrder().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + mocksHaveToBePassedWhenCreatingInOrder().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + inOrderRequiresFamiliarMock().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + stubPassedToVerify().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + onlyVoidMethodsCanBeSetToDoNothing().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + noArgumentValueWasCaptured().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + extraInterfacesDoesNotAcceptNullParameters().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + extraInterfacesRequiresAtLeastOneInterface().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + cannotCallAbstractRealMethod().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + cannotVerifyToString().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + atMostAndNeverShouldNotBeUsedWithTimeout().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + invocationListenerDoesNotAcceptNullParameters().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + invocationListenersRequiresAtLeastOneListener().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + spyAndDelegateAreMutuallyExclusive().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + invalidArgumentRangeAtIdentityAnswerCreationTime().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:40:36.556 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + defaultAnswerDoesNotAcceptNullParameter().getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
---------------- Testing New Patch ----------------
00:40:36.558 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:40:48.872 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:40:48.873 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:41:01.830 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:41:01.831 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:41:14.005 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:41:14.006 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:41:26.418 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:41:26.419 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:41:38.572 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:41:38.573 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:41:51.314 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:41:51.315 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:42:03.967 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:42:03.968 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:42:16.244 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:42:16.245 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:42:28.650 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:42:28.652 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:42:40.731 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:42:40.732 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:42:52.732 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:42:52.733 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:43:04.811 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:43:04.812 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:43:16.902 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:43:16.902 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:43:28.637 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:43:28.638 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:43:40.707 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:43:40.708 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:43:52.918 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:43:52.918 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:44:05.242 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:44:05.243 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:44:17.540 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:44:17.541 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:44:30.024 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:44:30.024 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:44:42.135 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:44:42.136 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:44:54.437 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:44:54.438 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:45:06.776 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:45:06.777 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:45:19.164 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:45:19.164 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:45:31.250 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:45:31.251 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:45:43.697 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:45:43.698 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:45:56.128 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
00:45:56.163 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (classToMock != null) {
	

	}

00:45:56.163 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (classToMock == null) {
	    throw new IllegalArgumentException("Null 'classToMock' argument.");
	}

00:45:56.163 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (classToMock == null) {
	    return;
	}

00:45:56.163 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (classToMock == null) classToMock = new Class();
 
---------------- Testing New Patch ----------------
00:45:56.164 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:45:57.188 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
00:45:57.188 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
00:50:09.211 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
00:50:09.211 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
00:50:09.212 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub
00:50:09.212 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
00:50:09.212 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
00:50:09.374 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Mockito-10/aggregatedSusInfo.profl
00:50:09.374 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:serializableWontWorkForObjectsThatDontImplementSerializable(Ljava/lang/Class;)V in org.mockito.exceptions.Reporter:761
00:50:09.374 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Mockito-10
---------------- Testing New Patch ----------------
00:50:09.375 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:50:10.462 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
00:50:10.462 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
00:54:18.132 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
00:54:18.132 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
00:54:18.132 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub
00:54:18.132 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
00:54:18.132 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
00:54:18.800 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Mockito-10/aggregatedSusInfo.profl
00:54:18.800 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:serializableWontWorkForObjectsThatDontImplementSerializable(Ljava/lang/Class;)V in org.mockito.exceptions.Reporter:761
00:54:18.800 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Mockito-10
---------------- Testing New Patch ----------------
00:54:18.800 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:54:19.831 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
00:54:19.831 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
00:58:26.695 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
00:58:26.695 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
00:58:26.695 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub
00:58:26.695 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
00:58:26.695 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
00:58:40.735 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Mockito-10/aggregatedSusInfo.profl
00:58:40.735 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:serializableWontWorkForObjectsThatDontImplementSerializable(Ljava/lang/Class;)V in org.mockito.exceptions.Reporter:761
00:58:40.735 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Mockito-10
---------------- Testing New Patch ----------------
00:58:40.736 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:58:52.675 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
00:58:52.776 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" - classToMock.getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
00:58:52.777 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + classToMock.getSimpleName() - "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
---------------- Testing New Patch ----------------
00:58:52.778 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:59:04.889 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
00:59:04.890 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:59:16.746 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
00:59:16.959 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: 
00:59:16.959 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: 

---------------- Testing New Patch ----------------
00:59:16.960 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
00:59:18.015 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
00:59:18.015 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
01:03:25.582 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
01:03:25.582 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 2, [- org.mockito.internal.util.MockCreationValidatorTest::should_not_allow_serializable_with_Object_that_dont_implement_Serializable, - org.mockitousage.basicapi.MocksSerializationTest::should_fail_when_serializable_used_with_type_that_dont_implements_Serializable_and_dont_declare_a_no_arg_constructor]
01:03:25.582 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.mockito.internal.util.MockCreationValidatorTest::should_not_allow_serializable_with_Object_that_dont_implement_Serializable
01:03:25.582 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.mockitousage.basicapi.MocksSerializationTest::should_fail_when_serializable_used_with_type_that_dont_implements_Serializable_and_dont_declare_a_no_arg_constructor
01:03:25.583 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=0, fp=1, pf=2, pp=Unknown
01:03:25.583 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoisyFix found
01:08:10.358 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Mockito-10/aggregatedSusInfo.profl
01:08:10.359 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:serializableWontWorkForObjectsThatDontImplementSerializable(Ljava/lang/Class;)V in org.mockito.exceptions.Reporter:761
01:08:10.359 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 2 Mockito-10
---------------- Testing New Patch ----------------
01:08:10.360 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
01:08:11.458 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
01:08:11.458 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
01:08:23.250 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
01:08:23.250 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 0, []
01:08:23.250 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=0, fp=1, pf=0, pp=Unknown
01:08:23.251 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] CleanFix found
02:50:46.434 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Mockito-10/aggregatedSusInfo.profl
02:50:46.434 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:serializableWontWorkForObjectsThatDontImplementSerializable(Ljava/lang/Class;)V in org.mockito.exceptions.Reporter:761
02:50:46.434 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Succeeded to fix the bug Mockito-10====================
diff --git a/src/org/mockito/exceptions/Reporter.java b/src/org/mockito/exceptions/Reporter.java
index 6bf6f45d0..290e9f829 100644
--- a/src/org/mockito/exceptions/Reporter.java
+++ b/src/org/mockito/exceptions/Reporter.java
@@ -756,15 +756,5 @@ public class Reporter {
         throw new MockitoException("defaultAnswer() does not accept null parameter");
     }
 
-    public void serializableWontWorkForObjectsThatDontImplementSerializable(Class classToMock) {
-        throw new MockitoException(join(
-                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + classToMock.getSimpleName() + "'",
-                "do not implement Serializable AND do not have a no-arg constructor.",
-                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
-                "",
-                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
-                "i.e. the top-most superclass has to implements Serializable.",
-                ""
-        ));
-    }
+    
 }
02:50:46.565 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Finish off fixing======
