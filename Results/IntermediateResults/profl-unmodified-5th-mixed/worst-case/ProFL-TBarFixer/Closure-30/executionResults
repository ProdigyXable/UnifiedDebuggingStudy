Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-30
07:06:55.573 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 Failed Tests: 3
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/30.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/30.txt
07:12:37.460 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - ProFL successfully initialized
07:12:37.555 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Closure-30/generalSusInfo.profl
07:12:37.705 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Closure-30/aggregatedSusInfo.profl
07:12:37.710 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Start to fix suspicious code======
07:12:37.710 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - com.google.javascript.rhino.Node ===132
07:12:39.075 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
case SIDE_EFFECT_FLAGS:
07:12:39.076 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
return "side_effect_flags";
07:12:39.076 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Looking at com.google.javascript.rhino.Node:132 ---
07:12:39.076 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Attempting to fix com/google/javascript/rhino/Node.java 132 ---
07:12:39.076 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - [- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect]
07:12:39.335 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (SIDE_EFFECT_FLAGS != null) {
	

	}

07:12:39.335 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (SIDE_EFFECT_FLAGS == null) {
	    throw new IllegalArgumentException("Null 'SIDE_EFFECT_FLAGS' argument.");
	}

07:12:39.335 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (SIDE_EFFECT_FLAGS == null) {
	    return null;
	}

07:12:39.335 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (SIDE_EFFECT_FLAGS == null) SIDE_EFFECT_FLAGS = new null();
 
07:12:39.335 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (SIDE_EFFECT_FLAGS == null) return new String();
	 
---------------- Testing New Patch ----------------
07:12:39.337 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:12:43.265 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:12:43.265 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:12:48.232 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:12:48.232 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:12:53.122 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:12:53.122 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:12:56.696 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:12:56.696 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:01.579 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
07:13:01.699 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: 

---------------- Testing New Patch ----------------
07:13:01.700 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:06.511 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
07:13:06.564 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: detachChildren();
	case SIDE_EFFECT_FLAGS:
07:13:06.564 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: case SIDE_EFFECT_FLAGS:
	detachChildren();
07:13:06.564 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: setQuotedString();
	case SIDE_EFFECT_FLAGS:
07:13:06.564 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: case SIDE_EFFECT_FLAGS:
	setQuotedString();
---------------- Testing New Patch ----------------
07:13:06.565 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:11.515 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:13:11.516 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:16.425 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:13:16.426 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:21.128 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:13:21.129 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:25.876 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
07:13:25.876 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Attempting to fix com/google/javascript/rhino/Node.java 132 ---
07:13:25.876 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - [- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect]
07:13:26.148 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: 

---------------- Testing New Patch ----------------
07:13:26.198 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - com.google.javascript.rhino.Node ===1459
07:13:26.275 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
return res;
07:13:26.275 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Looking at com.google.javascript.rhino.Node:1459 ---
07:13:26.275 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Attempting to fix com/google/javascript/rhino/Node.java 1459 ---
07:13:26.275 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - [- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect]
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getType();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return hasChildren();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getFirstChild();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getLastChild();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getNext();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getLastSibling();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getSortedPropTypes();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return toString();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return toStringTree();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return toStringTreeImpl();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getSourceFileName();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getStaticSourceFile();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getInputId();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isFromExterns();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getLength();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getLineno();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getCharno();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getSourceOffset();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getSourcePosition();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return children();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return siblings();
07:13:26.366 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getPropListHeadForTesting();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getParent();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getAncestors();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return hasOneChild();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return hasMoreThanOneChild();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getChildCount();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getQualifiedName();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isQualifiedName();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isUnscopedQualifiedName();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return detachFromParent();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return removeFirstChild();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return removeChildren();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return detachChildren();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return cloneNode();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return cloneTree();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getJSType();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getJsDocBuilderForNode();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getJSDocInfo();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isVarArgs();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isOptionalArg();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isSyntheticBlock();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getDirectives();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return wasEmptyNode();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return getSideEffectFlags();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isOnlyModifiesThisCall();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isNoSideEffectsCall();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isLocalResultCall();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isQuotedString();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return setQuotedString();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isAdd();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isAnd();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isArrayLit();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isAssign();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isAssignAdd();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isBlock();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isBreak();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isCall();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isCase();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isCatch();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isComma();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isContinue();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isDebugger();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isDec();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isDefaultCase();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isDelProp();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isDo();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isEmpty();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isExprResult();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isFalse();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isFor();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isFunction();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isGetterDef();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isGetElem();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isGetProp();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isHook();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isIf();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isIn();
07:13:26.367 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isInc();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isInstanceOf();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isLabel();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isLabelName();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isName();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isNE();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isNew();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isNot();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isNull();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isNumber();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isObjectLit();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isOr();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isParamList();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isRegExp();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isReturn();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isScript();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isSetterDef();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isString();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isSwitch();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isThis();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isThrow();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isTrue();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isTry();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isTypeOf();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isVar();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isVoid();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isWhile();
07:13:26.368 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return isWith();
---------------- Testing New Patch ----------------
07:13:26.369 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:31.092 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:13:31.093 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:35.849 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:13:35.850 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:40.545 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:13:40.546 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:45.287 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:13:45.288 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:50.062 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:13:50.063 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:54.787 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:13:54.787 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:59.575 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:13:59.576 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:14:04.308 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:14:04.308 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:14:08.982 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:14:08.983 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:14:13.664 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:14:13.664 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:14:18.370 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:14:18.371 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:14:23.043 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:14:23.043 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:14:27.788 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:14:27.789 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:14:32.436 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:14:32.436 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:14:37.094 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:14:37.095 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:14:41.856 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:14:41.857 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:14:46.672 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:14:46.673 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:14:51.415 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:14:51.416 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:14:56.219 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:14:56.220 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:00.933 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:00.934 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:05.670 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:05.671 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:10.380 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:10.381 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:15.147 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:15.148 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:19.936 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:19.936 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:24.718 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:24.719 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:29.510 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:29.511 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:34.243 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:34.244 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:39.005 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:39.005 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:43.714 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:43.715 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:48.402 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:48.403 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:53.081 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:53.081 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:15:57.790 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:15:57.791 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:02.453 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:02.454 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:07.143 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:07.144 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:11.796 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:11.797 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:16.532 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:16.533 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:21.248 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:21.249 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:25.959 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:25.959 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:30.749 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:30.750 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:35.553 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:35.554 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:40.301 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:40.302 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:45.159 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:45.160 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:49.909 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:49.910 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:54.536 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:54.536 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:16:59.295 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:16:59.296 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:04.020 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:04.021 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:08.682 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:08.683 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:13.383 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:13.384 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:18.107 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:18.108 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:23.000 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:23.001 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:27.752 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:27.753 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:32.455 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:32.456 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:37.153 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:37.154 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:41.839 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:41.840 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:46.564 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:46.565 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:51.272 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:51.273 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:55.973 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:55.974 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:00.699 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:00.700 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:05.411 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:05.412 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:10.066 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:10.067 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:14.720 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:14.720 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:19.447 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:19.448 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:24.144 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:24.145 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:28.803 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:28.804 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:33.446 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:33.447 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:38.130 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:38.131 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:42.797 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:42.798 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:47.490 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:47.492 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:52.161 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:52.162 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:18:56.859 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:18:56.860 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:01.510 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:01.511 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:06.300 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:06.302 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:11.034 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:11.035 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:15.698 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:15.699 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:20.409 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:20.410 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:25.192 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:25.192 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:29.827 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:29.828 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:34.498 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:34.498 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:39.216 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:39.217 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:43.885 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:43.886 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:48.580 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:48.581 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:53.320 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:53.321 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:19:58.041 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:19:58.042 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:02.774 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:02.775 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:07.440 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:07.441 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:12.181 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:12.182 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:16.851 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:16.852 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:21.536 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:21.537 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:26.255 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:26.255 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:30.928 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:30.929 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:35.641 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:35.642 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:40.280 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:40.281 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:44.952 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:44.953 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:49.623 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:49.624 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:54.300 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:54.301 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:20:58.947 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:20:58.947 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:21:03.645 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:21:03.646 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:21:08.235 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:21:08.236 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:21:12.871 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:21:12.872 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:21:17.548 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:21:17.549 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:21:22.300 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:21:22.301 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:21:26.901 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:21:26.902 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:21:31.535 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:21:31.535 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:21:36.184 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:21:36.185 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:21:40.876 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:21:40.876 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:21:45.533 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
07:21:45.645 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: 

---------------- Testing New Patch ----------------
07:21:45.646 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:21:50.362 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
07:21:50.400 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: detachChildren();
	return res;
07:21:50.400 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return res;
	detachChildren();
07:21:50.400 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: setQuotedString();
	return res;
07:21:50.400 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return res;
	setQuotedString();
---------------- Testing New Patch ----------------
07:21:50.401 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:21:59.006 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
07:21:59.006 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
07:25:56.558 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 3, [com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698]
07:25:56.558 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 3, [- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect]
07:25:56.558 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
07:25:56.559 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
07:25:56.559 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
07:25:56.559 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=3, fp=0, pf=0, pp=Unknown
07:25:56.559 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
07:25:57.174 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Closure-30/aggregatedSusInfo.profl
07:25:57.174 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1459
07:25:57.174 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 3 Closure-30
---------------- Testing New Patch ----------------
07:25:57.175 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:26:01.865 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:26:01.866 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:26:10.459 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
07:26:10.460 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
07:30:06.153 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 3, [com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698]
07:30:06.153 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 5, [- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698, - com.google.javascript.jscomp.ScopedAliasesTest::testTestTypes, - com.google.javascript.rhino.NodeTest::testCheckTreeEqualsImplDifferentChild]
07:30:06.153 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
07:30:06.153 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
07:30:06.153 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
07:30:06.153 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.ScopedAliasesTest::testTestTypes
07:30:06.153 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.rhino.NodeTest::testCheckTreeEqualsImplDifferentChild
07:30:06.153 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=3, fp=0, pf=2, pp=Unknown
07:30:06.153 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NegFix found
07:30:18.893 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Closure-30/aggregatedSusInfo.profl
07:30:18.894 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1459
07:30:18.894 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 5 Closure-30
---------------- Testing New Patch ----------------
07:30:18.895 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:30:23.630 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
07:30:23.630 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - com.google.javascript.rhino.Node ===1430
07:30:23.690 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:30:23.691 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Looking at com.google.javascript.rhino.Node:1430 ---
07:30:23.691 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Attempting to fix com/google/javascript/rhino/Node.java 1430 ---
07:30:23.691 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - [- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect]
07:30:23.807 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" - "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:30:23.807 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" - toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:30:23.807 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() - "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:30:23.807 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" - node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:30:23.807 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() - "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:30:23.807 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " - diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:30:23.807 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() - "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:30:23.807 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " - diff.nodeB.toStringTree();
---------------- Testing New Patch ----------------
07:30:23.808 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:30:28.535 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:30:28.535 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:30:33.252 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:30:33.253 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:30:37.926 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:30:37.927 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:30:42.649 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:30:42.650 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:30:47.331 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:30:47.331 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:30:52.026 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:30:52.027 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:30:56.713 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:30:56.714 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:31:01.450 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-30 ---Fixer: fix fail because of failed compiling! 
07:31:01.648 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getAncestors() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.648 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.648 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLength() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLineno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getCharno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourceOffset() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourcePosition() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getChildCount() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSideEffectFlags() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSortedPropTypes() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getPropListHeadForTesting() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.setQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDouble() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getStaticSourceFile() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getInputId() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.children() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.siblings() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSDocInfo() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getNext() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastSibling() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachFromParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTreeImpl() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourceFileName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFromExterns() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasMoreThanOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isUnscopedQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVarArgs() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOptionalArg() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSyntheticBlock() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.wasEmptyNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOnlyModifiesThisCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNoSideEffectsCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLocalResultCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAdd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAnd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isArrayLit() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAssign() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAssignAdd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.649 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isBlock() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isBreak() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCase() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCatch() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isComma() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isContinue() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDebugger() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDec() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDefaultCase() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDelProp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDo() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isEmpty() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isExprResult() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFalse() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFor() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFunction() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetterDef() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetElem() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetProp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isHook() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isIf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isIn() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isInc() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isInstanceOf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLabel() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLabelName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNE() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNew() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNot() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNull() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNumber() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isObjectLit() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOr() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isParamList() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isRegExp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isReturn() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isScript() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSetterDef() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSwitch() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isThis() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isThrow() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTrue() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTry() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTypeOf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVar() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVoid() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isWhile() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isWith() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDirectives() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
07:31:01.650 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJsDocBuilderForNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
---------------- Testing New Patch ----------------
07:31:01.651 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:31:10.098 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
07:31:10.098 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
07:35:07.034 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 3, [com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698]
07:35:07.034 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 3, [- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect]
07:35:07.034 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
07:35:07.034 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
07:35:07.034 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
07:35:07.034 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=3, fp=0, pf=0, pp=Unknown
07:35:07.034 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
07:43:02.100 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Closure-30/aggregatedSusInfo.profl
07:43:02.100 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String; in com.google.javascript.rhino.Node:1430
07:43:02.100 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 3 Closure-30
---------------- Testing New Patch ----------------
07:43:02.101 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:43:10.844 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
07:43:10.844 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
07:47:08.699 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 3, [com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect, com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698]
07:47:08.699 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 3, [- com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698, - com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect]
07:47:08.699 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testInlineAcrossSideEffect1
07:47:08.699 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testIssue698
07:47:08.699 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest::testCanInlineAcrossNoSideEffect
07:47:08.699 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=3, fp=0, pf=0, pp=Unknown
07:47:08.699 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
