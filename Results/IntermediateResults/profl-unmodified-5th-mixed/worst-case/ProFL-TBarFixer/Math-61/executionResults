Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Math-61
22:39:47.036 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Math-61 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Math/61.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Math/61.txt
22:39:53.847 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - ProFL successfully initialized
22:39:53.885 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-61/generalSusInfo.profl
22:39:53.891 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Start to fix suspicious code======
22:39:53.892 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.apache.commons.math.MathRuntimeException ===39
22:39:55.497 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
public class MathRuntimeException extends RuntimeException {

    /** Serializable version identifier. */
    private static final long serialVersionUID = 9058794795027570002L;

    /**
     * Pattern used to build the message.
     */
    private final Localizable pattern;

    /**
     * Arguments used to build the message.
     */
    private final Object[] arguments;

    /**
     * Constructs a new <code>MathRuntimeException</code> with specified
     * formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @deprecated as of 2.2 replaced by {@link #MathRuntimeException(Localizable, Object...)}
     */
    @Deprecated
    public MathRuntimeException(final String pattern, final Object ... arguments) {
        this(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>MathRuntimeException</code> with specified
     * formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @since 2.2
     */
    public MathRuntimeException(final Localizable pattern, final Object ... arguments) {
        this.pattern   = pattern;
        this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
    }

    /**
     * Constructs a new <code>MathRuntimeException</code> with specified
     * nested <code>Throwable</code> root cause.
     *
     * @param rootCause  the exception or error that caused this exception
     *                   to be thrown.
     */
    public MathRuntimeException(final Throwable rootCause) {
        super(rootCause);
        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;
        this.arguments = new Object[] { (rootCause == null) ? "" : rootCause.getMessage() };
    }

    /**
     * Constructs a new <code>MathRuntimeException</code> with specified
     * formatted detail message and nested <code>Throwable</code> root cause.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param rootCause the exception or error that caused this exception
     * to be thrown.
     * @param pattern format specifier
     * @param arguments format arguments
     * @deprecated as of 2.2 replaced by {@link #MathRuntimeException(Throwable, Localizable, Object...)}
     */
    @Deprecated
    public MathRuntimeException(final Throwable rootCause,
                                final String pattern, final Object ... arguments) {
        this(rootCause, new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>MathRuntimeException</code> with specified
     * formatted detail message and nested <code>Throwable</code> root cause.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param rootCause the exception or error that caused this exception
     * to be thrown.
     * @param pattern format specifier
     * @param arguments format arguments
     * @since 2.2
     */
    public MathRuntimeException(final Throwable rootCause,
                                final Localizable pattern, final Object ... arguments) {
        super(rootCause);
        this.pattern   = pattern;
        this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
    }

    /**
     * Builds a message string by from a pattern and its arguments.
     * @param locale Locale in which the message should be translated
     * @param pattern format specifier
     * @param arguments format arguments
     * @return a message string
     * @since 2.2
     */
    private static String buildMessage(final Locale locale, final Localizable pattern,
                                       final Object ... arguments) {
        return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);
    }

    /** Gets the pattern used to build the message of this throwable.
    *
    * @return the pattern used to build the message of this throwable
    * @deprecated as of 2.2 replaced by {@link #getLocalizablePattern()}
    */
    @Deprecated
    public String getPattern() {
        return pattern.getSourceString();
    }

    /** Gets the localizable pattern used to build the message of this throwable.
     *
     * @return the localizable pattern used to build the message of this throwable
     * @since 2.2
     */
    public Localizable getLocalizablePattern() {
        return pattern;
    }

    /** Gets the arguments used to build the message of this throwable.
     *
     * @return the arguments used to build the message of this throwable
     */
    public Object[] getArguments() {
        return arguments.clone();
    }

    /** Gets the message in a specified locale.
     *
     * @param locale Locale in which the message should be translated
     *
     * @return localized message
     */
    public String getMessage(final Locale locale) {
        if (pattern != null) {
            return buildMessage(locale, pattern, arguments);
        }
        return "";
    }

    /** {@inheritDoc} */
    @Override
    public String getMessage() {
        return getMessage(Locale.US);
    }

    /** {@inheritDoc} */
    @Override
    public String getLocalizedMessage() {
        return getMessage(Locale.getDefault());
    }

    /**
     * Prints the stack trace of this exception to the standard error stream.
     */
    @Override
    public void printStackTrace() {
        printStackTrace(System.err);
    }

    /**
     * Prints the stack trace of this exception to the specified stream.
     *
     * @param out  the <code>PrintStream</code> to use for output
     */
    @Override
    public void printStackTrace(final PrintStream out) {
        synchronized (out) {
            PrintWriter pw = new PrintWriter(out, false);
            printStackTrace(pw);
            // Flush the PrintWriter before it's GC'ed.
            pw.flush();
        }
    }

    /**
     * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createArithmeticException(Localizable, Object...)}
     */
    @Deprecated
    public static ArithmeticException createArithmeticException(final String pattern,
                                                                final Object ... arguments) {
        return createArithmeticException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static ArithmeticException createArithmeticException(final Localizable pattern,
                                                                final Object ... arguments) {
        return new ArithmeticException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 5305498554076846637L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>ArrayIndexOutOfBoundsException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createArrayIndexOutOfBoundsException(Localizable, Object...)}
     */
    @Deprecated
    public static ArrayIndexOutOfBoundsException createArrayIndexOutOfBoundsException(final String pattern,
                                                                                      final Object ... arguments) {
        return createArrayIndexOutOfBoundsException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>ArrayIndexOutOfBoundsException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static ArrayIndexOutOfBoundsException createArrayIndexOutOfBoundsException(final Localizable pattern,
                                                                                      final Object ... arguments) {
        return new ArrayIndexOutOfBoundsException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 6718518191249632175L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>EOFException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createEOFException(Localizable, Object...)}
     */
    @Deprecated
    public static EOFException createEOFException(final String pattern,
                                                  final Object ... arguments) {
        return createEOFException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>EOFException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static EOFException createEOFException(final Localizable pattern,
                                                  final Object ... arguments) {
        return new EOFException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 6067985859347601503L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>IOException</code> with specified nested
     * <code>Throwable</code> root cause.
     * <p>This factory method allows chaining of other exceptions within an
     * <code>IOException</code> even for Java 5. The constructor for
     * <code>IOException</code> with a cause parameter was introduced only
     * with Java 6.</p>
     * @param rootCause the exception or error that caused this exception
     * to be thrown.
     * @return built exception
     */
    public static IOException createIOException(final Throwable rootCause) {
        IOException ioe = new IOException(rootCause.getLocalizedMessage());
        ioe.initCause(rootCause);
        return ioe;
    }

    /**
     * Constructs a new <code>IllegalArgumentException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createIllegalArgumentException(Localizable, Object...)}
     */
    @Deprecated
    public static IllegalArgumentException createIllegalArgumentException(final String pattern,
                                                                          final Object ... arguments) {
        return createIllegalArgumentException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>IllegalArgumentException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static IllegalArgumentException createIllegalArgumentException(final Localizable pattern,
                                                                          final Object ... arguments) {
        return new IllegalArgumentException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = -4284649691002411505L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>IllegalArgumentException</code> with specified nested
     * <code>Throwable</code> root cause.
     * @param rootCause the exception or error that caused this exception
     * to be thrown.
     * @return built exception
     */
    public static IllegalArgumentException createIllegalArgumentException(final Throwable rootCause) {
        IllegalArgumentException iae = new IllegalArgumentException(rootCause.getLocalizedMessage());
        iae.initCause(rootCause);
        return iae;
    }

    /**
     * Constructs a new <code>IllegalStateException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createIllegalStateException(Localizable, Object...)}
     */
    @Deprecated
    public static IllegalStateException createIllegalStateException(final String pattern,
                                                                    final Object ... arguments) {
        return createIllegalStateException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>IllegalStateException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static IllegalStateException createIllegalStateException(final Localizable pattern,
                                                                    final Object ... arguments) {
        return new IllegalStateException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 6880901520234515725L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>ConcurrentModificationException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createConcurrentModificationException(Localizable, Object...)}
     */
    @Deprecated
    public static ConcurrentModificationException createConcurrentModificationException(final String pattern,
                                                                                        final Object ... arguments) {
        return createConcurrentModificationException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>ConcurrentModificationException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static ConcurrentModificationException createConcurrentModificationException(final Localizable pattern,
                                                                                        final Object ... arguments) {
        return new ConcurrentModificationException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = -1878427236170442052L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>NoSuchElementException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createNoSuchElementException(Localizable, Object...)}
     */
    @Deprecated
    public static NoSuchElementException createNoSuchElementException(final String pattern,
                                                                      final Object ... arguments) {
        return createNoSuchElementException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>NoSuchElementException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static NoSuchElementException createNoSuchElementException(final Localizable pattern,
                                                                      final Object ... arguments) {
        return new NoSuchElementException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 1632410088350355086L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>UnsupportedOperationException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     * @deprecated in 2.2. Please use {@link org.apache.commons.math.exception.MathUnsupportedOperationException}
     * instead.
     */
    public static UnsupportedOperationException createUnsupportedOperationException(final Localizable pattern,
                                                                                    final Object ... arguments) {
        return new UnsupportedOperationException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = -4284649691002411505L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>NullPointerException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createNullPointerException(Localizable, Object...)}
     */
    @Deprecated
    public static NullPointerException createNullPointerException(final String pattern,
                                                                  final Object ... arguments) {
        return createNullPointerException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>NullPointerException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     * @deprecated in 2.2. Checks for "null" must not be performed in Commons-Math.
     */
    public static NullPointerException createNullPointerException(final Localizable pattern,
                                                                  final Object ... arguments) {
        return new NullPointerException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 451965530686593945L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

   /**
     * Constructs a new <code>ParseException</code> with specified
     * formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param offset offset at which error occurred
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createParseException(int, Localizable, Object...)}
     */
    @Deprecated
    public static ParseException createParseException(final int offset,
                                                      final String pattern,
                                                      final Object ... arguments) {
        return createParseException(offset, new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>ParseException</code> with specified
     * formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param offset offset at which error occurred
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static ParseException createParseException(final int offset,
                                                      final Localizable pattern,
                                                      final Object ... arguments) {
        return new ParseException(null, offset) {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 8153587599409010120L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /** Create an {@link java.lang.RuntimeException} for an internal error.
     * @param cause underlying cause
     * @return an {@link java.lang.RuntimeException} for an internal error
     */
    public static RuntimeException createInternalError(final Throwable cause) {

        final String argument = "https://issues.apache.org/jira/browse/MATH";

        return new RuntimeException(cause) {

            /** Serializable version identifier. */
            private static final long serialVersionUID = -201865440834027016L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, LocalizedFormats.INTERNAL_ERROR, argument);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), LocalizedFormats.INTERNAL_ERROR, argument);
            }

        };

    }

}
22:39:55.503 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Looking at org.apache.commons.math.MathRuntimeException:39 ---
22:39:55.503 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Attempting to fix org/apache/commons/math/MathRuntimeException.java 39 ---
22:39:55.503 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - [- org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:39:56.266 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: 
---------------- Testing New Patch ----------------
22:39:56.268 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:39:57.628 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
22:39:57.687 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.apache.commons.math.MathRuntimeException ===136
22:39:57.763 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);
22:39:57.763 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Looking at org.apache.commons.math.MathRuntimeException:136 ---
22:39:57.764 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Attempting to fix org/apache/commons/math/MathRuntimeException.java 136 ---
22:39:57.764 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - [- org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:39:57.870 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(), locale).format(arguments);
22:39:57.870 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern, pattern.getLocalizedString(locale), locale).format(arguments);
22:39:57.871 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(arguments, pattern.getLocalizedString(locale), locale).format(arguments);
22:39:57.871 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(this.pattern, pattern.getLocalizedString(locale), locale).format(arguments);
22:39:57.871 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(this.arguments, pattern.getLocalizedString(locale), locale).format(arguments);
22:39:57.871 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), pattern, locale).format(arguments);
22:39:57.871 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), arguments, locale).format(arguments);
22:39:57.871 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), this.pattern, locale).format(arguments);
22:39:57.871 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), this.arguments, locale).format(arguments);
22:39:57.871 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), locale, pattern).format(arguments);
22:39:57.871 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), locale, arguments).format(arguments);
22:39:57.872 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), locale, this.pattern).format(arguments);
22:39:57.872 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), locale, this.arguments).format(arguments);
22:39:57.872 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(locale).format(arguments);
22:39:57.872 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale)).format(arguments);
---------------- Testing New Patch ----------------
22:39:57.874 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:39:59.529 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:39:59.531 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:01.218 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:01.219 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:02.772 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:02.773 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:04.212 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:04.212 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:05.684 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:05.685 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:07.161 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:07.162 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:08.823 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:08.824 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:10.351 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:10.352 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:12.045 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:12.045 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:13.818 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:13.818 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:15.703 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:15.704 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:17.725 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:17.726 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:19.504 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:19.504 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:21.500 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:40:21.501 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:40:23.549 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
22:40:23.549 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
22:41:19.169 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:41:19.169 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:41:19.169 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.distribution.PoissonDistributionTest::testMean
22:41:19.170 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
22:41:19.170 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
22:41:19.174 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-61/aggregatedSusInfo.profl
22:41:19.175 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
22:41:19.175 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Math-61
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(getPattern().getLocalizedString(locale), locale).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(getLocalizablePattern().getLocalizedString(locale), locale).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(getArguments().getLocalizedString(locale), locale).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(getMessage().getLocalizedString(locale), locale).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(getLocalizedMessage().getLocalizedString(locale), locale).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(printStackTrace().getLocalizedString(locale), locale).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(getPattern()), locale).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(getLocalizablePattern()), locale).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(getArguments()), locale).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(getMessage()), locale).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(getLocalizedMessage()), locale).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(printStackTrace()), locale).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), getPattern()).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), getLocalizablePattern()).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), getArguments()).format(arguments);
22:41:19.272 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), getMessage()).format(arguments);
22:41:19.273 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), getLocalizedMessage()).format(arguments);
22:41:19.273 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), printStackTrace()).format(arguments);
22:41:19.273 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(getPattern());
22:41:19.273 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(getLocalizablePattern());
22:41:19.273 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(getArguments());
22:41:19.273 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(getMessage());
22:41:19.273 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(getLocalizedMessage());
22:41:19.273 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(printStackTrace());
---------------- Testing New Patch ----------------
22:41:19.274 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:20.866 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:20.867 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:22.674 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:22.675 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:24.358 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:24.359 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:26.029 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:26.029 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:27.779 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:27.780 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:29.330 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:29.331 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:31.075 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:31.076 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:32.715 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:32.716 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:34.450 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:34.451 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:36.180 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:36.182 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:37.677 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:37.678 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:39.292 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:39.293 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:40.873 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:40.874 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:42.569 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:42.570 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:44.321 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:44.322 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:45.921 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:45.921 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:47.446 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:47.447 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:48.830 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:48.831 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:50.272 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:50.273 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:51.704 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:51.704 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:53.121 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:53.122 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:54.528 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:54.529 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:56.031 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:56.032 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:57.496 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
22:41:57.521 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (pattern != null) {
	

	}

22:41:57.521 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (pattern == null) {
	    throw new IllegalArgumentException("Null 'pattern' argument.");
	}

22:41:57.521 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (pattern == null) {
	    return null;
	}

22:41:57.521 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (pattern == null) pattern = new Localizable();
 
22:41:57.521 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (pattern == null) return new String();
	 
22:41:57.521 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (locale != null) {
	

	}

22:41:57.521 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (locale == null) {
	    throw new IllegalArgumentException("Null 'locale' argument.");
	}

22:41:57.522 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (locale == null) {
	    return null;
	}

22:41:57.522 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (locale == null) locale = new Locale();
 
22:41:57.522 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (locale == null) return new String();
	 
22:41:57.522 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (arguments != null) {
	

	}

22:41:57.522 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (arguments == null) {
	    throw new IllegalArgumentException("Null 'arguments' argument.");
	}

22:41:57.522 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (arguments == null) {
	    return null;
	}

22:41:57.522 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (arguments == null) arguments = new Object();
 
22:41:57.522 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (arguments == null) return new String();
	 
22:41:57.523 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (!(pattern != null && locale != null && arguments != null)) return null;
	
---------------- Testing New Patch ----------------
22:41:57.524 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:41:58.985 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:41:58.985 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:42:00.575 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
22:42:00.575 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
22:42:50.387 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:42:50.387 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:42:50.387 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.distribution.PoissonDistributionTest::testMean
22:42:50.387 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
22:42:50.387 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
22:42:50.412 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-61/aggregatedSusInfo.profl
22:42:50.412 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
22:42:50.412 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Math-61
---------------- Testing New Patch ----------------
22:42:50.413 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:42:51.785 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
22:42:51.786 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
22:43:37.402 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:43:37.403 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:43:37.403 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.distribution.PoissonDistributionTest::testMean
22:43:37.403 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
22:43:37.403 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
22:43:37.413 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-61/aggregatedSusInfo.profl
22:43:37.414 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
22:43:37.414 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Math-61
---------------- Testing New Patch ----------------
22:43:37.415 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:43:38.789 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:43:38.790 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:43:40.223 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
22:43:40.223 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
22:44:23.792 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:44:23.792 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:44:23.793 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.distribution.PoissonDistributionTest::testMean
22:44:23.793 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
22:44:23.793 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
22:44:23.882 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-61/aggregatedSusInfo.profl
22:44:23.882 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
22:44:23.882 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Math-61
---------------- Testing New Patch ----------------
22:44:23.883 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:44:25.101 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:44:25.102 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:44:26.431 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
22:44:26.431 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
22:45:12.954 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:45:12.954 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:45:12.954 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.distribution.PoissonDistributionTest::testMean
22:45:12.955 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
22:45:12.955 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
22:45:13.880 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-61/aggregatedSusInfo.profl
22:45:13.880 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
22:45:13.880 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Math-61
---------------- Testing New Patch ----------------
22:45:13.881 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:45:15.099 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
22:45:15.099 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
22:45:57.803 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:45:57.803 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:45:57.803 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.distribution.PoissonDistributionTest::testMean
22:45:57.803 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
22:45:57.803 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
22:46:08.246 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-61/aggregatedSusInfo.profl
22:46:08.246 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
22:46:08.246 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Math-61
---------------- Testing New Patch ----------------
22:46:08.247 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:46:09.464 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:46:09.465 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:46:10.731 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
22:46:10.731 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
22:46:56.463 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:46:56.463 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:46:56.464 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.distribution.PoissonDistributionTest::testMean
22:46:56.464 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
22:46:56.464 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
22:48:55.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-61/aggregatedSusInfo.profl
22:48:55.148 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
22:48:55.148 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Math-61
---------------- Testing New Patch ----------------
22:48:55.149 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:48:56.296 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
22:48:56.297 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
22:48:57.597 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
22:48:57.597 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
22:49:36.762 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:49:36.762 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
22:49:36.762 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.distribution.PoissonDistributionTest::testMean
22:49:36.763 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
22:49:36.763 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
23:14:01.347 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-61/aggregatedSusInfo.profl
23:14:01.348 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
23:14:01.348 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Math-61
---------------- Testing New Patch ----------------
23:14:01.349 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
23:14:02.658 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
23:14:02.658 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
23:14:40.888 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
23:14:40.888 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
23:14:40.888 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.distribution.PoissonDistributionTest::testMean
23:14:40.888 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
23:14:40.888 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
