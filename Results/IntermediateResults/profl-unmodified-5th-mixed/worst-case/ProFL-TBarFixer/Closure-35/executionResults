Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-35
07:08:10.521 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Closure-35 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/35.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/35.txt
07:13:03.665 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - ProFL successfully initialized
07:13:03.793 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Closure-35/generalSusInfo.profl
07:13:03.965 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Closure-35/aggregatedSusInfo.profl
07:13:03.969 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Start to fix suspicious code======
07:13:03.969 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - com.google.javascript.jscomp.TypeInference ===1123
07:13:05.133 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
if (objType != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:13:05.134 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Looking at com.google.javascript.jscomp.TypeInference:1123 ---
07:13:05.134 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Attempting to fix com/google/javascript/jscomp/TypeInference.java 1123 ---
07:13:05.134 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - [- com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:13:05.283 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (objType == null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
---------------- Testing New Patch ----------------
07:13:05.292 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:13:14.417 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
07:13:14.417 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
07:17:12.649 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:17:12.649 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669, - com.google.javascript.jscomp.TypeCheckTest::testRecordType1, - com.google.javascript.jscomp.TypeCheckTest::testRecordType2, - com.google.javascript.jscomp.TypeCheckTest::testRecordType3, - com.google.javascript.jscomp.TypeCheckTest::testRecordType4, - com.google.javascript.jscomp.TypeCheckTest::testRecordType5, - com.google.javascript.jscomp.TypeCheckTest::testRecordType6, - com.google.javascript.jscomp.TypeCheckTest::testRecordType7]
07:17:12.649 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
07:17:12.649 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType1
07:17:12.650 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType2
07:17:12.650 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType3
07:17:12.650 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType4
07:17:12.650 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType5
07:17:12.650 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType6
07:17:12.650 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType7
07:17:12.650 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=7, pp=Unknown
07:17:12.650 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NegFix found
07:17:13.434 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Closure-35/aggregatedSusInfo.profl
07:17:13.434 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeInference:inferPropertyTypesToMatchConstraint(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeInference:1123
07:17:13.434 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 8 Closure-35
07:17:13.505 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((objType != null) || (!objType.isPropertyTypeDeclared(prop))) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:13.505 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((objType != null) && (!objType.isPropertyTypeDeclared(prop))) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:13.505 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((objType != null) || !(!objType.isPropertyTypeDeclared(prop))) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:13.505 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((objType != null) && !(!objType.isPropertyTypeDeclared(prop))) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:13.506 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((objType != null) || (!objType.hasProperty(prop))) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:13.506 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((objType != null) && (!objType.hasProperty(prop))) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:13.506 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((objType != null) || !(!objType.hasProperty(prop))) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:13.506 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((objType != null) && !(!objType.hasProperty(prop))) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:13.506 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (objType != constraintObj && (objType != null)) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:13.506 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (objType != constraintObj || (objType != null)) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:13.506 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (objType == constraintObj && (objType != null)) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:13.506 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (objType == constraintObj || (objType != null)) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
---------------- Testing New Patch ----------------
07:17:13.507 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:18.201 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-35 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:18.201 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:22.895 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-35 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:22.896 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:27.470 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-35 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:27.471 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:32.134 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-35 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:32.134 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:36.719 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-35 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:36.720 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:41.341 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-35 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:41.342 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:46.011 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-35 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:46.012 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:50.628 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Closure-35 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
07:17:50.629 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:17:59.040 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
07:17:59.040 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
07:21:55.878 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:21:55.878 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:21:55.878 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
07:21:55.878 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
07:21:55.878 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
07:22:16.389 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Closure-35/aggregatedSusInfo.profl
07:22:16.389 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeInference:inferPropertyTypesToMatchConstraint(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeInference:1123
07:22:16.389 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Closure-35
---------------- Testing New Patch ----------------
07:22:16.390 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:22:24.821 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
07:22:24.821 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
07:26:20.289 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:26:20.289 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:26:20.289 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
07:26:20.289 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
07:26:20.290 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
07:34:28.291 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Closure-35/aggregatedSusInfo.profl
07:34:28.291 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeInference:inferPropertyTypesToMatchConstraint(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeInference:1123
07:34:28.291 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 1 Closure-35
---------------- Testing New Patch ----------------
07:34:28.292 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
07:34:36.882 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
07:34:36.882 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
07:38:34.143 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:38:34.143 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669, - com.google.javascript.jscomp.TypeCheckTest::testRecordType1, - com.google.javascript.jscomp.TypeCheckTest::testRecordType2, - com.google.javascript.jscomp.TypeCheckTest::testRecordType3, - com.google.javascript.jscomp.TypeCheckTest::testRecordType4, - com.google.javascript.jscomp.TypeCheckTest::testRecordType5, - com.google.javascript.jscomp.TypeCheckTest::testRecordType6, - com.google.javascript.jscomp.TypeCheckTest::testRecordType7]
07:38:34.143 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
07:38:34.143 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType1
07:38:34.143 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType2
07:38:34.144 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType3
07:38:34.144 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType4
07:38:34.144 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType5
07:38:34.144 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType6
07:38:34.144 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType7
07:38:34.144 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=1, fp=0, pf=7, pp=Unknown
07:38:34.144 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NegFix found
