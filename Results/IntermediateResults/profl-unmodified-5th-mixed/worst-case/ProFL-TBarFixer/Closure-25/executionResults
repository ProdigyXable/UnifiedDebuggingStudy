Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-25
07:01:22.299 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Closure-25 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/25.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/25.txt
07:06:32.357 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - ProFL successfully initialized
07:06:32.446 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Closure-25/generalSusInfo.profl
07:06:32.565 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Closure-25/aggregatedSusInfo.profl
07:06:32.567 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Start to fix suspicious code======
07:06:32.567 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - com.google.javascript.rhino.jstype.JSTypeRegistry ===1647
07:06:38.768 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, scope);
07:06:38.769 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Looking at com.google.javascript.rhino.jstype.JSTypeRegistry:1647 ---
07:06:38.769 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Attempting to fix com/google/javascript/rhino/jstype/JSTypeRegistry.java 1647 ---
07:06:38.769 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - [- com.google.javascript.jscomp.TypeInferenceTest::testBackwardsInferenceNew]
07:06:39.008 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldNameNode.getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            n.getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), fieldName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), this.templateTypeName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            getResolveMode().getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            getErrorReporter().getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            shouldTolerateUndefinedValues().getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            resetForTypeCheck().getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            initializeBuiltInTypes().getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            initializeRegistry().getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            incrementGeneration().getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            isLastGeneration().getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            clearNamedTypes().getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            createAnonymousObjectType().getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            createNativeAnonymousObjectType().getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            clearTemplateTypeName().getLastChild(), sourceName, scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), getResolveMode(), scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), getErrorReporter(), scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), shouldTolerateUndefinedValues(), scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), resetForTypeCheck(), scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), initializeBuiltInTypes(), scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), initializeRegistry(), scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), incrementGeneration(), scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), isLastGeneration(), scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), clearNamedTypes(), scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), createAnonymousObjectType(), scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), createNativeAnonymousObjectType(), scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), clearTemplateTypeName(), scope);
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, getResolveMode());
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, getErrorReporter());
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, shouldTolerateUndefinedValues());
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, resetForTypeCheck());
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, initializeBuiltInTypes());
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, initializeRegistry());
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, incrementGeneration());
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, isLastGeneration());
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, clearNamedTypes());
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, createAnonymousObjectType());
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, createNativeAnonymousObjectType());
07:06:39.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: fieldType = createFromTypeNodesInternal(
            fieldTypeNode.getLastChild(), sourceName, clearTemplateTypeName());
---------------- Testing New Patch ----------------
07:06:39.010 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
