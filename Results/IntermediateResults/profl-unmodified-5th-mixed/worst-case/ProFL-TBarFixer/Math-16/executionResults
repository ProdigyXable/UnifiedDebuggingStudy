Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Math-16
10:15:12.969 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Math-16 Failed Tests: 2
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Math/16.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Math/16.txt
10:15:23.688 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - ProFL successfully initialized
10:15:23.719 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-16/generalSusInfo.profl
10:15:23.723 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - =======StaticBugFixer: Start to fix suspicious code======
10:15:23.724 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - org.apache.commons.math3.util.FastMath ===393
10:15:26.100 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Suspicious Code: 
if (x > 20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:15:26.100 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Looking at org.apache.commons.math3.util.FastMath:393 ---
10:15:26.101 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - --- Attempting to fix org/apache/commons/math3/util/FastMath.java 393 ---
10:15:26.101 [main] INFO edu.lu.uni.serval.tbar.TBarFixer - [- org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:15:26.341 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x==20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:15:26.342 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x!=20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:15:26.342 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x<20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:15:26.342 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x<=20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:15:26.342 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x>=20) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
---------------- Testing New Patch ----------------
10:15:26.352 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
10:15:28.511 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
10:15:28.511 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
10:17:29.527 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:17:29.527 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 7, [- org.apache.commons.math3.complex.ComplexTest::testCoshInf, - org.apache.commons.math3.complex.ComplexTest::testCosInf, - org.apache.commons.math3.complex.ComplexTest::testSinhInf, - org.apache.commons.math3.complex.ComplexTest::testSinInf, - org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35], - org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:17:29.527 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCoshInf
10:17:29.528 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosInf
10:17:29.528 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinhInf
10:17:29.528 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinInf
10:17:29.528 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35]
10:17:29.528 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:17:29.528 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:17:29.528 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=2, fp=0, pf=5, pp=Unknown
10:17:29.528 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NegFix found
10:17:29.535 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-16/aggregatedSusInfo.profl
10:17:29.535 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
10:17:29.535 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 7 Math-16
---------------- Testing New Patch ----------------
10:17:29.536 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
10:17:31.086 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
10:17:31.086 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
10:19:19.828 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:19:19.829 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 22, [- org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhDefinition, - org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testMatrixFunction, - org.apache.commons.math3.complex.ComplexTest::testCos, - org.apache.commons.math3.complex.ComplexTest::testSin, - org.apache.commons.math3.complex.ComplexTest::testCosh, - org.apache.commons.math3.complex.ComplexTest::testSinh, - org.apache.commons.math3.complex.ComplexTest::testTanhCritical, - org.apache.commons.math3.complex.ComplexTest::testTanCritical, - org.apache.commons.math3.complex.ComplexTest::testCoshInf, - org.apache.commons.math3.complex.ComplexTest::testCosInf, - org.apache.commons.math3.complex.ComplexTest::testSinhInf, - org.apache.commons.math3.complex.ComplexTest::testSinInf, - org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35], - org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative, - org.apache.commons.math3.util.FastMathTest::testHyperbolic, - org.apache.commons.math3.util.FastMathTest::testCoshAccuracy, - org.apache.commons.math3.util.FastMathTest::testHyperbolicInverses]
10:19:19.829 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable
10:19:19.829 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition
10:19:19.829 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh
10:19:19.829 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh
10:19:19.829 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhDefinition
10:19:19.829 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testMatrixFunction
10:19:19.830 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCos
10:19:19.830 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSin
10:19:19.830 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosh
10:19:19.830 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinh
10:19:19.830 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testTanhCritical
10:19:19.830 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testTanCritical
10:19:19.830 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCoshInf
10:19:19.831 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosInf
10:19:19.831 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinhInf
10:19:19.831 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinInf
10:19:19.831 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35]
10:19:19.831 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:19:19.831 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:19:19.831 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testHyperbolic
10:19:19.831 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testCoshAccuracy
10:19:19.831 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testHyperbolicInverses
10:19:19.832 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=2, fp=0, pf=20, pp=Unknown
10:19:19.832 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NegFix found
10:19:19.893 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-16/aggregatedSusInfo.profl
10:19:19.893 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
10:19:19.893 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 22 Math-16
---------------- Testing New Patch ----------------
10:19:19.895 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
10:19:21.238 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
10:19:21.238 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
10:21:09.624 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:21:09.625 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 22, [- org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhDefinition, - org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testMatrixFunction, - org.apache.commons.math3.complex.ComplexTest::testCos, - org.apache.commons.math3.complex.ComplexTest::testSin, - org.apache.commons.math3.complex.ComplexTest::testCosh, - org.apache.commons.math3.complex.ComplexTest::testSinh, - org.apache.commons.math3.complex.ComplexTest::testTanhCritical, - org.apache.commons.math3.complex.ComplexTest::testTanCritical, - org.apache.commons.math3.complex.ComplexTest::testCoshInf, - org.apache.commons.math3.complex.ComplexTest::testCosInf, - org.apache.commons.math3.complex.ComplexTest::testSinhInf, - org.apache.commons.math3.complex.ComplexTest::testSinInf, - org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35], - org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative, - org.apache.commons.math3.util.FastMathTest::testHyperbolic, - org.apache.commons.math3.util.FastMathTest::testCoshAccuracy, - org.apache.commons.math3.util.FastMathTest::testHyperbolicInverses]
10:21:09.625 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable
10:21:09.625 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition
10:21:09.625 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh
10:21:09.625 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh
10:21:09.625 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhDefinition
10:21:09.626 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testMatrixFunction
10:21:09.626 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCos
10:21:09.626 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSin
10:21:09.626 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosh
10:21:09.626 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinh
10:21:09.626 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testTanhCritical
10:21:09.626 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testTanCritical
10:21:09.626 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCoshInf
10:21:09.627 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosInf
10:21:09.627 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinhInf
10:21:09.627 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinInf
10:21:09.627 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35]
10:21:09.627 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:21:09.627 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:21:09.627 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testHyperbolic
10:21:09.627 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testCoshAccuracy
10:21:09.627 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testHyperbolicInverses
10:21:09.628 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=2, fp=0, pf=20, pp=Unknown
10:21:09.628 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NegFix found
10:21:09.663 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-16/aggregatedSusInfo.profl
10:21:09.663 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
10:21:09.663 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 22 Math-16
---------------- Testing New Patch ----------------
10:21:09.671 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
10:21:11.201 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
10:21:11.201 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
10:22:47.973 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:22:47.973 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 22, [- org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhDefinition, - org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testMatrixFunction, - org.apache.commons.math3.complex.ComplexTest::testCos, - org.apache.commons.math3.complex.ComplexTest::testSin, - org.apache.commons.math3.complex.ComplexTest::testCosh, - org.apache.commons.math3.complex.ComplexTest::testSinh, - org.apache.commons.math3.complex.ComplexTest::testTanhCritical, - org.apache.commons.math3.complex.ComplexTest::testTanCritical, - org.apache.commons.math3.complex.ComplexTest::testCoshInf, - org.apache.commons.math3.complex.ComplexTest::testCosInf, - org.apache.commons.math3.complex.ComplexTest::testSinhInf, - org.apache.commons.math3.complex.ComplexTest::testSinInf, - org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35], - org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative, - org.apache.commons.math3.util.FastMathTest::testHyperbolic, - org.apache.commons.math3.util.FastMathTest::testCoshAccuracy, - org.apache.commons.math3.util.FastMathTest::testHyperbolicInverses]
10:22:47.973 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable
10:22:47.973 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition
10:22:47.973 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh
10:22:47.974 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh
10:22:47.974 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhDefinition
10:22:47.974 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testMatrixFunction
10:22:47.974 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCos
10:22:47.974 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSin
10:22:47.974 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosh
10:22:47.974 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinh
10:22:47.974 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testTanhCritical
10:22:47.974 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testTanCritical
10:22:47.975 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCoshInf
10:22:47.975 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosInf
10:22:47.975 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinhInf
10:22:47.975 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinInf
10:22:47.975 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35]
10:22:47.975 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:22:47.975 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:22:47.975 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testHyperbolic
10:22:47.975 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testCoshAccuracy
10:22:47.975 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testHyperbolicInverses
10:22:47.975 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=2, fp=0, pf=20, pp=Unknown
10:22:47.976 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NegFix found
10:22:48.224 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-16/aggregatedSusInfo.profl
10:22:48.224 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
10:22:48.224 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 22 Math-16
---------------- Testing New Patch ----------------
10:22:48.226 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
10:22:49.704 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
10:22:49.704 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
10:24:19.193 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:24:19.193 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 2, [- org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:24:19.193 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:24:19.193 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:24:19.193 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
10:24:19.193 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
10:24:22.833 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-16/aggregatedSusInfo.profl
10:24:22.833 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
10:24:22.833 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 2 Math-16
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x < 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x < 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x < 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x < 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x < -20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x < -20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x < -20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x < -20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x != x || y != y)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x != x || y != y)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x != x || y != y)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x != x || y != y)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x > 1e-6 ||
            x < -1e-6)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x > 1e-6 ||
            x < -1e-6)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x > 1e-6 ||
            x < -1e-6)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x > 1e-6 ||
            x < -1e-6)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x == 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x == 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x == 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x == 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x == Double.POSITIVE_INFINITY)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.009 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x == Double.POSITIVE_INFINITY)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x == Double.POSITIVE_INFINITY)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x == Double.POSITIVE_INFINITY)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || ((bits & 0x8000000000000000L) != 0 || x != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && ((bits & 0x8000000000000000L) != 0 || x != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !((bits & 0x8000000000000000L) != 0 || x != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !((bits & 0x8000000000000000L) != 0 || x != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x < 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x < 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x < 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x < 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x >= 0.5)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x >= 0.5)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x >= 0.5)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x >= 0.5)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x == 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x == 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x == 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x == 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x > 0.25)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x > 0.25)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x > 0.25)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x > 0.25)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x == Double.NEGATIVE_INFINITY)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x == Double.NEGATIVE_INFINITY)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x == Double.NEGATIVE_INFINITY)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x == Double.NEGATIVE_INFINITY)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x > 20.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x > 20.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x > 20.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.010 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x > 20.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x > 1.0 || x < -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x > 1.0 || x < -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x > 1.0 || x < -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x > 1.0 || x < -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (Double.isInfinite(x) || x == 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (Double.isInfinite(x) || x == 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(Double.isInfinite(x) || x == 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(Double.isInfinite(x) || x == 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x < 0 && y != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x < 0 && y != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x < 0 && y != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x < 0 && y != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (Double.isInfinite(x))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (Double.isInfinite(x))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(Double.isInfinite(x))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(Double.isInfinite(x))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x == -1)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x == -1)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x == -1)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x == -1)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x == -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x == -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x == -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x == -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x <= -1.0 || x >= 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x <= -1.0 || x >= 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x <= -1.0 || x >= 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.011 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x <= -1.0 || x >= 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x != x || x == 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x != x || x == 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x != x || x == 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x != x || x == 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x == 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x == 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x == 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x == 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (y == x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (y == x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(y == x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(y == x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x >= TWO_POWER_52 || x <= -TWO_POWER_52)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x >= TWO_POWER_52 || x <= -TWO_POWER_52)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x >= TWO_POWER_52 || x <= -TWO_POWER_52)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x >= TWO_POWER_52 || x <= -TWO_POWER_52)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (Float.isInfinite(x))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (Float.isInfinite(x))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(Float.isInfinite(x))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(Float.isInfinite(x))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x==0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x==0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x==0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x==0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (Double.isInfinite(x) || Double.isInfinite(y))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (Double.isInfinite(x) || Double.isInfinite(y))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(Double.isInfinite(x) || Double.isInfinite(y))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(Double.isInfinite(x) || Double.isInfinite(y))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x >= TWO_POWER_52)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x >= TWO_POWER_52)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.012 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x >= TWO_POWER_52)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x >= TWO_POWER_52)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (y != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (y != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(y != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(y != x)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || ((x < 0))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && ((x < 0))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !((x < 0))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !((x < 0))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x > 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x > 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x > 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x > 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x < -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x < -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x < -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x < -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || ((x < 0.0f))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && ((x < 0.0f))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !((x < 0.0f))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !((x < 0.0f))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || ((x < 0l))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && ((x < 0l))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !((x < 0l))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !((x < 0l))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x <= -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x <= -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x <= -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x <= -1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x > 1e-6)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x > 1e-6)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.013 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x > 1e-6)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x > 1e-6)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x <= -TWO_POWER_52)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x <= -TWO_POWER_52)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x <= -TWO_POWER_52)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x <= -TWO_POWER_52)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x < -1e-6)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x < -1e-6)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x < -1e-6)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x < -1e-6)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || ((x < 0.0))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && ((x < 0.0))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !((x < 0.0))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !((x < 0.0))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x >= 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x >= 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x >= 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x >= 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x * x == 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x * x == 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x * x == 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x * x == 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (Double.isNaN(x) || Double.isNaN(y))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (Double.isNaN(x) || Double.isNaN(y))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(Double.isNaN(x) || Double.isNaN(y))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(Double.isNaN(x) || Double.isNaN(y))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x * x < 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x * x < 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x * x < 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x * x < 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x != 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x != 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x != 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.014 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x != 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || ((x == 0.0f))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && ((x == 0.0f))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !((x == 0.0f))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !((x == 0.0f))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x < 0 || invx < 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x < 0 || invx < 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x < 0 || invx < 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x < 0 || invx < 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x > 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x > 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x > 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x > 0.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x * x > 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x * x > 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x * x > 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x * x > 1.0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || ((x == 0.0))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && ((x == 0.0))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !((x == 0.0))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !((x == 0.0))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x < 1.01 && x > 0.99)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x < 1.01 && x > 0.99)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x < 1.01 && x > 0.99)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x < 1.01 && x > 0.99)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (Double.isNaN(x))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (Double.isNaN(x))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(Double.isNaN(x))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.015 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(Double.isNaN(x))) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x > 0.99)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x > 0.99)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x > 0.99)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x > 0.99)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x > 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x > 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x > 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x > 0)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || (x < 1.01)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && (x < 1.01)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) || !(x < 1.01)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if ((x > 20) && !(x < 1.01)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != PI && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != PI || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == PI && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.016 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == PI || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < PI && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < PI || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= PI && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= PI || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > PI && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > PI || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= PI && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= PI || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != FastMath.PI && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != FastMath.PI || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == FastMath.PI && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == FastMath.PI || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < FastMath.PI && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < FastMath.PI || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= FastMath.PI && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= FastMath.PI || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > FastMath.PI && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > FastMath.PI || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= FastMath.PI && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= FastMath.PI || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != E && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != E || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == E && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == E || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < E && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < E || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= E && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= E || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > E && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > E || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= E && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= E || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != FastMath.E && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != FastMath.E || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == FastMath.E && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == FastMath.E || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < FastMath.E && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < FastMath.E || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= FastMath.E && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= FastMath.E || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > FastMath.E && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > FastMath.E || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= FastMath.E && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= FastMath.E || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != LN_2_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != LN_2_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == LN_2_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == LN_2_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < LN_2_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < LN_2_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= LN_2_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.017 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= LN_2_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > LN_2_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > LN_2_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= LN_2_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= LN_2_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != LN_2_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != LN_2_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == LN_2_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == LN_2_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < LN_2_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < LN_2_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= LN_2_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= LN_2_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > LN_2_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > LN_2_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= LN_2_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= LN_2_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != LN_QUICK_COEF && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != LN_QUICK_COEF || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == LN_QUICK_COEF && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == LN_QUICK_COEF || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < LN_QUICK_COEF && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < LN_QUICK_COEF || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= LN_QUICK_COEF && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= LN_QUICK_COEF || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > LN_QUICK_COEF && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > LN_QUICK_COEF || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= LN_QUICK_COEF && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= LN_QUICK_COEF || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != LN_HI_PREC_COEF && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != LN_HI_PREC_COEF || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == LN_HI_PREC_COEF && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == LN_HI_PREC_COEF || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < LN_HI_PREC_COEF && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < LN_HI_PREC_COEF || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= LN_HI_PREC_COEF && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= LN_HI_PREC_COEF || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > LN_HI_PREC_COEF && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > LN_HI_PREC_COEF || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= LN_HI_PREC_COEF && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= LN_HI_PREC_COEF || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != SINE_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != SINE_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == SINE_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == SINE_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < SINE_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < SINE_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= SINE_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= SINE_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > SINE_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > SINE_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.018 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= SINE_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= SINE_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != SINE_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != SINE_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == SINE_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == SINE_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < SINE_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < SINE_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= SINE_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= SINE_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > SINE_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > SINE_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= SINE_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= SINE_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != COSINE_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != COSINE_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == COSINE_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == COSINE_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < COSINE_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < COSINE_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= COSINE_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= COSINE_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > COSINE_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > COSINE_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= COSINE_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= COSINE_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != COSINE_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != COSINE_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == COSINE_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == COSINE_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < COSINE_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < COSINE_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= COSINE_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= COSINE_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > COSINE_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > COSINE_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= COSINE_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= COSINE_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != TANGENT_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != TANGENT_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == TANGENT_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == TANGENT_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < TANGENT_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < TANGENT_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= TANGENT_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= TANGENT_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > TANGENT_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > TANGENT_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= TANGENT_TABLE_A && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= TANGENT_TABLE_A || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != TANGENT_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != TANGENT_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == TANGENT_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.019 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == TANGENT_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < TANGENT_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < TANGENT_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= TANGENT_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= TANGENT_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > TANGENT_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > TANGENT_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= TANGENT_TABLE_B && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= TANGENT_TABLE_B || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != EIGHTHS && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != EIGHTHS || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == EIGHTHS && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == EIGHTHS || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < EIGHTHS && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < EIGHTHS || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= EIGHTHS && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= EIGHTHS || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > EIGHTHS && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > EIGHTHS || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= EIGHTHS && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= EIGHTHS || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != CBRTTWO && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != CBRTTWO || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == CBRTTWO && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == CBRTTWO || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < CBRTTWO && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < CBRTTWO || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= CBRTTWO && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= CBRTTWO || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > CBRTTWO && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > CBRTTWO || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= CBRTTWO && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= CBRTTWO || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != TWO_POWER_52 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != TWO_POWER_52 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == TWO_POWER_52 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == TWO_POWER_52 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < TWO_POWER_52 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < TWO_POWER_52 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= TWO_POWER_52 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= TWO_POWER_52 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > TWO_POWER_52 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > TWO_POWER_52 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= TWO_POWER_52 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= TWO_POWER_52 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_3 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_3 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_3 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_3 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_3 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_3 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_3 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_3 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_3 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.020 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_3 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_3 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_3 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_5 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_5 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_5 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_5 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_5 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_5 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_5 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_5 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_5 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_5 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_5 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_5 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_7 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_7 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_7 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_7 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_7 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_7 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_7 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_7 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_7 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_7 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_7 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_7 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_9 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_9 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_9 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_9 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_9 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_9 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_9 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_9 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_9 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_9 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_9 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_9 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_11 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_11 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_11 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_11 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_11 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_11 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_11 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_11 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_11 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_11 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_11 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_11 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_13 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_13 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_13 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_13 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.021 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_13 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_13 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_13 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_13 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_13 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_13 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_13 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_13 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_15 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_15 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_15 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_15 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_15 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_15 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_15 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_15 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_15 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_15 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_15 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_15 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_17 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_17 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_17 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_17 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_17 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_17 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_17 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_17 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_17 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_17 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_17 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_17 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_3_4 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_3_4 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_3_4 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_3_4 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_3_4 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_3_4 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_3_4 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_3_4 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_3_4 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_3_4 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_3_4 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_3_4 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_15_16 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_15_16 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_15_16 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_15_16 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_15_16 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_15_16 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_15_16 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.022 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_15_16 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_15_16 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_15_16 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_15_16 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_15_16 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_13_14 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_13_14 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_13_14 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_13_14 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_13_14 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_13_14 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_13_14 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_13_14 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_13_14 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_13_14 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_13_14 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_13_14 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_11_12 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_11_12 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_11_12 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_11_12 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_11_12 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_11_12 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_11_12 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_11_12 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_11_12 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_11_12 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_11_12 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_11_12 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_9_10 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_9_10 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_9_10 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_9_10 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_9_10 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_9_10 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_9_10 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_9_10 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_9_10 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_9_10 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_9_10 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_9_10 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_7_8 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_7_8 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_7_8 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_7_8 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_7_8 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_7_8 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_7_8 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_7_8 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_7_8 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_7_8 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_7_8 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_7_8 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_5_6 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.023 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_5_6 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_5_6 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_5_6 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_5_6 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_5_6 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_5_6 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_5_6 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_5_6 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_5_6 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_5_6 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_5_6 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_2 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_2 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_2 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_2 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_2 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_2 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_2 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_2 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_2 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_2 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_2 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_2 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_4 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x != F_1_4 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_4 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x == F_1_4 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_4 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x < F_1_4 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_4 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x <= F_1_4 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_4 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x > F_1_4 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_4 && (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
10:24:23.024 [main] DEBUG edu.lu.uni.serval.tbar.fixtemplate.FixTemplate - Patch Candidate: if (x >= F_1_4 || (x > 20)) {
              // Avoid overflow (MATH-905).
              return 0.5 * exp(x);
          }
---------------- Testing New Patch ----------------
10:24:23.026 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
10:24:24.415 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
10:24:24.415 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
10:25:50.348 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:25:50.348 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 2, [- org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:25:50.348 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:25:50.348 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:25:50.349 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
10:25:50.349 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
10:26:23.233 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-16/aggregatedSusInfo.profl
10:26:23.234 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
10:26:23.234 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 2 Math-16
---------------- Testing New Patch ----------------
10:26:23.235 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
10:26:24.788 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
10:26:24.788 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
10:27:39.035 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:27:39.035 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 7, [- org.apache.commons.math3.complex.ComplexTest::testCoshInf, - org.apache.commons.math3.complex.ComplexTest::testCosInf, - org.apache.commons.math3.complex.ComplexTest::testSinhInf, - org.apache.commons.math3.complex.ComplexTest::testSinInf, - org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35], - org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:27:39.035 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCoshInf
10:27:39.035 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosInf
10:27:39.035 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinhInf
10:27:39.035 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinInf
10:27:39.035 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35]
10:27:39.035 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:27:39.035 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:27:39.035 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=2, fp=0, pf=5, pp=Unknown
10:27:39.035 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NegFix found
10:38:12.836 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-16/aggregatedSusInfo.profl
10:38:12.837 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
10:38:12.837 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 7 Math-16
---------------- Testing New Patch ----------------
10:38:12.838 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
10:38:14.480 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
10:38:14.480 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
10:39:34.146 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
10:39:34.146 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 22, [- org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh, - org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhDefinition, - org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testMatrixFunction, - org.apache.commons.math3.complex.ComplexTest::testCos, - org.apache.commons.math3.complex.ComplexTest::testSin, - org.apache.commons.math3.complex.ComplexTest::testCosh, - org.apache.commons.math3.complex.ComplexTest::testSinh, - org.apache.commons.math3.complex.ComplexTest::testTanhCritical, - org.apache.commons.math3.complex.ComplexTest::testTanCritical, - org.apache.commons.math3.complex.ComplexTest::testCoshInf, - org.apache.commons.math3.complex.ComplexTest::testCosInf, - org.apache.commons.math3.complex.ComplexTest::testSinhInf, - org.apache.commons.math3.complex.ComplexTest::testSinInf, - org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35], - org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative, - org.apache.commons.math3.util.FastMathTest::testHyperbolic, - org.apache.commons.math3.util.FastMathTest::testCoshAccuracy, - org.apache.commons.math3.util.FastMathTest::testHyperbolicInverses]
10:39:34.146 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable
10:39:34.146 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition
10:39:34.146 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh
10:39:34.146 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh
10:39:34.146 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhDefinition
10:39:34.146 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testMatrixFunction
10:39:34.146 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCos
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSin
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosh
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinh
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testTanhCritical
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testTanCritical
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCoshInf
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testCosInf
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinhInf
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.complex.ComplexTest::testSinInf
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[35]
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testHyperbolic
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testCoshAccuracy
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Pass->Fail test case ->org.apache.commons.math3.util.FastMathTest::testHyperbolicInverses
10:39:34.147 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=2, fp=0, pf=20, pp=Unknown
10:39:34.148 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NegFix found
12:34:22.069 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/tbar/ProFL-TBarFixer/Math-16/aggregatedSusInfo.profl
12:34:22.069 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Mutated = org.apache.commons.math3.util.FastMath:cosh(D)D in org.apache.commons.math3.util.FastMath:393
12:34:22.069 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Failed Tests after fixing: 22 Math-16
---------------- Testing New Patch ----------------
12:34:22.071 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Compiling
12:34:23.347 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Finish of compiling.
12:34:23.348 [main] DEBUG edu.lu.uni.serval.tbar.AbstractFixer - Test previously failed test cases.
12:35:40.668 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests BEFORE patch = 2, [org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
12:35:40.668 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Failed tests AFTER patch = 2, [- org.apache.commons.math3.util.FastMathTest::testMath905LargePositive, - org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative]
12:35:40.668 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargePositive
12:35:40.668 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Fail->Fail test case ->org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative
12:35:40.668 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
12:35:40.668 [main] INFO edu.lu.uni.serval.tbar.AbstractFixer - [ProFL] NoneFix found
