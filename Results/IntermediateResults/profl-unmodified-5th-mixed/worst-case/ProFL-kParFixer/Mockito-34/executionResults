Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Mockito-34
04:38:36.683 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 Failed Tests: 2
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Mockito/34.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Mockito/34.txt
04:38:38.874 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
04:38:38.906 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-34/generalSusInfo.profl
04:38:38.968 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-34/aggregatedSusInfo.profl
04:38:38.970 [main] INFO edu.lu.uni.serval.bug.fixer.kParFixer - =======kPARFixer: Start to fix suspicious code======
04:38:38.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.Matchers ===221
04:38:39.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return (T) reportMatcher(AnyVararg.ANY_VARARG).returnNull();
04:38:40.018 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Object _tempVar = reportMatcher(AnyVararg.ANY_VARARG).returnNull();
if (_temVar instanceof T) {
	

} else {
	throw new IllegalArgumentException("Illegal argument: reportMatcher(AnyVararg.ANY_VARARG).returnNull()");
}

04:38:40.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:40.918 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:40.922 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) reportMatcher().returnNull();
04:38:40.923 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:41.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:41.812 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) reportMatcher(mockingProgress).returnNull();
04:38:41.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:42.695 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:42.697 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) anyCollectionOf(AnyVararg.ANY_VARARG).returnNull();
04:38:42.697 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) eq(AnyVararg.ANY_VARARG).returnNull();
04:38:42.697 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) charThat(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) intThat(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) doubleThat(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) longThat(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) floatThat(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) shortThat(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) any(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) isA(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) same(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) argThat(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) byteThat(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) contains(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) matches(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) endsWith(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) startsWith(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) booleanThat(AnyVararg.ANY_VARARG).returnNull();
04:38:42.698 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) anySetOf(AnyVararg.ANY_VARARG).returnNull();
04:38:42.699 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (T) anyListOf(AnyVararg.ANY_VARARG).returnNull();
04:38:42.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:43.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:43.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:44.460 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:44.462 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:45.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:45.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:46.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:46.164 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:46.979 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:46.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:47.887 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:47.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:48.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:48.766 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:49.643 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:49.644 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:50.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:50.489 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:51.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:51.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:52.163 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:52.165 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:53.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:53.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:53.907 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:53.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:54.802 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:54.803 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:55.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:55.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:56.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:56.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:57.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:57.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:58.278 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:58.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:59.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:59.093 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:38:59.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:38:59.975 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.ArgumentsComparator ===68
04:39:00.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return true;
04:39:00.053 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (!actual.getMethod().isVarArgs());
04:39:00.053 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (rawArgs.length != matchers.size());
04:39:00.053 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1);
04:39:00.053 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]));
04:39:00.053 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (m instanceof MatcherDecorator);
04:39:00.053 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (i == rawArgs.length-1);
04:39:00.053 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (rawArgs[i] != null && rawArgs[i].getClass().isArray());
04:39:00.053 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (!m.matches(rawArgs[i]));
04:39:00.053 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (!(actualMatcher instanceof VarargMatcher));
04:39:00.053 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (rawArgs[i] != null);
04:39:00.053 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (!actualMatcher.matches(rawArgs[i]));
04:39:00.053 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (rawArgs[i].getClass().isArray());
04:39:00.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:00.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:00.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:01.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:01.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:02.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:02.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:03.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:03.286 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:04.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:04.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:04.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:04.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:05.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:05.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:06.711 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:06.712 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:07.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:07.555 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:08.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:08.362 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:09.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:09.146 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:09.927 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:09.928 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || (!actual.getMethod().isVarArgs());
04:39:09.928 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && (!actual.getMethod().isVarArgs());
04:39:09.928 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || !(!actual.getMethod().isVarArgs());
04:39:09.928 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && !(!actual.getMethod().isVarArgs());
04:39:09.928 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || (rawArgs.length != matchers.size());
04:39:09.928 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && (rawArgs.length != matchers.size());
04:39:09.928 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || !(rawArgs.length != matchers.size());
04:39:09.928 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && !(rawArgs.length != matchers.size());
04:39:09.928 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || (rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1);
04:39:09.928 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && (rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1);
04:39:09.928 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || !(rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1);
04:39:09.928 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && !(rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || !(!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && !(!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || (m instanceof MatcherDecorator);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && (m instanceof MatcherDecorator);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || !(m instanceof MatcherDecorator);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && !(m instanceof MatcherDecorator);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || (i == rawArgs.length-1);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && (i == rawArgs.length-1);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || !(i == rawArgs.length-1);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && !(i == rawArgs.length-1);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || (rawArgs[i] != null && rawArgs[i].getClass().isArray());
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && (rawArgs[i] != null && rawArgs[i].getClass().isArray());
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || !(rawArgs[i] != null && rawArgs[i].getClass().isArray());
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && !(rawArgs[i] != null && rawArgs[i].getClass().isArray());
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || (!m.matches(rawArgs[i]));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && (!m.matches(rawArgs[i]));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || !(!m.matches(rawArgs[i]));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && !(!m.matches(rawArgs[i]));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || (!(actualMatcher instanceof VarargMatcher));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && (!(actualMatcher instanceof VarargMatcher));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || !(!(actualMatcher instanceof VarargMatcher));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && !(!(actualMatcher instanceof VarargMatcher));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || (rawArgs[i] != null);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && (rawArgs[i] != null);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || !(rawArgs[i] != null);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && !(rawArgs[i] != null);
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || (!actualMatcher.matches(rawArgs[i]));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && (!actualMatcher.matches(rawArgs[i]));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || !(!actualMatcher.matches(rawArgs[i]));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && !(!actualMatcher.matches(rawArgs[i]));
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || (rawArgs[i].getClass().isArray());
04:39:09.929 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && (rawArgs[i].getClass().isArray());
04:39:09.930 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) || !(rawArgs[i].getClass().isArray());
04:39:09.930 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return (true) && !(rawArgs[i].getClass().isArray());
04:39:09.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:10.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:10.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:11.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:11.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:12.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:12.749 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:13.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:13.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:14.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:14.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:15.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:15.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:16.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:16.552 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:17.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:17.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:18.475 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:18.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:19.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:19.779 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:20.816 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:20.817 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:21.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:21.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:22.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:22.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:23.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:23.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:24.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:24.190 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:25.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:25.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:26.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:26.055 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:26.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:26.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:27.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:27.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:28.838 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:28.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:29.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:29.671 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:30.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:30.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:31.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:31.380 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:32.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:32.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:33.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:33.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:33.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:33.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:34.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:34.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:35.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:35.694 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:36.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:36.510 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:37.307 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:37.308 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:38.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:38.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:39.013 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:39.014 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:39.897 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:39.898 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:40.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:40.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:41.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:41.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:42.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:42.395 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:43.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:43.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:44.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:44.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:44.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:44.875 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:45.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:45.680 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:46.470 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:46.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:47.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:47.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:48.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:48.238 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:49.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:49.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:50.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:50.064 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:50.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:50.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:51.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:51.752 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:52.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:52.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.matchers.LocalizedMatcher ===66
04:39:52.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return actualMatcher;
04:39:52.615 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (actualMatcher != null) {
	

}

04:39:52.615 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (actualMatcher == null) {
    throw new IllegalArgumentException("Null 'actualMatcher' argument.");
}

04:39:52.615 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (actualMatcher == null) {
    return null;
}

04:39:52.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:53.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:53.401 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:54.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:54.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:55.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:55.088 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.ArgumentsComparator ===63
04:39:55.112 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (!m.matches(rawArgs[i])){
                return false;
            }
04:39:55.113 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs.length != matchers.size())){
                return false;
            }
04:39:55.113 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!actual.getMethod().isVarArgs())){
                return false;
            }
04:39:55.113 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)){
                return false;
            }
04:39:55.113 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((i == rawArgs.length-1)){
                return false;
            }
04:39:55.113 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]))){
                return false;
            }
04:39:55.113 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator)){
                return false;
            }
04:39:55.114 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i] != null && rawArgs[i].getClass().isArray())){
                return false;
            }
04:39:55.114 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i] != null)){
                return false;
            }
04:39:55.114 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!actualMatcher.matches(rawArgs[i]))){
                return false;
            }
04:39:55.114 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher))){
                return false;
            }
04:39:55.114 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i].getClass().isArray())){
                return false;
            }
04:39:55.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:55.988 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:55.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:56.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:56.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:57.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:57.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:58.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:58.668 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:39:59.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:39:59.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:00.384 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:00.385 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:01.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:01.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:02.017 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:02.018 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:02.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:02.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:03.735 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:03.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:04.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:04.617 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || (rawArgs.length != matchers.size())){
                return false;
            }
04:40:04.617 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && (rawArgs.length != matchers.size())){
                return false;
            }
04:40:04.617 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || !(rawArgs.length != matchers.size())){
                return false;
            }
04:40:04.617 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && !(rawArgs.length != matchers.size())){
                return false;
            }
04:40:04.617 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || (!actual.getMethod().isVarArgs())){
                return false;
            }
04:40:04.617 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && (!actual.getMethod().isVarArgs())){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || !(!actual.getMethod().isVarArgs())){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && !(!actual.getMethod().isVarArgs())){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || (rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && (rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || !(rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && !(rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || (i == rawArgs.length-1)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && (i == rawArgs.length-1)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || !(i == rawArgs.length-1)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && !(i == rawArgs.length-1)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]))){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]))){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || !(!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]))){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && !(!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]))){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || (m instanceof MatcherDecorator)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && (m instanceof MatcherDecorator)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || !(m instanceof MatcherDecorator)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && !(m instanceof MatcherDecorator)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || (rawArgs[i] != null && rawArgs[i].getClass().isArray())){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && (rawArgs[i] != null && rawArgs[i].getClass().isArray())){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || !(rawArgs[i] != null && rawArgs[i].getClass().isArray())){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && !(rawArgs[i] != null && rawArgs[i].getClass().isArray())){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || (rawArgs[i] != null)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && (rawArgs[i] != null)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || !(rawArgs[i] != null)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && !(rawArgs[i] != null)){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || (!actualMatcher.matches(rawArgs[i]))){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && (!actualMatcher.matches(rawArgs[i]))){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || !(!actualMatcher.matches(rawArgs[i]))){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && !(!actualMatcher.matches(rawArgs[i]))){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || (!(actualMatcher instanceof VarargMatcher))){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && (!(actualMatcher instanceof VarargMatcher))){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || !(!(actualMatcher instanceof VarargMatcher))){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && !(!(actualMatcher instanceof VarargMatcher))){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || (rawArgs[i].getClass().isArray())){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && (rawArgs[i].getClass().isArray())){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || !(rawArgs[i].getClass().isArray())){
                return false;
            }
04:40:04.618 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) && !(rawArgs[i].getClass().isArray())){
                return false;
            }
04:40:04.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:05.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:05.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:06.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:06.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:07.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:07.394 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:08.478 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:08.479 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:09.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:09.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:10.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:10.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:11.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:11.092 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:11.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:11.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:12.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:12.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:13.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:13.747 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:14.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:14.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:15.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:15.477 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:16.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:16.391 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:17.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:17.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:18.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:18.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:18.945 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:18.946 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:19.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:19.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:20.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:20.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:21.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:21.594 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:22.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:22.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:23.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:23.256 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:24.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:24.104 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:24.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:24.974 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:25.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:25.844 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:26.640 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:26.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:27.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:27.491 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:28.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:28.309 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:29.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:29.127 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:30.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:30.005 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:30.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:30.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:31.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:31.637 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:32.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:32.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:33.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:33.337 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:34.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:34.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:35.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:35.045 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:35.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:35.851 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:36.664 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:36.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:37.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:37.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:38.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:38.234 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:39.081 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:39.082 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:39.880 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:39.881 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:40.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:40.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:41.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:41.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:42.283 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:42.284 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!m.matches(actualMatcher)){
                return false;
            }
04:40:42.284 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!m.matches(m)){
                return false;
            }
04:40:42.284 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!m.matches(i)){
                return false;
            }
04:40:42.284 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!m.matches(matchers)){
                return false;
            }
04:40:42.284 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!m.matches(rawArgs)){
                return false;
            }
04:40:42.284 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!m.matches(invocationMatcher)){
                return false;
            }
04:40:42.285 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!m.matches(actual)){
                return false;
            }
04:40:42.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:43.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:43.061 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:43.846 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:43.847 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:44.669 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:44.670 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:45.440 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:45.441 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:46.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:46.227 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:47.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:47.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:47.836 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:47.838 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (m != null) {
	

}

04:40:47.838 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (m == null) {
    throw new IllegalArgumentException("Null 'm' argument.");
}

04:40:47.838 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (m == null) {
    return false;
}

04:40:47.838 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (rawArgs != null) {
	

}

04:40:47.838 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (rawArgs == null) {
    throw new IllegalArgumentException("Null 'rawArgs' argument.");
}

04:40:47.838 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (rawArgs == null) {
    return false;
}

04:40:47.839 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:48.650 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:48.651 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:49.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:49.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:50.279 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:50.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:51.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:51.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:51.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:51.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:52.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:52.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.ArgumentsComparator ===54
04:40:52.688 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
actualMatcher = ((MatcherDecorator)m).getActualMatcher();
04:40:52.688 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (m != null) {
	

}

04:40:52.688 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (m == null) {
    throw new IllegalArgumentException("Null 'm' argument.");
}

04:40:52.688 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (m == null) {
    return false;
}

04:40:52.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:53.495 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:53.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:54.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:54.353 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:55.167 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:55.169 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (m instanceof MatcherDecorator) {
	

} else {
	throw new IllegalArgumentException("Illegal argument: m");
}

04:40:55.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:56.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:56.149 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.matchers.AnyVararg ===19
04:40:56.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return true;
04:40:56.155 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.matchers.ArrayEquals ===67
04:40:56.200 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return (Object[]) array;
04:40:56.201 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (array instanceof Object[]) {
	

} else {
	throw new IllegalArgumentException("Illegal argument: array");
}

04:40:56.201 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:56.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:56.987 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (array != null) {
	

}

04:40:56.987 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (array == null) {
    throw new IllegalArgumentException("Null 'array' argument.");
}

04:40:56.987 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (array == null) {
    return null;
}

04:40:56.987 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:57.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:57.748 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:58.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:58.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:40:59.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:40:59.281 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.Invocation ===76
04:40:59.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
04:40:59.368 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (args != null) {
	

}

04:40:59.368 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (args == null) {
    throw new IllegalArgumentException("Null 'args' argument.");
}

04:40:59.368 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (args == null) {
    return null;
}

04:40:59.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:00.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:00.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:01.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:01.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:02.216 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:02.271 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray();
04:41:02.272 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:03.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(varArgs);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(nonVarArgsCount);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(isVarArgs);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(args);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(serialVersionUID);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(MAX_LINE_LENGTH);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(this.sequenceNumber);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(this.mock);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(this.method);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(this.arguments);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(this.rawArguments);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(this.location);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(this.verified);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(this.verifiedInOrder);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(this.realMethod);
04:41:03.241 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.createObjectArray(this.stubInfo);
04:41:03.242 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:04.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:04.222 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:05.140 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:05.141 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:06.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:06.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:06.993 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:06.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:07.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:07.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:08.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:08.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:09.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:09.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:10.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:10.723 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:11.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:11.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:12.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:12.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:13.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:13.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:14.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:14.417 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:15.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:15.326 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:16.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:16.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:17.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:17.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:18.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:18.103 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.describeTo(args[nonVarArgsCount]);
04:41:18.103 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: varArgs = ArrayEquals.matches(args[nonVarArgsCount]);
04:41:18.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:19.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:19.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:19.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:19.951 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.Invocation ===82
04:41:20.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return newArgs;
04:41:20.011 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (newArgs != null) {
	

}

04:41:20.011 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (newArgs == null) {
    throw new IllegalArgumentException("Null 'newArgs' argument.");
}

04:41:20.011 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (newArgs == null) {
    return null;
}

04:41:20.011 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:20.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:20.926 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:21.882 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:21.883 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:22.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:22.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.Invocation ===81
04:41:22.818 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
System.arraycopy(varArgs, 0, newArgs, nonVarArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(newArgs, 0, newArgs, nonVarArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, newArgs, nonVarArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(this.arguments, 0, newArgs, nonVarArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(this.rawArguments, 0, newArgs, nonVarArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 0, args, nonVarArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 0, this.arguments, nonVarArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 0, this.rawArguments, nonVarArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 0, newArgs, varArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 0, newArgs, MAX_LINE_LENGTH, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 0, newArgs, this.sequenceNumber, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 0, newArgs, serialVersionUID, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 0, newArgs, nonVarArgsCount, nonVarArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 0, newArgs, nonVarArgsCount, MAX_LINE_LENGTH);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 0, newArgs, nonVarArgsCount, this.sequenceNumber);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 0, newArgs, nonVarArgsCount, serialVersionUID);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 1, newArgs, nonVarArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, varArgsCount, newArgs, nonVarArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, nonVarArgsCount, newArgs, nonVarArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, MAX_LINE_LENGTH, newArgs, nonVarArgsCount, varArgsCount);
04:41:22.820 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, this.sequenceNumber, newArgs, nonVarArgsCount, varArgsCount);
04:41:22.821 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:23.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:23.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:24.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:24.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:25.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:25.551 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:26.468 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:26.469 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:27.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:27.359 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:28.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:28.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:29.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:29.177 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:30.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:30.044 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:30.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:30.967 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:31.852 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:31.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:32.733 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:32.734 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:33.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:33.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:34.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:34.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:35.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:35.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:36.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:36.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:37.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:37.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:38.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:38.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:39.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:39.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:39.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:39.935 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:40.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:40.901 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (varArgs != null) {
	

}

04:41:40.901 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (varArgs == null) {
    throw new IllegalArgumentException("Null 'varArgs' argument.");
}

04:41:40.901 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (varArgs == null) {
    return null;
}

04:41:40.901 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (newArgs != null) {
	

}

04:41:40.901 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (newArgs == null) {
    throw new IllegalArgumentException("Null 'newArgs' argument.");
}

04:41:40.901 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (newArgs == null) {
    return null;
}

04:41:40.901 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:41.811 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:41.812 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:42.756 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:42.757 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:43.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:43.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:44.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:44.517 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:45.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:45.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:46.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:46.314 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.Invocation ===80
04:41:46.341 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
System.arraycopy(args, 0, newArgs, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(newArgs, 0, newArgs, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(varArgs, 0, newArgs, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(this.arguments, 0, newArgs, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(this.rawArguments, 0, newArgs, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, varArgs, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, this.arguments, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, this.rawArguments, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, newArgs, 0, varArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, newArgs, 0, MAX_LINE_LENGTH);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, newArgs, 0, this.sequenceNumber);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, newArgs, 0, serialVersionUID);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 1, newArgs, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, varArgsCount, newArgs, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, nonVarArgsCount, newArgs, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, MAX_LINE_LENGTH, newArgs, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, this.sequenceNumber, newArgs, 0, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, newArgs, 1, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, newArgs, varArgsCount, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, newArgs, nonVarArgsCount, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, newArgs, MAX_LINE_LENGTH, nonVarArgsCount);
04:41:46.342 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: System.arraycopy(args, 0, newArgs, this.sequenceNumber, nonVarArgsCount);
04:41:46.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:47.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:47.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:48.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:48.122 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:49.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:49.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:49.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:49.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:50.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:50.877 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:51.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:51.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:52.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:52.662 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:53.584 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:53.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:54.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:54.503 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:55.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:55.387 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:56.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:56.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:57.168 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:57.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:58.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:58.065 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:58.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:58.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:41:59.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:41:59.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:00.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:00.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:01.677 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:01.678 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:02.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:02.558 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:03.455 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:03.456 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:04.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:04.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:05.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:05.261 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (args != null) {
	

}

04:42:05.261 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (args == null) {
    throw new IllegalArgumentException("Null 'args' argument.");
}

04:42:05.261 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (args == null) {
    return null;
}

04:42:05.261 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (newArgs != null) {
	

}

04:42:05.261 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (newArgs == null) {
    throw new IllegalArgumentException("Null 'newArgs' argument.");
}

04:42:05.261 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (newArgs == null) {
    return null;
}

04:42:05.261 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:06.204 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:06.205 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:07.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:07.111 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:08.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:08.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:08.916 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:08.917 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:09.876 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:09.877 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:10.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:10.800 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.Invocation ===79
04:42:10.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Object[] newArgs = new Object[nonVarArgsCount + varArgsCount];
04:42:10.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.Invocation ===78
04:42:10.848 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
final int varArgsCount = varArgs.length;
04:42:10.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.Invocation ===72
04:42:10.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (args[nonVarArgsCount] == null) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:10.868 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (args[nonVarArgsCount] != null) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:10.868 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!isVarArgs || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:10.868 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!isVarArgs)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:10.868 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:10.868 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args == null)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:10.868 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:10.868 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[args.length - 1] != null)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:10.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:11.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:11.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:12.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:12.696 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:13.620 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:13.621 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:14.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:14.529 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:15.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:15.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:16.397 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:16.398 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:17.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) || (!isVarArgs || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) && (!isVarArgs || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) || !(!isVarArgs || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) && !(!isVarArgs || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) || (!isVarArgs)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) && (!isVarArgs)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) || !(!isVarArgs)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) && !(!isVarArgs)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) || (args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) && (args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) || !(args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) && !(args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) || (args == null)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) && (args == null)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) || !(args == null)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.312 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) && !(args == null)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) || (!args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) && (!args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) || !(!args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) && !(!args[args.length - 1].getClass().isArray())) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) || (args[args.length - 1] != null)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) && (args[args.length - 1] != null)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) || !(args[args.length - 1] != null)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((args[nonVarArgsCount] == null) && !(args[args.length - 1] != null)) {
            // in case someone deliberately passed null varArg array
            varArgs = new Object[] { null };
        } else {
            varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);
        }
04:42:17.313 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:18.229 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:18.230 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:19.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:19.180 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:20.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:20.144 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:21.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:21.143 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:22.073 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:22.074 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:22.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:22.961 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:23.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:23.929 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:24.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:24.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:25.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:25.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:26.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:26.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:27.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:27.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:28.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:28.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:29.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:29.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:30.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:30.463 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:31.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:31.399 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:32.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:32.426 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:33.373 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:33.374 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:34.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:34.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:35.169 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:35.170 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:36.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:36.087 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:37.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:37.025 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:37.913 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:37.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:38.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:38.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:39.768 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:39.769 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (args.length() <= nonVarArgsCount) {
	

}

04:42:39.770 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:40.704 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:40.704 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (args != null) {
	

}

04:42:40.704 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (args == null) {
    throw new IllegalArgumentException("Null 'args' argument.");
}

04:42:40.704 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (args == null) {
    return null;
}

04:42:40.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:41.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:41.624 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:42.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:42.554 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:43.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:43.447 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.Invocation ===70
04:42:43.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
final int nonVarArgsCount = args.length - 1;
04:42:43.466 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.matchers.ArrayEquals ===66
04:42:43.476 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (array instanceof Object[]) {
            return (Object[]) array;
        }
04:42:43.477 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (array != null) {
	

}

04:42:43.477 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (array == null) {
    throw new IllegalArgumentException("Null 'array' argument.");
}

04:42:43.477 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (array == null) {
    return null;
}

04:42:43.478 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:44.235 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:44.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:45.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:45.054 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:45.798 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:45.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.ArgumentsComparator ===59
04:42:45.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!actual.getMethod().isVarArgs()) || !actualMatcher.matches(rawArgs[i])) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs.length != matchers.size()) || !actualMatcher.matches(rawArgs[i])) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1) || !actualMatcher.matches(rawArgs[i])) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i])) || !actualMatcher.matches(rawArgs[i])) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((i == rawArgs.length-1) || !actualMatcher.matches(rawArgs[i])) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i] != null && rawArgs[i].getClass().isArray()) || !actualMatcher.matches(rawArgs[i])) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || !actualMatcher.matches(rawArgs[i])) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i].getClass().isArray()) || !actualMatcher.matches(rawArgs[i])) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i] != null) || !actualMatcher.matches(rawArgs[i])) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) && !actualMatcher.matches(rawArgs[i])) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!actual.getMethod().isVarArgs())) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs.length != matchers.size())) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i]))) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((i == rawArgs.length-1)) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i] != null && rawArgs[i].getClass().isArray())) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator)) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i].getClass().isArray())) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i] != null)) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || (!actual.getMethod().isVarArgs())) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || (rawArgs.length != matchers.size())) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || (rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || (!m.matches(rawArgs[i]))) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || (i == rawArgs.length-1)) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || (rawArgs[i] != null && rawArgs[i].getClass().isArray())) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || (m instanceof MatcherDecorator)) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || (rawArgs[i].getClass().isArray())) {
                    return false;
                }
04:42:45.806 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || (rawArgs[i] != null)) {
                    return false;
                }
04:42:45.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:46.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:46.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:47.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:47.418 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:48.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:48.245 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:49.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:49.036 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:49.842 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:49.843 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:50.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:50.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:51.409 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:51.410 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:52.197 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:52.198 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:52.999 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:53.000 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:53.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:53.772 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:54.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:54.538 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:55.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:55.339 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:56.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:56.117 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:56.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:56.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:57.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:57.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:58.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:58.484 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:42:59.268 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:42:59.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:00.056 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:00.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:00.878 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:00.879 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:01.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:01.713 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:02.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:02.488 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:03.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:03.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:04.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:04.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:04.888 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:04.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:05.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:05.722 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:06.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:06.531 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:07.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:07.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:08.171 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:08.172 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!actualMatcher.matches(rawArgs[i])) {
                    return false;
                }
04:43:08.172 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher)) {
                    return false;
                }
04:43:08.172 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:08.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:08.982 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:09.784 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || (!actual.getMethod().isVarArgs())) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && (!actual.getMethod().isVarArgs())) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || !(!actual.getMethod().isVarArgs())) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && !(!actual.getMethod().isVarArgs())) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || (rawArgs.length != matchers.size())) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && (rawArgs.length != matchers.size())) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || !(rawArgs.length != matchers.size())) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && !(rawArgs.length != matchers.size())) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || (rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && (rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || !(rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && !(rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || (!m.matches(rawArgs[i]))) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && (!m.matches(rawArgs[i]))) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || !(!m.matches(rawArgs[i]))) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && !(!m.matches(rawArgs[i]))) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || (i == rawArgs.length-1)) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && (i == rawArgs.length-1)) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || !(i == rawArgs.length-1)) {
                    return false;
                }
04:43:09.785 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && !(i == rawArgs.length-1)) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || (rawArgs[i] != null && rawArgs[i].getClass().isArray())) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && (rawArgs[i] != null && rawArgs[i].getClass().isArray())) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || !(rawArgs[i] != null && rawArgs[i].getClass().isArray())) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && !(rawArgs[i] != null && rawArgs[i].getClass().isArray())) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || (m instanceof MatcherDecorator)) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && (m instanceof MatcherDecorator)) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || !(m instanceof MatcherDecorator)) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && !(m instanceof MatcherDecorator)) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || (rawArgs[i].getClass().isArray())) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && (rawArgs[i].getClass().isArray())) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || !(rawArgs[i].getClass().isArray())) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && !(rawArgs[i].getClass().isArray())) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || (rawArgs[i] != null)) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && (rawArgs[i] != null)) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) || !(rawArgs[i] != null)) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i])) && !(rawArgs[i] != null)) {
                    return false;
                }
04:43:09.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:10.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:10.597 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:11.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:11.389 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:12.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:12.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:12.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:12.998 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:13.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:13.810 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:14.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:14.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:15.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:15.549 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:16.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:16.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:17.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:17.372 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:18.188 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:18.189 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:19.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:19.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:20.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:20.057 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:20.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:20.861 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:21.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:21.682 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:22.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:22.486 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:23.275 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:23.276 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:24.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:24.072 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:24.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:24.891 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:25.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:25.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:26.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:26.556 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:27.333 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:27.334 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:28.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:28.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:28.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:28.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:29.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:29.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:30.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:30.545 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:31.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:31.346 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:32.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:32.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:32.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:32.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:33.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:33.780 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:34.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:34.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:35.357 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:35.358 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:36.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:36.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:37.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:37.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:38.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:38.098 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:38.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:38.902 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:39.702 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:39.703 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (actualMatcher != null) {
	

}

04:43:39.703 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (actualMatcher == null) {
    throw new IllegalArgumentException("Null 'actualMatcher' argument.");
}

04:43:39.703 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (actualMatcher == null) {
    return false;
}

04:43:39.703 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (rawArgs != null) {
	

}

04:43:39.703 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (rawArgs == null) {
    throw new IllegalArgumentException("Null 'rawArgs' argument.");
}

04:43:39.703 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (rawArgs == null) {
    return false;
}

04:43:39.703 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:40.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:40.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:41.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:41.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:42.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:42.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:43.090 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:43.091 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:43.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:43.908 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:44.699 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:44.700 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(actualMatcher)) {
                    return false;
                }
04:43:44.700 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(m)) {
                    return false;
                }
04:43:44.700 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(i)) {
                    return false;
                }
04:43:44.700 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(matchers)) {
                    return false;
                }
04:43:44.700 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs)) {
                    return false;
                }
04:43:44.700 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(invocationMatcher)) {
                    return false;
                }
04:43:44.700 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(actual)) {
                    return false;
                }
04:43:44.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:45.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:45.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:46.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:46.351 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:47.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:47.174 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:48.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:48.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:48.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:48.849 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:49.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:49.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:50.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:50.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.invocation.ArgumentsComparator ===53
04:43:50.436 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (m instanceof MatcherDecorator) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:50.437 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs.length != matchers.size())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:50.437 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!actual.getMethod().isVarArgs())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:50.437 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:50.437 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!m.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:50.437 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:50.437 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((i == rawArgs.length-1)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:50.438 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i] != null && rawArgs[i].getClass().isArray())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:50.438 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i].getClass().isArray())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:50.438 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((rawArgs[i] != null)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:50.438 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!(actualMatcher instanceof VarargMatcher))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:50.438 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!actualMatcher.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:50.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:51.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:51.211 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:52.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:52.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:52.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:52.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:53.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:53.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:54.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:54.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:55.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:55.267 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:56.058 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:56.059 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:56.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:56.889 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:57.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:57.685 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:58.508 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:58.509 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:43:59.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || (rawArgs.length != matchers.size())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && (rawArgs.length != matchers.size())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || !(rawArgs.length != matchers.size())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && !(rawArgs.length != matchers.size())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || (!actual.getMethod().isVarArgs())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && (!actual.getMethod().isVarArgs())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || !(!actual.getMethod().isVarArgs())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && !(!actual.getMethod().isVarArgs())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || (rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && (rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || !(rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && !(rawArgs[i] != null && rawArgs[i].getClass().isArray() && i == rawArgs.length-1)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || (!m.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && (!m.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.313 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || !(!m.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && !(!m.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && (!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || !(!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && !(!(actualMatcher instanceof VarargMatcher) || !actualMatcher.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || (i == rawArgs.length-1)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && (i == rawArgs.length-1)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || !(i == rawArgs.length-1)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && !(i == rawArgs.length-1)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || (rawArgs[i] != null && rawArgs[i].getClass().isArray())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && (rawArgs[i] != null && rawArgs[i].getClass().isArray())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || !(rawArgs[i] != null && rawArgs[i].getClass().isArray())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && !(rawArgs[i] != null && rawArgs[i].getClass().isArray())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || (rawArgs[i].getClass().isArray())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && (rawArgs[i].getClass().isArray())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || !(rawArgs[i].getClass().isArray())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && !(rawArgs[i].getClass().isArray())) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || (rawArgs[i] != null)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && (rawArgs[i] != null)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || !(rawArgs[i] != null)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && !(rawArgs[i] != null)) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || (!(actualMatcher instanceof VarargMatcher))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && (!(actualMatcher instanceof VarargMatcher))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || !(!(actualMatcher instanceof VarargMatcher))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && !(!(actualMatcher instanceof VarargMatcher))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || (!actualMatcher.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && (!actualMatcher.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) || !(!actualMatcher.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.314 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((m instanceof MatcherDecorator) && !(!actualMatcher.matches(rawArgs[i]))) {
                    actualMatcher = ((MatcherDecorator)m).getActualMatcher();
                } else {
                    actualMatcher = m;
                }
04:43:59.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:00.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:00.094 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:00.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:00.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:01.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:01.736 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:02.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:02.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:03.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:03.407 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:04.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:04.241 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:05.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:05.040 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:05.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:05.835 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:06.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:06.689 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:07.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:07.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:08.311 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:08.312 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:09.135 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:09.136 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:09.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:09.964 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:10.758 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:10.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:11.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:11.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:12.449 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:12.450 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:13.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:13.266 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:14.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:14.070 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:14.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:14.865 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:15.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:15.663 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:16.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:16.453 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:17.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:17.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:18.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:18.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:18.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:18.921 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:19.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:19.737 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:20.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:20.515 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:21.305 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:21.306 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:22.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:22.099 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:22.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:22.930 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:23.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:23.771 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:24.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:24.657 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:25.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:25.452 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:26.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:26.280 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:27.182 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:27.183 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:27.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:27.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:28.785 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:28.786 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:29.591 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:29.592 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:30.405 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:30.406 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:31.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:31.207 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:32.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:32.142 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:32.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:32.925 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:33.745 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:33.746 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:34.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:34.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:35.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:35.368 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (m != null) {
	

}

04:44:35.368 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (m == null) {
    throw new IllegalArgumentException("Null 'm' argument.");
}

04:44:35.368 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (m == null) {
    return false;
}

04:44:35.368 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:36.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:36.191 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:37.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:37.012 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:37.807 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:37.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.MockitoCore ===136
04:44:37.825 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return allInvocations.get(allInvocations.size()-1);
04:44:37.826 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return allInvocations.get(allInvocations);
04:44:37.826 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return allInvocations.get(ongoingStubbing);
04:44:37.826 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return allInvocations.get(this.reporter);
04:44:37.826 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return allInvocations.get(this.mockUtil);
04:44:37.826 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return allInvocations.get(this.mockingProgress);
04:44:37.826 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:38.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:38.692 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:39.600 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:39.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:40.511 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:40.512 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:41.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:41.392 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:42.259 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:42.260 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (allInvocations != null) {
	

}

04:44:42.260 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (allInvocations == null) {
    throw new IllegalArgumentException("Null 'allInvocations' argument.");
}

04:44:42.260 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (allInvocations == null) {
    return null;
}

04:44:42.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:43.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:44:43.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:44:43.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:44:43.914 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
04:47:08.595 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch, org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg]
04:47:08.595 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch, - org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg]
04:47:08.595 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch
04:47:08.595 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg
04:47:08.595 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
04:47:08.595 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
04:47:08.829 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-34/aggregatedSusInfo.profl
04:47:08.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.internal.MockitoCore:getLastInvocation()Lorg/mockito/internal/invocation/Invocation; in org.mockito.internal.MockitoCore:136
04:47:08.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Mockito-34
04:47:08.830 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:47:09.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:47:09.665 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
04:49:35.497 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch, org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg]
04:49:35.498 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch, - org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg]
04:49:35.498 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch
04:49:35.498 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg
04:49:35.498 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
04:49:35.498 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
04:49:36.202 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-34/aggregatedSusInfo.profl
04:49:36.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.internal.MockitoCore:getLastInvocation()Lorg/mockito/internal/invocation/Invocation; in org.mockito.internal.MockitoCore:136
04:49:36.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Mockito-34
04:49:36.202 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.MockitoCore ===135
04:49:36.214 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
List<Invocation> allInvocations = ongoingStubbing.getRegisteredInvocations();
04:49:36.215 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (ongoingStubbing != null) {
	

}

04:49:36.215 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (ongoingStubbing == null) {
    throw new IllegalArgumentException("Null 'ongoingStubbing' argument.");
}

04:49:36.215 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (ongoingStubbing == null) {
    return null;
}

04:49:36.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:49:37.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:49:37.043 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:49:37.867 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:49:37.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
04:52:02.452 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch, org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg]
04:52:02.452 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch, - org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg]
04:52:02.452 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch
04:52:02.452 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg
04:52:02.452 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
04:52:02.453 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
04:52:16.465 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-34/aggregatedSusInfo.profl
04:52:16.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.internal.MockitoCore:getLastInvocation()Lorg/mockito/internal/invocation/Invocation; in org.mockito.internal.MockitoCore:135
04:52:16.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Mockito-34
04:52:16.465 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:52:17.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:52:17.349 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
04:54:42.490 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch, org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg]
04:54:42.490 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch, - org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg]
04:54:42.490 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch
04:54:42.490 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg
04:54:42.490 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
04:54:42.491 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
04:59:27.216 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-34/aggregatedSusInfo.profl
04:59:27.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.internal.MockitoCore:getLastInvocation()Lorg/mockito/internal/invocation/Invocation; in org.mockito.internal.MockitoCore:135
04:59:27.217 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Mockito-34
04:59:27.226 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.MockitoCore ===134
04:59:27.236 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
OngoingStubbingImpl ongoingStubbing = ((OngoingStubbingImpl) mockingProgress.pullOngoingStubbing());
04:59:27.237 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (mockingProgress != null) {
	

}

04:59:27.237 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (mockingProgress == null) {
    throw new IllegalArgumentException("Null 'mockingProgress' argument.");
}

04:59:27.237 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (mockingProgress == null) {
    return null;
}

04:59:27.237 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:59:28.102 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-34 ---Fixer: fix fail because of failed compiling! 
04:59:28.103 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
04:59:28.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
04:59:28.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
05:01:52.421 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch, org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg]
05:01:52.421 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch, - org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg]
05:01:52.421 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch
05:01:52.421 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg
05:01:52.421 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
05:01:52.421 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
06:40:09.764 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-34/aggregatedSusInfo.profl
06:40:09.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.internal.MockitoCore:getLastInvocation()Lorg/mockito/internal/invocation/Invocation; in org.mockito.internal.MockitoCore:134
06:40:09.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Mockito-34
06:40:09.765 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
06:40:10.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
06:40:10.601 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
06:42:34.424 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch, org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg]
06:42:34.424 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch, - org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg]
06:42:34.424 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch
06:42:34.424 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg
06:42:34.424 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
06:42:34.424 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
