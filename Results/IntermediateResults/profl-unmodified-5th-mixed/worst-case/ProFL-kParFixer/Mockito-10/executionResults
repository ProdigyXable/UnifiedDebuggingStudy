Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Mockito-10
01:25:09.440 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Mockito/10.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Mockito/10.txt
01:25:14.179 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
01:25:14.206 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-10/generalSusInfo.profl
01:25:14.262 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-10/aggregatedSusInfo.profl
01:25:14.264 [main] INFO edu.lu.uni.serval.bug.fixer.kParFixer - =======kPARFixer: Start to fix suspicious code======
01:25:14.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.exceptions.Reporter ===761
01:25:15.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + classToMock.getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
01:25:15.211 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: throw MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + classToMock.getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
01:25:15.212 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: throw new join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + classToMock.getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
01:25:15.212 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: throw new MockitoException);
01:25:15.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:25:16.157 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
01:25:16.158 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:25:16.589 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
01:25:16.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:25:16.997 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
01:25:17.006 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: throw new MockitoException(classToMock);
01:25:17.006 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: throw new MockitoException(join(
                classToMock,
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
01:25:17.006 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:25:17.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
01:25:17.968 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:25:18.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
01:25:18.973 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
01:29:27.038 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
01:29:27.038 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 3, [- org.mockitousage.basicapi.MocksSerializationForAnnotationTest::should_fail_when_serializable_used_with_type_that_dont_implements_Serializable_and_dont_declare_a_no_arg_constructor, - org.mockitousage.basicapi.MocksSerializationTest::should_fail_when_serializable_used_with_type_that_dont_implements_Serializable_and_dont_declare_a_no_arg_constructor, - org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
01:29:27.038 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.basicapi.MocksSerializationForAnnotationTest::should_fail_when_serializable_used_with_type_that_dont_implements_Serializable_and_dont_declare_a_no_arg_constructor
01:29:27.038 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.basicapi.MocksSerializationTest::should_fail_when_serializable_used_with_type_that_dont_implements_Serializable_and_dont_declare_a_no_arg_constructor
01:29:27.038 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub
01:29:27.038 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=2, pp=Unknown
01:29:27.040 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
01:29:27.214 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-10/aggregatedSusInfo.profl
01:29:27.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:serializableWontWorkForObjectsThatDontImplementSerializable(Ljava/lang/Class;)V in org.mockito.exceptions.Reporter:761
01:29:27.215 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 3 Mockito-10
01:29:27.239 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: throw MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + classToMock.getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
01:29:27.239 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: throw new join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + classToMock.getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
01:29:27.239 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: throw new MockitoException);
01:29:27.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:29:28.209 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
01:29:28.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:29:28.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
01:29:28.610 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:29:29.010 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
01:29:29.018 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: throw new MockitoException(classToMock);
01:29:29.018 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: throw new MockitoException(join(
                classToMock,
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
01:29:29.019 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:29:29.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
01:29:29.978 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:29:30.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
01:29:30.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
01:33:31.028 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
01:33:31.028 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 3, [- org.mockitousage.basicapi.MocksSerializationForAnnotationTest::should_fail_when_serializable_used_with_type_that_dont_implements_Serializable_and_dont_declare_a_no_arg_constructor, - org.mockitousage.basicapi.MocksSerializationTest::should_fail_when_serializable_used_with_type_that_dont_implements_Serializable_and_dont_declare_a_no_arg_constructor, - org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
01:33:31.028 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.basicapi.MocksSerializationForAnnotationTest::should_fail_when_serializable_used_with_type_that_dont_implements_Serializable_and_dont_declare_a_no_arg_constructor
01:33:31.028 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.mockitousage.basicapi.MocksSerializationTest::should_fail_when_serializable_used_with_type_that_dont_implements_Serializable_and_dont_declare_a_no_arg_constructor
01:33:31.028 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub
01:33:31.028 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=2, pp=Unknown
01:33:31.029 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
01:33:31.773 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-10/aggregatedSusInfo.profl
01:33:31.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:serializableWontWorkForObjectsThatDontImplementSerializable(Ljava/lang/Class;)V in org.mockito.exceptions.Reporter:761
01:33:31.773 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 3 Mockito-10
01:33:31.782 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (classToMock != null) {
	

}

01:33:31.782 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (classToMock == null) {
    throw new IllegalArgumentException("Null 'classToMock' argument.");
}

01:33:31.782 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (classToMock == null) {
    return;
}

01:33:31.782 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:33:32.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
01:33:32.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
01:37:37.339 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
01:37:37.339 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
01:37:37.339 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub
01:37:37.339 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
01:37:37.341 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
01:37:50.585 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-10/aggregatedSusInfo.profl
01:37:50.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:serializableWontWorkForObjectsThatDontImplementSerializable(Ljava/lang/Class;)V in org.mockito.exceptions.Reporter:761
01:37:50.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Mockito-10
01:37:50.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:37:51.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
01:37:51.576 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
01:41:55.334 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
01:41:55.335 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
01:41:55.335 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub
01:41:55.335 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
01:41:55.336 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
01:46:35.175 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-10/aggregatedSusInfo.profl
01:46:35.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:serializableWontWorkForObjectsThatDontImplementSerializable(Ljava/lang/Class;)V in org.mockito.exceptions.Reporter:761
01:46:35.175 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Mockito-10
01:46:35.176 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:46:36.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
01:46:36.263 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
01:50:40.164 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
01:50:40.164 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
01:50:40.164 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub
01:50:40.165 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
01:50:40.165 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
03:30:17.074 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Mockito-10/aggregatedSusInfo.profl
03:30:17.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.mockito.exceptions.Reporter:serializableWontWorkForObjectsThatDontImplementSerializable(Ljava/lang/Class;)V in org.mockito.exceptions.Reporter:761
03:30:17.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Mockito-10
03:30:17.075 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.exceptions.Reporter ===760
03:30:17.223 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
throw new MockitoException(join(
                "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '" + classToMock.getSimpleName() + "'",
                "do not implement Serializable AND do not have a no-arg constructor.",
                "This combination is requested, otherwise you will get an 'java.io.InvalidClassException' when the mock will be serialized",
                "",
                "Also note that as requested by the Java serialization specification, the whole hierarchy need to implements Serializable,",
                "i.e. the top-most superclass has to implements Serializable.",
                ""
        ));
03:30:17.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.mockito.internal.util.MockCreationValidator ===63
03:30:17.240 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
new Reporter().serializableWontWorkForObjectsThatDontImplementSerializable(classToMock);
03:30:17.439 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: new Reporter().serializableWontWorkForObjectsThatDontImplementSerializable(serializable);
03:30:17.439 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: new Reporter().serializableWontWorkForObjectsThatDontImplementSerializable(this.mockUtil);
03:30:17.439 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:30:18.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
03:30:18.262 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:30:19.052 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
03:30:19.147 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: new Reporter().serializableWontWorkForObjectsThatDontImplementSerializable(serializable);
03:30:19.147 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: new Reporter().serializableWontWorkForObjectsThatDontImplementSerializable(this.mockUtil);
03:30:19.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:30:19.948 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
03:30:19.949 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:30:20.754 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mockito-10 ---Fixer: fix fail because of failed compiling! 
03:30:20.775 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (classToMock != null) {
	

}

03:30:20.776 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (classToMock == null) {
    throw new IllegalArgumentException("Null 'classToMock' argument.");
}

03:30:20.776 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (classToMock == null) {
    return;
}

03:30:20.776 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
03:30:21.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
03:30:21.587 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
03:34:24.819 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
03:34:24.819 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub]
03:34:24.819 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest::should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub
03:34:24.819 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
03:34:24.819 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
