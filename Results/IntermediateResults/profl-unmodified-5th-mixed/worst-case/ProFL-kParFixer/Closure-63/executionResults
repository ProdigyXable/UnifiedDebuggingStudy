Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-63
01:57:47.923 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-63 Failed Tests: 2
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/63.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/63.txt
02:02:02.587 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
02:02:02.619 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-63/generalSusInfo.profl
02:02:02.623 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-63/aggregatedSusInfo.profl
02:02:02.632 [main] INFO edu.lu.uni.serval.bug.fixer.kParFixer - =======kPARFixer: Start to fix suspicious code======
02:02:02.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.LightweightMessageFormatter ===97
02:02:03.950 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (excerpt.equals(LINE)
          && 0 <= charno && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.001 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((error.sourceName != null)
          && 0 <= charno && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.002 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((sourceExcerpt != null)
          && 0 <= charno && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.002 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((error.lineNumber > 0)
          && 0 <= charno && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.002 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((source == null)
          && 0 <= charno && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.002 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((Character.isWhitespace(c))
          && 0 <= charno && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.002 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE) || 0 <= charno && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.002 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((error.sourceName != null) && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.002 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((sourceExcerpt != null) && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.002 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((error.lineNumber > 0) && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.002 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((source == null) && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((Character.isWhitespace(c)) && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && 0 <= charno && charno <= sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && 0 <= charno && charno >= sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && 0 <= charno && charno > sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && 0 <= charno && (error.sourceName != null)) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && 0 <= charno && (sourceExcerpt != null)) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && 0 <= charno && (error.lineNumber > 0)) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && 0 <= charno && (source == null)) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && 0 <= charno && (Character.isWhitespace(c))) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && 0 < charno && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && 0 > charno && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && 0 >= charno && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && (error.sourceName != null) && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && (sourceExcerpt != null) && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && (error.lineNumber > 0) && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && (source == null) && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && (Character.isWhitespace(c)) && charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (excerpt.equals(LINE)
          && 0 <= charno || charno < sourceExcerpt.length()) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((error.sourceName != null)) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((sourceExcerpt != null)) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((error.lineNumber > 0)) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((source == null)) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.003 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((Character.isWhitespace(c))) {
        for (int i = 0; i < charno; i++) {
          char c = sourceExcerpt.charAt(i);
          if (Character.isWhitespace(c)) {
            b.append(c);
          } else {
            b.append(' ');
          }
        }
        b.append("^\n");
      }
02:02:04.007 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:02:13.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:02:13.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:06:02.625 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
02:06:02.626 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, - com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
02:06:02.626 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1
02:06:02.626 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2
02:06:02.626 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
02:06:02.626 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
02:06:02.632 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-63/aggregatedSusInfo.profl
02:06:02.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.jscomp.LightweightMessageFormatter:format(Lcom/google/javascript/jscomp/JSError;Z)Ljava/lang/String; in com.google.javascript.jscomp.LightweightMessageFormatter:97
02:06:02.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Closure-63
02:06:02.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:06:10.429 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:06:10.430 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:09:55.603 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
02:09:55.603 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2, - com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1]
02:09:55.603 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2
02:09:55.604 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1
02:09:55.604 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
02:09:55.604 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
02:09:55.608 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-63/aggregatedSusInfo.profl
02:09:55.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.jscomp.LightweightMessageFormatter:format(Lcom/google/javascript/jscomp/JSError;Z)Ljava/lang/String; in com.google.javascript.jscomp.LightweightMessageFormatter:97
02:09:55.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Closure-63
02:09:55.609 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:10:03.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:10:03.390 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:13:48.927 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
02:13:48.927 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2, - com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1]
02:13:48.928 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2
02:13:48.928 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1
02:13:48.928 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
02:13:48.928 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
02:13:48.954 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-63/aggregatedSusInfo.profl
02:13:48.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.jscomp.LightweightMessageFormatter:format(Lcom/google/javascript/jscomp/JSError;Z)Ljava/lang/String; in com.google.javascript.jscomp.LightweightMessageFormatter:97
02:13:48.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Closure-63
02:13:48.954 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:13:56.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:13:56.675 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:17:42.124 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
02:17:42.124 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 4, [- com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, - com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2, - com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorTabs, - com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaces]
02:17:42.124 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1
02:17:42.124 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2
02:17:42.125 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorTabs
02:17:42.125 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaces
02:17:42.125 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=2, pp=Unknown
02:17:42.125 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
02:17:42.370 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-63/aggregatedSusInfo.profl
02:17:42.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.jscomp.LightweightMessageFormatter:format(Lcom/google/javascript/jscomp/JSError;Z)Ljava/lang/String; in com.google.javascript.jscomp.LightweightMessageFormatter:97
02:17:42.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 4 Closure-63
02:17:42.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:46.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-63 ---Fixer: fix fail because of failed compiling! 
02:17:46.593 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:17:54.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:17:54.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:21:39.445 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
02:21:39.446 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 0, []
02:21:39.446 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=0, fp=2, pf=0, pp=Unknown
02:21:39.446 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] CleanFix found
02:21:42.295 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-63/aggregatedSusInfo.profl
02:21:42.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.jscomp.LightweightMessageFormatter:format(Lcom/google/javascript/jscomp/JSError;Z)Ljava/lang/String; in com.google.javascript.jscomp.LightweightMessageFormatter:97
02:21:42.295 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Succeeded to fix the bug Closure-63====================
02:21:44.647 [main] INFO edu.lu.uni.serval.bug.fixer.kParFixer - =======kPARFixer: Finish off fixing======
02:22:14.307 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-63/aggregatedSusInfo.profl
Succeeded to fix bug Closure-63
