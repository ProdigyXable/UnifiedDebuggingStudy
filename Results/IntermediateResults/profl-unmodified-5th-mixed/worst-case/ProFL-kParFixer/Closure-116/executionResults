Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-116
19:12:23.299 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-116 Failed Tests: 8
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/116.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/116.txt
19:20:42.610 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
19:20:42.730 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-116/generalSusInfo.profl
19:20:42.909 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-116/aggregatedSusInfo.profl
19:20:42.914 [main] INFO edu.lu.uni.serval.bug.fixer.kParFixer - =======kPARFixer: Start to fix suspicious code======
19:20:42.915 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1459
19:20:44.228 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return res;
19:20:44.244 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res != null) {
	

}

19:20:44.244 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res == null) {
    throw new IllegalArgumentException("Null 'res' argument.");
}

19:20:44.244 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res == null) {
    return null;
}

19:20:44.246 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:20:53.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
19:20:53.514 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
19:25:27.571 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 8, [com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a, com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b, com.google.javascript.jscomp.InlineFunctionsTest::testBug4944818, com.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2, com.google.javascript.jscomp.InlineFunctionsTest::testIssue1101, com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8, com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9, com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6]
19:25:27.571 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a, - com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b, - com.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2, - com.google.javascript.jscomp.InlineFunctionsTest::testBug4944818, - com.google.javascript.jscomp.InlineFunctionsTest::testIssue1101, - com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8, - com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9, - com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6]
19:25:27.571 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a
19:25:27.571 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b
19:25:27.571 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2
19:25:27.571 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testBug4944818
19:25:27.571 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testIssue1101
19:25:27.571 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8
19:25:27.571 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9
19:25:27.571 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6
19:25:27.572 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=8, fp=0, pf=0, pp=Unknown
19:25:27.572 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
19:25:28.541 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-116/aggregatedSusInfo.profl
19:25:28.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1459
19:25:28.541 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 8 Closure-116
19:25:28.542 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:25:37.370 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
19:25:37.371 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
19:30:09.290 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 8, [com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a, com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b, com.google.javascript.jscomp.InlineFunctionsTest::testBug4944818, com.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2, com.google.javascript.jscomp.InlineFunctionsTest::testIssue1101, com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8, com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9, com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6]
19:30:09.290 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a, - com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b, - com.google.javascript.jscomp.InlineFunctionsTest::testBug4944818, - com.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2, - com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6, - com.google.javascript.jscomp.InlineFunctionsTest::testIssue1101, - com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8, - com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9]
19:30:09.290 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a
19:30:09.290 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b
19:30:09.291 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testBug4944818
19:30:09.291 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2
19:30:09.291 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6
19:30:09.291 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testIssue1101
19:30:09.291 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8
19:30:09.291 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9
19:30:09.291 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=8, fp=0, pf=0, pp=Unknown
19:30:09.291 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
19:30:30.863 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-116/aggregatedSusInfo.profl
19:30:30.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1459
19:30:30.863 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 8 Closure-116
19:30:30.864 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:30:39.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
19:30:39.492 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
19:35:10.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 8, [com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a, com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b, com.google.javascript.jscomp.InlineFunctionsTest::testBug4944818, com.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2, com.google.javascript.jscomp.InlineFunctionsTest::testIssue1101, com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8, com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9, com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6]
19:35:10.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a, - com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b, - com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8, - com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9, - com.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2, - com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6, - com.google.javascript.jscomp.InlineFunctionsTest::testBug4944818, - com.google.javascript.jscomp.InlineFunctionsTest::testIssue1101]
19:35:10.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a
19:35:10.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b
19:35:10.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8
19:35:10.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9
19:35:10.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2
19:35:10.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6
19:35:10.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testBug4944818
19:35:10.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testIssue1101
19:35:10.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=8, fp=0, pf=0, pp=Unknown
19:35:10.991 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
19:47:00.739 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-116/aggregatedSusInfo.profl
19:47:00.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1459
19:47:00.739 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 8 Closure-116
19:47:00.740 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1430
19:47:00.994 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getAncestors() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLength() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLineno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getCharno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourceOffset() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourcePosition() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getChildCount() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getChangeTime() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSideEffectFlags() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSortedPropTypes() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getPropListHeadForTesting() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.setQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDouble() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getStaticSourceFile() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getInputId() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.children() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.siblings() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSDocInfo() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getNext() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastSibling() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachFromParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTreeImpl() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourceFileName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.254 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFromExterns() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasMoreThanOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isUnscopedQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVarArgs() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOptionalArg() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSyntheticBlock() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.wasEmptyNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOnlyModifiesThisCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOnlyModifiesArgumentsCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNoSideEffectsCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLocalResultCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.mayMutateArguments() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.mayMutateGlobalStateOrThrow() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAdd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAnd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isArrayLit() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAssign() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAssignAdd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isBlock() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isBreak() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCase() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCast() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCatch() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isComma() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isContinue() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDebugger() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDec() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDefaultCase() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDelProp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDo() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isEmpty() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isExprResult() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.255 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFalse() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFor() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFunction() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetterDef() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetElem() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetProp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isHook() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isIf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isIn() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isInc() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isInstanceOf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLabel() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLabelName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNE() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNew() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNot() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNull() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNumber() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isObjectLit() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOr() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isParamList() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isRegExp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isReturn() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isScript() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSetterDef() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isStringKey() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSwitch() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isThis() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isThrow() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTrue() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTry() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTypeOf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVar() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVoid() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isWhile() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.256 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isWith() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.257 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDirectives() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.257 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJsDocBuilderForNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
19:47:01.258 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:47:09.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
19:47:09.933 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
19:51:42.181 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 8, [com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a, com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b, com.google.javascript.jscomp.InlineFunctionsTest::testBug4944818, com.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2, com.google.javascript.jscomp.InlineFunctionsTest::testIssue1101, com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8, com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9, com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6]
19:51:42.181 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a, - com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b, - com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8, - com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9, - com.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2, - com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6, - com.google.javascript.jscomp.InlineFunctionsTest::testBug4944818, - com.google.javascript.jscomp.InlineFunctionsTest::testIssue1101]
19:51:42.182 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a
19:51:42.182 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b
19:51:42.182 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8
19:51:42.182 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9
19:51:42.182 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2
19:51:42.182 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6
19:51:42.182 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testBug4944818
19:51:42.182 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineFunctionsTest::testIssue1101
19:51:42.182 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=8, fp=0, pf=0, pp=Unknown
19:51:42.182 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
