Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-60
01:27:48.524 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-60 Failed Tests: 2
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/60.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/60.txt
01:34:12.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
01:34:12.540 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-60/generalSusInfo.profl
01:34:12.699 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-60/aggregatedSusInfo.profl
01:34:12.706 [main] INFO edu.lu.uni.serval.bug.fixer.kParFixer - =======kPARFixer: Start to fix suspicious code======
01:34:12.706 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1542
01:34:13.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return res;
01:34:13.989 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res != null) {
	

}

01:34:13.989 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res == null) {
    throw new IllegalArgumentException("Null 'res' argument.");
}

01:34:13.989 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res == null) {
    return null;
}

01:34:13.990 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:34:23.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
01:34:23.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
01:38:12.515 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504, com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue]
01:38:12.515 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504, - com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue]
01:38:12.515 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504
01:38:12.515 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue
01:38:12.516 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
01:38:12.516 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
01:38:14.094 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-60/aggregatedSusInfo.profl
01:38:14.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1542
01:38:14.095 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Closure-60
01:38:14.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:38:22.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
01:38:22.759 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
01:42:09.996 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504, com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue]
01:42:09.996 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504, - com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue]
01:42:09.996 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504
01:42:09.996 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue
01:42:09.997 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
01:42:09.997 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
01:42:51.969 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-60/aggregatedSusInfo.profl
01:42:51.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1542
01:42:51.970 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Closure-60
01:42:51.971 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
01:43:00.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
01:43:00.588 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
01:46:47.430 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504, com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue]
01:46:47.430 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504, - com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue]
01:46:47.430 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504
01:46:47.430 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue
01:46:47.430 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
01:46:47.430 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
02:09:11.959 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-60/aggregatedSusInfo.profl
02:09:11.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1542
02:09:11.959 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 2 Closure-60
02:09:11.960 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1500
02:09:12.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.children() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.siblings() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSDocInfo() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getAncestors() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getNext() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastSibling() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachFromParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTreeImpl() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourceFileName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLineno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getCharno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourcePosition() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getChildCount() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSideEffectFlags() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.340 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getPropListHeadForTesting() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSortedPropTypes() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.setQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFromExterns() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasMoreThanOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasSideEffects() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isUnscopedQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVarArgs() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOptionalArg() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSyntheticBlock() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.wasEmptyNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOnlyModifiesThisCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNoSideEffectsCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLocalResultCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDirectives() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDouble() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.341 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJsDocBuilderForNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
02:09:12.342 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:09:21.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:09:21.101 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:13:08.273 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 2, [com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504, com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue]
02:13:08.273 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504, - com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue]
02:13:08.273 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testIssue504
02:13:08.273 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.NodeUtilTest::testGetBooleanValue
02:13:08.273 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=2, fp=0, pf=0, pp=Unknown
02:13:08.273 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
