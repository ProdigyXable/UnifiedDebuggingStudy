Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-1
21:25:57.984 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-1 Failed Tests: 8
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/1.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/1.txt
21:29:30.735 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
21:29:30.945 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-1/generalSusInfo.profl
21:29:31.185 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-1/aggregatedSusInfo.profl
21:29:31.199 [main] INFO edu.lu.uni.serval.bug.fixer.kParFixer - =======kPARFixer: Start to fix suspicious code======
21:29:31.199 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1440
21:29:32.619 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return res;
21:29:32.639 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res != null) {
	

}

21:29:32.640 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res == null) {
    throw new IllegalArgumentException("Null 'res' argument.");
}

21:29:32.640 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res == null) {
    return null;
}

21:29:32.641 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
21:29:42.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
21:29:42.615 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
21:33:59.640 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 8, [com.google.javascript.jscomp.CommandLineRunnerTest::testSimpleModeLeavesUnusedParams, com.google.javascript.jscomp.CommandLineRunnerTest::testForwardDeclareDroppedTypes, com.google.javascript.jscomp.CommandLineRunnerTest::testDebugFlag1, com.google.javascript.jscomp.IntegrationTest::testIssue787, com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal1, com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal2, com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal3, com.google.javascript.jscomp.RemoveUnusedVarsTest::testIssue168b]
21:33:59.640 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.CommandLineRunnerTest::testSimpleModeLeavesUnusedParams, - com.google.javascript.jscomp.CommandLineRunnerTest::testDebugFlag1, - com.google.javascript.jscomp.CommandLineRunnerTest::testForwardDeclareDroppedTypes, - com.google.javascript.jscomp.IntegrationTest::testIssue787, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal1, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal2, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal3, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testIssue168b]
21:33:59.640 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testSimpleModeLeavesUnusedParams
21:33:59.640 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testDebugFlag1
21:33:59.641 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testForwardDeclareDroppedTypes
21:33:59.641 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testIssue787
21:33:59.641 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal1
21:33:59.641 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal2
21:33:59.641 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal3
21:33:59.641 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testIssue168b
21:33:59.641 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=8, fp=0, pf=0, pp=Unknown
21:33:59.641 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
21:34:02.138 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-1/aggregatedSusInfo.profl
21:34:02.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1440
21:34:02.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 8 Closure-1
21:34:02.139 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
21:34:10.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
21:34:10.868 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
21:38:26.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 8, [com.google.javascript.jscomp.CommandLineRunnerTest::testSimpleModeLeavesUnusedParams, com.google.javascript.jscomp.CommandLineRunnerTest::testForwardDeclareDroppedTypes, com.google.javascript.jscomp.CommandLineRunnerTest::testDebugFlag1, com.google.javascript.jscomp.IntegrationTest::testIssue787, com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal1, com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal2, com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal3, com.google.javascript.jscomp.RemoveUnusedVarsTest::testIssue168b]
21:38:26.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.CommandLineRunnerTest::testSimpleModeLeavesUnusedParams, - com.google.javascript.jscomp.CommandLineRunnerTest::testDebugFlag1, - com.google.javascript.jscomp.CommandLineRunnerTest::testForwardDeclareDroppedTypes, - com.google.javascript.jscomp.IntegrationTest::testIssue787, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testIssue168b, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal1, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal2, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal3]
21:38:26.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testSimpleModeLeavesUnusedParams
21:38:26.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testDebugFlag1
21:38:26.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testForwardDeclareDroppedTypes
21:38:26.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testIssue787
21:38:26.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testIssue168b
21:38:26.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal1
21:38:26.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal2
21:38:26.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal3
21:38:26.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=8, fp=0, pf=0, pp=Unknown
21:38:26.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
21:39:46.532 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-1/aggregatedSusInfo.profl
21:39:46.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1440
21:39:46.532 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 8 Closure-1
21:39:46.533 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
21:39:55.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
21:39:55.181 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
21:44:11.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 8, [com.google.javascript.jscomp.CommandLineRunnerTest::testSimpleModeLeavesUnusedParams, com.google.javascript.jscomp.CommandLineRunnerTest::testForwardDeclareDroppedTypes, com.google.javascript.jscomp.CommandLineRunnerTest::testDebugFlag1, com.google.javascript.jscomp.IntegrationTest::testIssue787, com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal1, com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal2, com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal3, com.google.javascript.jscomp.RemoveUnusedVarsTest::testIssue168b]
21:44:11.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.CommandLineRunnerTest::testSimpleModeLeavesUnusedParams, - com.google.javascript.jscomp.CommandLineRunnerTest::testDebugFlag1, - com.google.javascript.jscomp.CommandLineRunnerTest::testForwardDeclareDroppedTypes, - com.google.javascript.jscomp.IntegrationTest::testIssue787, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal1, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal2, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testIssue168b, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal3]
21:44:11.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testSimpleModeLeavesUnusedParams
21:44:11.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testDebugFlag1
21:44:11.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testForwardDeclareDroppedTypes
21:44:11.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testIssue787
21:44:11.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal1
21:44:11.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal2
21:44:11.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testIssue168b
21:44:11.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal3
21:44:11.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=8, fp=0, pf=0, pp=Unknown
21:44:11.388 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
22:28:27.638 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-1/aggregatedSusInfo.profl
22:28:27.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1440
22:28:27.638 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 8 Closure-1
22:28:27.639 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1411
22:28:27.850 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.149 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getAncestors() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.149 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.149 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.149 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLength() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.149 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLineno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.149 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getCharno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.149 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourceOffset() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.149 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourcePosition() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.149 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getChildCount() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.149 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSideEffectFlags() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.149 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSortedPropTypes() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getPropListHeadForTesting() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.setQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDouble() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getStaticSourceFile() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getInputId() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.children() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.siblings() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSDocInfo() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getNext() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastSibling() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachFromParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTreeImpl() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourceFileName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFromExterns() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasMoreThanOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isUnscopedQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVarArgs() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOptionalArg() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSyntheticBlock() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.wasEmptyNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOnlyModifiesThisCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNoSideEffectsCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.150 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLocalResultCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAdd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAnd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isArrayLit() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAssign() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAssignAdd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isBlock() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isBreak() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCase() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCast() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCatch() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isComma() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isContinue() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDebugger() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDec() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDefaultCase() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDelProp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDo() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isEmpty() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isExprResult() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFalse() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFor() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFunction() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetterDef() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetElem() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetProp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isHook() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isIf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isIn() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isInc() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isInstanceOf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLabel() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLabelName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNE() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.151 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNew() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNot() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNull() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNumber() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isObjectLit() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOr() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isParamList() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isRegExp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isReturn() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isScript() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSetterDef() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isStringKey() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSwitch() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isThis() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isThrow() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTrue() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTry() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTypeOf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVar() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVoid() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isWhile() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isWith() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDirectives() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.152 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJsDocBuilderForNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
22:28:28.153 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
22:28:36.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
22:28:36.769 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
22:32:53.444 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 8, [com.google.javascript.jscomp.CommandLineRunnerTest::testSimpleModeLeavesUnusedParams, com.google.javascript.jscomp.CommandLineRunnerTest::testForwardDeclareDroppedTypes, com.google.javascript.jscomp.CommandLineRunnerTest::testDebugFlag1, com.google.javascript.jscomp.IntegrationTest::testIssue787, com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal1, com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal2, com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal3, com.google.javascript.jscomp.RemoveUnusedVarsTest::testIssue168b]
22:32:53.445 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.CommandLineRunnerTest::testSimpleModeLeavesUnusedParams, - com.google.javascript.jscomp.CommandLineRunnerTest::testDebugFlag1, - com.google.javascript.jscomp.CommandLineRunnerTest::testForwardDeclareDroppedTypes, - com.google.javascript.jscomp.IntegrationTest::testIssue787, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal1, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal2, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testIssue168b, - com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal3]
22:32:53.445 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testSimpleModeLeavesUnusedParams
22:32:53.445 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testDebugFlag1
22:32:53.445 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.CommandLineRunnerTest::testForwardDeclareDroppedTypes
22:32:53.445 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testIssue787
22:32:53.445 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal1
22:32:53.445 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal2
22:32:53.445 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testIssue168b
22:32:53.445 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.RemoveUnusedVarsTest::testRemoveGlobal3
22:32:53.445 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=8, fp=0, pf=0, pp=Unknown
22:32:53.445 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
