Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-35
19:35:27.675 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-35 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/35.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/35.txt
19:42:34.060 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
19:42:34.165 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-35/generalSusInfo.profl
19:42:34.325 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-35/aggregatedSusInfo.profl
19:42:34.328 [main] INFO edu.lu.uni.serval.bug.fixer.kParFixer - =======kPARFixer: Start to fix suspicious code======
19:42:34.328 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.TypeInference ===1123
19:42:35.540 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (objType != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
19:42:35.559 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (objType == null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
19:42:35.559 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((type == null || constraint == null)) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
19:42:35.559 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((constraintObj != null && constraintObj.isRecordType())) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
19:42:35.559 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((constraintObj.isRecordType())) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
19:42:35.559 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((constraint == null)) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
19:42:35.559 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((type == null)) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
19:42:35.559 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((constraintObj != null)) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
19:42:35.559 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!objType.isPropertyTypeDeclared(prop))) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
19:42:35.559 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if ((!objType.hasProperty(prop))) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
19:42:35.560 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:42:44.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
19:42:44.616 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
19:46:43.016 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
19:46:43.016 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669, - com.google.javascript.jscomp.TypeCheckTest::testRecordType1, - com.google.javascript.jscomp.TypeCheckTest::testRecordType2, - com.google.javascript.jscomp.TypeCheckTest::testRecordType3, - com.google.javascript.jscomp.TypeCheckTest::testRecordType4, - com.google.javascript.jscomp.TypeCheckTest::testRecordType5, - com.google.javascript.jscomp.TypeCheckTest::testRecordType6, - com.google.javascript.jscomp.TypeCheckTest::testRecordType7]
19:46:43.016 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
19:46:43.016 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType1
19:46:43.016 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType2
19:46:43.016 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType3
19:46:43.016 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType4
19:46:43.016 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType5
19:46:43.016 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType6
19:46:43.016 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType7
19:46:43.017 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=7, pp=Unknown
19:46:43.017 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
19:46:43.787 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-35/aggregatedSusInfo.profl
19:46:43.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeInference:inferPropertyTypesToMatchConstraint(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeInference:1123
19:46:43.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 8 Closure-35
19:46:43.787 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:46:52.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
19:46:52.419 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
19:50:49.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
19:50:49.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669, - com.google.javascript.jscomp.TypeCheckTest::testRecordType1, - com.google.javascript.jscomp.TypeCheckTest::testRecordType2, - com.google.javascript.jscomp.TypeCheckTest::testRecordType3, - com.google.javascript.jscomp.TypeCheckTest::testRecordType4, - com.google.javascript.jscomp.TypeCheckTest::testRecordType5, - com.google.javascript.jscomp.TypeCheckTest::testRecordType6, - com.google.javascript.jscomp.TypeCheckTest::testRecordType7]
19:50:49.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
19:50:49.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType1
19:50:49.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType2
19:50:49.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType3
19:50:49.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType4
19:50:49.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType5
19:50:49.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType6
19:50:49.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType7
19:50:49.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=7, pp=Unknown
19:50:49.797 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
19:51:10.826 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-35/aggregatedSusInfo.profl
19:51:10.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeInference:inferPropertyTypesToMatchConstraint(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeInference:1123
19:51:10.827 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 8 Closure-35
19:51:10.828 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:51:19.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
19:51:19.485 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
19:55:16.831 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
19:55:16.831 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669]
19:55:16.831 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
19:55:16.831 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
19:55:16.832 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
20:03:31.421 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-35/aggregatedSusInfo.profl
20:03:31.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeInference:inferPropertyTypesToMatchConstraint(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeInference:1123
20:03:31.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Closure-35
20:03:31.423 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
20:03:40.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
20:03:40.037 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
20:07:36.947 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
20:07:36.947 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669]
20:07:36.947 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
20:07:36.947 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
20:07:36.948 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
