Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-70
01:58:47.809 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 Failed Tests: 5
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/70.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/70.txt
02:02:56.087 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
02:02:56.183 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-70/generalSusInfo.profl
02:02:56.315 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-70/aggregatedSusInfo.profl
02:02:56.324 [main] INFO edu.lu.uni.serval.bug.fixer.kParFixer - =======kPARFixer: Start to fix suspicious code======
02:02:56.324 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.jscomp.TypeValidator ===553
02:02:57.231 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:02:57.685 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                );
02:02:57.686 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:01.080 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                varType);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                allowDupe);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                sourceName);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                n);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                parent);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                var);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                variableName);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                newType);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                this.compiler);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                this.typeRegistry);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                this.allValueTypes);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                this.shouldReport);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                this.nullOrUndefined);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                this.mismatches);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                FOUND_REQUIRED);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                INVALID_CAST);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                TYPE_MISMATCH_WARNING);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                MISSING_EXTENDS_TAG_WARNING);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                DUP_VAR_DECLARATION);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                HIDDEN_PROPERTY_MISMATCH);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                INTERFACE_METHOD_NOT_IMPLEMENTED);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                HIDDEN_INTERFACE_PROPERTY_MISMATCH);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                ALL_DIAGNOSTICS);
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(variableName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.135 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(FOUND_REQUIRED, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, parent, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, INVALID_CAST,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, TYPE_MISMATCH_WARNING,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, MISSING_EXTENDS_TAG_WARNING,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, HIDDEN_PROPERTY_MISMATCH,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, INTERFACE_METHOD_NOT_IMPLEMENTED,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, HIDDEN_INTERFACE_PROPERTY_MISMATCH,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    FOUND_REQUIRED, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, varType, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, allowDupe, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, sourceName, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, n, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, parent, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, var, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, variableName, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, this.compiler, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, this.typeRegistry, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, this.allValueTypes, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, this.shouldReport, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, this.nullOrUndefined, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, this.mismatches, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, FOUND_REQUIRED, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, INVALID_CAST, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, TYPE_MISMATCH_WARNING, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, MISSING_EXTENDS_TAG_WARNING, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, DUP_VAR_DECLARATION, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, HIDDEN_PROPERTY_MISMATCH, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, INTERFACE_METHOD_NOT_IMPLEMENTED, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, HIDDEN_INTERFACE_PROPERTY_MISMATCH, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, ALL_DIAGNOSTICS, var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), varType,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), allowDupe,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), sourceName,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), n,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), parent,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), variableName,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), newType,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), this.compiler,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), this.typeRegistry,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), this.allValueTypes,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), this.shouldReport,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), this.nullOrUndefined,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), this.mismatches,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), FOUND_REQUIRED,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), INVALID_CAST,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), TYPE_MISMATCH_WARNING,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), MISSING_EXTENDS_TAG_WARNING,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), DUP_VAR_DECLARATION,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), HIDDEN_PROPERTY_MISMATCH,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.136 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), INTERFACE_METHOD_NOT_IMPLEMENTED,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), HIDDEN_INTERFACE_PROPERTY_MISMATCH,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), ALL_DIAGNOSTICS,
                    String.valueOf(var.nameNode.getLineno()),
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    varType,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    allowDupe,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    sourceName,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    n,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    parent,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    var,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    variableName,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    newType,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    this.compiler,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    this.typeRegistry,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    this.allValueTypes,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    this.shouldReport,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    this.nullOrUndefined,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    this.mismatches,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    FOUND_REQUIRED,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    INVALID_CAST,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    TYPE_MISMATCH_WARNING,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    MISSING_EXTENDS_TAG_WARNING,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    DUP_VAR_DECLARATION,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    HIDDEN_PROPERTY_MISMATCH,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    INTERFACE_METHOD_NOT_IMPLEMENTED,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    HIDDEN_INTERFACE_PROPERTY_MISMATCH,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    ALL_DIAGNOSTICS,
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    varType));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    allowDupe));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    sourceName));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    n));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    parent));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    var));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    variableName));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    newType));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    this.compiler));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    this.typeRegistry));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    this.allValueTypes));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    this.shouldReport));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    this.nullOrUndefined));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    this.mismatches));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    FOUND_REQUIRED));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    INVALID_CAST));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    TYPE_MISMATCH_WARNING));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    MISSING_EXTENDS_TAG_WARNING));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    DUP_VAR_DECLARATION));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    HIDDEN_PROPERTY_MISMATCH));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    INTERFACE_METHOD_NOT_IMPLEMENTED));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    HIDDEN_INTERFACE_PROPERTY_MISMATCH));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var.nameNode.getLineno()),
                    ALL_DIAGNOSTICS));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(varType),
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(allowDupe),
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(sourceName),
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(n),
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(parent),
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(var),
                    varType.toString()));
02:03:01.137 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(variableName),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(newType),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(this.compiler),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(this.typeRegistry),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(this.allValueTypes),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(this.shouldReport),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(this.nullOrUndefined),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(this.mismatches),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(FOUND_REQUIRED),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(INVALID_CAST),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(TYPE_MISMATCH_WARNING),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(MISSING_EXTENDS_TAG_WARNING),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(DUP_VAR_DECLARATION),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(HIDDEN_PROPERTY_MISMATCH),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(INTERFACE_METHOD_NOT_IMPLEMENTED),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(HIDDEN_INTERFACE_PROPERTY_MISMATCH),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: compiler.report(
                JSError.make(sourceName, n, DUP_VAR_DECLARATION,
                    variableName, newType.toString(), var.getInputName(),
                    String.valueOf(ALL_DIAGNOSTICS),
                    varType.toString()));
02:03:01.138 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:04.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:04.474 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:07.726 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:07.727 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:11.020 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:11.021 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:14.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:14.260 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:17.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:17.513 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:20.813 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:20.814 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:24.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:24.053 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:27.344 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:27.345 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:30.629 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:30.630 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:34.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:34.030 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:37.315 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:37.316 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:40.585 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:40.586 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:43.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:43.853 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:47.096 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:47.097 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:50.360 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:50.361 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:53.645 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:53.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:03:56.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:03:56.885 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:00.125 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:04:00.126 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:03.366 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:04:03.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:06.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:04:06.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:09.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:04:09.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:13.212 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:04:13.213 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:16.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-70 ---Fixer: fix fail because of failed compiling! 
02:04:16.448 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:04:22.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:04:22.343 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:08:03.940 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 5, [com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl, com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13, com.google.javascript.jscomp.TypeCheckTest::testScoping12, com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl, com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13]
02:08:03.940 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 6, [- com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl, - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13, - com.google.javascript.jscomp.TypeCheckTest::testScoping12, - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13, - com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl, - com.google.javascript.jscomp.TypeCheckTest::testObjectLiteralDeclaration4]
02:08:03.940 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl
02:08:03.941 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13
02:08:03.941 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testScoping12
02:08:03.941 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13
02:08:03.941 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl
02:08:03.941 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testObjectLiteralDeclaration4
02:08:03.941 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=5, fp=0, pf=1, pp=Unknown
02:08:03.941 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
02:08:04.627 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-70/aggregatedSusInfo.profl
02:08:04.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeValidator:expectUndeclaredVariable(Ljava/lang/String;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/Scope$Var;Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeValidator:553
02:08:04.627 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 6 Closure-70
02:08:04.628 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:08:10.595 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:08:10.595 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:11:50.688 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 5, [com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl, com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13, com.google.javascript.jscomp.TypeCheckTest::testScoping12, com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl, com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13]
02:11:50.688 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 6, [- com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13, - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl, - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13, - com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl, - com.google.javascript.jscomp.TypeCheckTest::testObjectLiteralDeclaration4, - com.google.javascript.jscomp.TypeCheckTest::testScoping12]
02:11:50.688 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13
02:11:50.688 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl
02:11:50.688 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13
02:11:50.689 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl
02:11:50.689 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testObjectLiteralDeclaration4
02:11:50.689 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testScoping12
02:11:50.689 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=5, fp=0, pf=1, pp=Unknown
02:11:50.689 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
02:12:07.295 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-70/aggregatedSusInfo.profl
02:12:07.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeValidator:expectUndeclaredVariable(Ljava/lang/String;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/Scope$Var;Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeValidator:553
02:12:07.296 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 6 Closure-70
02:12:07.297 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:12:13.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:12:13.220 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:15:52.761 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 5, [com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl, com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13, com.google.javascript.jscomp.TypeCheckTest::testScoping12, com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl, com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13]
02:15:52.761 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 6, [- com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13, - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl, - com.google.javascript.jscomp.TypeCheckTest::testScoping12, - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13, - com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl, - com.google.javascript.jscomp.TypeCheckTest::testObjectLiteralDeclaration4]
02:15:52.761 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13
02:15:52.761 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl
02:15:52.761 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testScoping12
02:15:52.761 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13
02:15:52.761 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl
02:15:52.761 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testObjectLiteralDeclaration4
02:15:52.761 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=5, fp=0, pf=1, pp=Unknown
02:15:52.761 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
02:23:07.479 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Closure-70/aggregatedSusInfo.profl
02:23:07.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeValidator:expectUndeclaredVariable(Ljava/lang/String;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/Scope$Var;Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeValidator:553
02:23:07.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 6 Closure-70
02:23:07.480 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
02:23:13.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
02:23:13.303 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 5, [com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl, com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13, com.google.javascript.jscomp.TypeCheckTest::testScoping12, com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl, com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13]
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 28, [- com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateStaticMethodDecl1, - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateStaticMethodDecl5, - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateStaticPropertyDecl3, - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateStaticPropertyDecl4, - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateStaticPropertyDecl5, - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl, - com.google.javascript.jscomp.LooseTypeCheckTest::testTypeRedefinition, - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateOldTypeDef, - com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateTypeDef, - com.google.javascript.jscomp.LooseTypeCheckTest::testScoping3, - com.google.javascript.jscomp.LooseTypeCheckTest::testScoping4, - com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13, - com.google.javascript.jscomp.PureFunctionIdentifierTest::testAnnotationInExternStubs4, - com.google.javascript.jscomp.PureFunctionIdentifierTest::testAnnotationInExternStubs5, - com.google.javascript.jscomp.TypeCheckTest::testTypeRedefinition, - com.google.javascript.jscomp.TypeCheckTest::testScoping3, - com.google.javascript.jscomp.TypeCheckTest::testScoping4, - com.google.javascript.jscomp.TypeCheckTest::testScoping12, - com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13, - com.google.javascript.jscomp.TypeCheckTest::testDuplicateStaticMethodDecl1, - com.google.javascript.jscomp.TypeCheckTest::testDuplicateStaticMethodDecl5, - com.google.javascript.jscomp.TypeCheckTest::testDuplicateStaticPropertyDecl3, - com.google.javascript.jscomp.TypeCheckTest::testDuplicateStaticPropertyDecl4, - com.google.javascript.jscomp.TypeCheckTest::testDuplicateStaticPropertyDecl5, - com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl, - com.google.javascript.jscomp.TypeCheckTest::testObjectLiteralDeclaration4, - com.google.javascript.jscomp.TypeCheckTest::testDuplicateOldTypeDef, - com.google.javascript.jscomp.TypeCheckTest::testDuplicateTypeDef]
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateStaticMethodDecl1
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateStaticMethodDecl5
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateStaticPropertyDecl3
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateStaticPropertyDecl4
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateStaticPropertyDecl5
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateLocalVarDecl
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testTypeRedefinition
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateOldTypeDef
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testDuplicateTypeDef
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testScoping3
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testScoping4
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.LooseTypeCheckTest::testFunctionArguments13
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.PureFunctionIdentifierTest::testAnnotationInExternStubs4
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.PureFunctionIdentifierTest::testAnnotationInExternStubs5
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testTypeRedefinition
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testScoping3
02:26:53.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testScoping4
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testScoping12
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testFunctionArguments13
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testDuplicateStaticMethodDecl1
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testDuplicateStaticMethodDecl5
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testDuplicateStaticPropertyDecl3
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testDuplicateStaticPropertyDecl4
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testDuplicateStaticPropertyDecl5
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testDuplicateLocalVarDecl
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testObjectLiteralDeclaration4
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testDuplicateOldTypeDef
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testDuplicateTypeDef
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=5, fp=0, pf=23, pp=Unknown
02:26:53.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
