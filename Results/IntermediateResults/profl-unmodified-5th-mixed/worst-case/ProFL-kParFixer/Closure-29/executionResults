Setting JAVA_HOME to /home/samuel/jdk1.7.0_80

Adding /home/samuel/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-29
14:13:50.672 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-29 Failed Tests: 5
Reading method line coverage from /home/samuel/XiaInformation/AllMethods/Closure/29.txt
Reading test line coverage from /home/samuel/XiaInformation/LineCoverage/Closure/29.txt
14:22:44.959 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
14:22:45.156 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/samuel/repair-tools/kPar/ProFL-kParFixer/Closure-29/generalSusInfo.profl
14:22:45.177 [main] INFO edu.lu.uni.serval.bug.fixer.kParFixer - =======kPARFixer: Start to fix suspicious code======
14:22:45.178 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===230
14:22:46.049 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case COMMA:
14:22:46.060 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===231
14:22:46.147 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case ASSIGN:
14:22:46.148 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===219
14:22:46.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case TRUE:
14:22:46.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===278
14:22:46.294 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case VOID:
14:22:46.295 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===227
14:22:46.354 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case OBJECTLIT:
14:22:46.355 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1459
14:22:47.118 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return res;
14:22:47.119 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res != null) {
	

}

14:22:47.120 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res == null) {
    throw new IllegalArgumentException("Null 'res' argument.");
}

14:22:47.120 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res == null) {
    return null;
}

14:22:47.121 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
14:22:56.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
14:22:56.046 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
14:24:37.692 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 5, [com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10, com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12, com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22, com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724, com.google.javascript.jscomp.IntegrationTest::testIssue724]
14:24:37.692 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 5, [- com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724, - com.google.javascript.jscomp.IntegrationTest::testIssue724]
14:24:37.692 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10
14:24:37.692 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12
14:24:37.692 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22
14:24:37.692 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724
14:24:37.692 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testIssue724
14:24:37.692 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=5, fp=0, pf=0, pp=Unknown
14:24:37.693 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
14:24:38.050 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/samuel/repair-tools/kPar/ProFL-kParFixer/Closure-29/aggregatedSusInfo.profl
14:24:38.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1459
14:24:38.050 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 5 Closure-29
14:24:38.051 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
14:24:47.085 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
14:24:47.086 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
14:26:27.815 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 5, [com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10, com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12, com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22, com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724, com.google.javascript.jscomp.IntegrationTest::testIssue724]
14:26:27.815 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 5, [- com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724, - com.google.javascript.jscomp.IntegrationTest::testIssue724]
14:26:27.815 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10
14:26:27.815 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12
14:26:27.815 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22
14:26:27.815 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724
14:26:27.815 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testIssue724
14:26:27.815 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=5, fp=0, pf=0, pp=Unknown
14:26:27.815 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
14:26:30.253 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/samuel/repair-tools/kPar/ProFL-kParFixer/Closure-29/aggregatedSusInfo.profl
14:26:30.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1459
14:26:30.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 5 Closure-29
14:26:30.255 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
14:26:39.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
14:26:39.145 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
14:28:15.981 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 5, [com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10, com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12, com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22, com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724, com.google.javascript.jscomp.IntegrationTest::testIssue724]
14:28:15.981 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 5, [- com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724, - com.google.javascript.jscomp.IntegrationTest::testIssue724]
14:28:15.981 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10
14:28:15.981 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12
14:28:15.981 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22
14:28:15.981 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724
14:28:15.981 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testIssue724
14:28:15.981 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=5, fp=0, pf=0, pp=Unknown
14:28:15.981 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
14:29:37.653 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/samuel/repair-tools/kPar/ProFL-kParFixer/Closure-29/aggregatedSusInfo.profl
14:29:37.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1459
14:29:37.653 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 5 Closure-29
14:29:37.654 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1430
14:29:37.790 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.042 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getAncestors() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.042 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.042 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.042 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLength() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLineno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getCharno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourceOffset() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourcePosition() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getChildCount() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSideEffectFlags() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSortedPropTypes() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getPropListHeadForTesting() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.setQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDouble() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getStaticSourceFile() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getInputId() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.children() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.siblings() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSDocInfo() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getNext() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastSibling() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachFromParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTreeImpl() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourceFileName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFromExterns() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasMoreThanOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.043 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isUnscopedQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVarArgs() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOptionalArg() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSyntheticBlock() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.wasEmptyNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOnlyModifiesThisCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNoSideEffectsCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLocalResultCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAdd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAnd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isArrayLit() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAssign() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAssignAdd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isBlock() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isBreak() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCase() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCatch() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isComma() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isContinue() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDebugger() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDec() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDefaultCase() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDelProp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDo() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isEmpty() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isExprResult() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFalse() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFor() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFunction() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetterDef() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetElem() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.044 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetProp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isHook() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isIf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isIn() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isInc() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isInstanceOf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLabel() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLabelName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNE() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNew() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNot() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNull() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNumber() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isObjectLit() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOr() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isParamList() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isRegExp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isReturn() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isScript() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSetterDef() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isStringKey() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSwitch() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isThis() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isThrow() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTrue() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTry() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTypeOf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVar() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVoid() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isWhile() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isWith() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.045 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDirectives() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.046 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJsDocBuilderForNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
14:29:38.047 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
14:29:46.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
14:29:46.574 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
14:31:24.465 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 5, [com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10, com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12, com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22, com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724, com.google.javascript.jscomp.IntegrationTest::testIssue724]
14:31:24.465 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 5, [- com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724, - com.google.javascript.jscomp.IntegrationTest::testIssue724]
14:31:24.465 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10
14:31:24.465 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12
14:31:24.466 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22
14:31:24.466 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724
14:31:24.466 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testIssue724
14:31:24.466 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=5, fp=0, pf=0, pp=Unknown
14:31:24.466 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
15:25:49.578 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/samuel/repair-tools/kPar/ProFL-kParFixer/Closure-29/aggregatedSusInfo.profl
15:25:49.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String; in com.google.javascript.rhino.Node:1430
15:25:49.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 5 Closure-29
15:25:49.580 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
15:25:58.083 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
15:25:58.084 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
15:27:32.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 5, [com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10, com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12, com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22, com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724, com.google.javascript.jscomp.IntegrationTest::testIssue724]
15:27:32.468 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 5, [- com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22, - com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724, - com.google.javascript.jscomp.IntegrationTest::testIssue724]
15:27:32.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject10
15:27:32.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject12
15:27:32.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testObject22
15:27:32.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testIssue724
15:27:32.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.IntegrationTest::testIssue724
15:27:32.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=5, fp=0, pf=0, pp=Unknown
15:27:32.469 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
