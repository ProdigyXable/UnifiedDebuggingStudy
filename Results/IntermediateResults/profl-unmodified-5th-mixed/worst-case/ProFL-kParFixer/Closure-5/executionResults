Setting JAVA_HOME to /home/samuel/jdk1.7.0_80

Adding /home/samuel/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-5
16:32:58.741 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Closure-5 Failed Tests: 1
Reading method line coverage from /home/samuel/XiaInformation/AllMethods/Closure/5.txt
Reading test line coverage from /home/samuel/XiaInformation/LineCoverage/Closure/5.txt
16:37:24.738 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
16:37:24.830 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/samuel/repair-tools/kPar/ProFL-kParFixer/Closure-5/generalSusInfo.profl
16:37:24.855 [main] INFO edu.lu.uni.serval.bug.fixer.kParFixer - =======kPARFixer: Start to fix suspicious code======
16:37:24.855 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===207
16:37:25.691 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case DELPROP:
16:37:25.701 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===216
16:37:25.797 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case STRING_KEY:
16:37:25.799 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Token ===228
16:37:25.899 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
case OBJECTLIT:
16:37:25.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1440
16:37:26.655 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return res;
16:37:26.656 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res != null) {
	

}

16:37:26.657 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res == null) {
    throw new IllegalArgumentException("Null 'res' argument.");
}

16:37:26.657 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (res == null) {
    return null;
}

16:37:26.658 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:37:36.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
16:37:36.034 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
16:39:38.009 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties]
16:39:38.009 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties]
16:39:38.009 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties
16:39:38.009 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
16:39:38.009 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
16:39:38.128 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/samuel/repair-tools/kPar/ProFL-kParFixer/Closure-5/aggregatedSusInfo.profl
16:39:38.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1440
16:39:38.128 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Closure-5
16:39:38.129 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:39:47.264 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
16:39:47.265 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
16:41:48.937 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties]
16:41:48.937 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties]
16:41:48.937 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties
16:41:48.937 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
16:41:48.937 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
16:41:49.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/samuel/repair-tools/kPar/ProFL-kParFixer/Closure-5/aggregatedSusInfo.profl
16:41:49.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1440
16:41:49.635 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Closure-5
16:41:49.636 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:41:58.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
16:41:58.590 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
16:43:58.845 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties]
16:43:58.845 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties]
16:43:58.846 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties
16:43:58.846 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
16:43:58.846 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
16:44:10.660 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/samuel/repair-tools/kPar/ProFL-kParFixer/Closure-5/aggregatedSusInfo.profl
16:44:10.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch; in com.google.javascript.rhino.Node:1440
16:44:10.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Closure-5
16:44:10.661 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - com.google.javascript.rhino.Node ===1411
16:44:10.934 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.452 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getAncestors() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.452 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.452 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getType() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.452 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLength() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.452 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLineno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getCharno() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourceOffset() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourcePosition() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getChildCount() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSideEffectFlags() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSortedPropTypes() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getPropListHeadForTesting() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.setQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDouble() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getStaticSourceFile() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getInputId() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.children() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.siblings() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJSDocInfo() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getNext() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getLastSibling() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.detachFromParent() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeFirstChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.removeChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.cloneTree() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.toStringTreeImpl() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getSourceFileName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasChildren() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFromExterns() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.hasMoreThanOneChild() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.453 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isUnscopedQualifiedName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVarArgs() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOptionalArg() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSyntheticBlock() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.wasEmptyNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOnlyModifiesThisCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNoSideEffectsCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLocalResultCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isQuotedString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAdd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAnd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isArrayLit() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAssign() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isAssignAdd() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isBlock() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isBreak() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCall() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCase() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCast() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isCatch() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isComma() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isContinue() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDebugger() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDec() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDefaultCase() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDelProp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isDo() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isEmpty() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isExprResult() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFalse() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFor() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isFunction() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.454 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetterDef() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetElem() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isGetProp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isHook() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isIf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isIn() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isInc() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isInstanceOf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLabel() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isLabelName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isName() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNE() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNew() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNot() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNull() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isNumber() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isObjectLit() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isOr() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isParamList() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isRegExp() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isReturn() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isScript() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSetterDef() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isString() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isStringKey() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isSwitch() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isThis() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isThrow() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTrue() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTry() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isTypeOf() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVar() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.455 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isVoid() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.456 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isWhile() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.456 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.isWith() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.456 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getDirectives() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.456 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: return "Node tree inequality:" +
            "\nTree1:\n" + toStringTree() +
            "\n\nTree2:\n" + node2.getJsDocBuilderForNode() +
            "\n\nSubtree1: " + diff.nodeA.toStringTree() +
            "\n\nSubtree2: " + diff.nodeB.toStringTree();
16:44:11.457 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:44:20.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
16:44:20.388 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
16:46:21.739 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties]
16:46:21.740 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties]
16:46:21.740 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties
16:46:21.740 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
16:46:21.740 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
16:54:21.402 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/samuel/repair-tools/kPar/ProFL-kParFixer/Closure-5/aggregatedSusInfo.profl
16:54:21.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String; in com.google.javascript.rhino.Node:1411
16:54:21.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Closure-5
16:54:21.403 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
16:54:30.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
16:54:30.254 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
16:56:25.408 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties]
16:56:25.408 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties]
16:56:25.409 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties
16:56:25.409 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
16:56:25.409 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
20:37:06.535 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/samuel/repair-tools/kPar/ProFL-kParFixer/Closure-5/aggregatedSusInfo.profl
20:37:06.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = com.google.javascript.rhino.Node:checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String; in com.google.javascript.rhino.Node:1411
20:37:06.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Closure-5
20:37:06.536 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
20:37:15.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
20:37:15.467 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
20:39:16.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties]
20:39:16.634 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties]
20:39:16.635 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.InlineObjectLiteralsTest::testNoInlineDeletedProperties
20:39:16.635 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
20:39:16.635 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
