Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Math-62
18:56:51.898 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Math/62.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Math/62.txt
18:56:57.872 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - ProFL successfully initialized
18:56:57.897 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Math-62/generalSusInfo.profl
18:56:57.900 [main] INFO edu.lu.uni.serval.bug.fixer.kParFixer - =======kPARFixer: Start to fix suspicious code======
18:56:57.900 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer ===205
18:56:59.195 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
/**
     * Sort the optima from best to worst, followed by {@code null} elements.
     *
     * @param goal Goal type.
     */
    private void sortPairs(final GoalType goal) {
        Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
    }
18:56:59.210 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer ===191
18:56:59.325 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
18:56:59.329 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                goal
            });
18:56:59.330 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                this.optimizer
            });
18:56:59.330 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                this.maxEvaluations
            });
18:56:59.330 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                this.totalEvaluations
            });
18:56:59.330 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                this.starts
            });
18:56:59.330 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                this.generator
            });
18:56:59.330 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                this.optima
            });
18:56:59.330 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, goal);
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, this.optimizer);
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, this.maxEvaluations);
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, this.totalEvaluations);
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, this.starts);
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, this.generator);
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, this.optima);
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(goal, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(this.optimizer, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(this.maxEvaluations, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(this.totalEvaluations, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(this.starts, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(this.generator, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
18:56:59.331 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(this.optima, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
18:56:59.332 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:00.076 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:00.077 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:00.937 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:00.938 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:01.607 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:01.608 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:02.269 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:02.270 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:02.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:02.909 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:03.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:03.656 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:04.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:04.285 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:05.632 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:05.633 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:07.026 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:07.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:08.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:08.301 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:09.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:09.530 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:10.985 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:10.986 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:12.224 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:12.225 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:13.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:13.526 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:14.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:14.725 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:16.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:16.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:17.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:17.402 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:18.805 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:18.806 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:20.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:20.471 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:21.808 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
18:57:21.809 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:57:23.413 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
18:57:23.414 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
18:58:12.103 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
18:58:12.103 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
18:58:12.104 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin
18:58:12.104 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
18:58:12.104 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
18:58:12.114 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Math-62/aggregatedSusInfo.profl
18:58:12.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:sortPairs(Lorg/apache/commons/math/optimization/GoalType;)V in org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:191
18:58:12.114 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-62
18:58:12.116 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (optima != null) {
	

}

18:58:12.116 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (optima == null) {
    throw new IllegalArgumentException("Null 'optima' argument.");
}

18:58:12.116 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (optima == null) {
    return;
}

18:58:12.116 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:58:13.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
18:58:13.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
18:59:01.321 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
18:59:01.321 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
18:59:01.321 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin
18:59:01.321 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
18:59:01.321 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
18:59:01.435 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Math-62/aggregatedSusInfo.profl
18:59:01.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:sortPairs(Lorg/apache/commons/math/optimization/GoalType;)V in org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:191
18:59:01.437 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-62
18:59:01.438 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:59:02.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
18:59:02.700 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
18:59:42.608 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
18:59:42.608 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
18:59:42.608 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin
18:59:42.609 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
18:59:42.609 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
18:59:42.646 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Math-62/aggregatedSusInfo.profl
18:59:42.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:sortPairs(Lorg/apache/commons/math/optimization/GoalType;)V in org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:191
18:59:42.646 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-62
18:59:42.647 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
18:59:43.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
18:59:43.660 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
19:00:18.951 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
19:00:18.951 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
19:00:18.952 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin
19:00:18.952 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
19:00:18.952 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
19:00:19.889 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Math-62/aggregatedSusInfo.profl
19:00:19.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:sortPairs(Lorg/apache/commons/math/optimization/GoalType;)V in org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:191
19:00:19.890 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-62
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                goal
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                this.optimizer
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                this.maxEvaluations
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                this.totalEvaluations
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                this.starts
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                this.generator
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {
                this.optima
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, goal);
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, this.optimizer);
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, this.maxEvaluations);
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, this.totalEvaluations);
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, this.starts);
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, this.generator);
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(optima, this.optima);
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(goal, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(this.optimizer, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(this.maxEvaluations, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(this.totalEvaluations, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(this.starts, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(this.generator, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
19:00:19.892 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: Arrays.sort(this.optima, new Comparator<UnivariateRealPointValuePair>() {
                public int compare(final UnivariateRealPointValuePair o1,
                                   final UnivariateRealPointValuePair o2) {
                    if (o1 == null) {
                        return (o2 == null) ? 0 : 1;
                    } else if (o2 == null) {
                        return -1;
                    }
                    final double v1 = o1.getValue();
                    final double v2 = o2.getValue();
                    return (goal == GoalType.MINIMIZE) ?
                        Double.compare(v1, v2) : Double.compare(v2, v1);
                }
            });
19:00:19.893 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:20.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:20.425 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:20.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:20.943 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:21.534 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:21.535 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:21.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:21.989 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:22.522 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:22.523 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:23.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:23.042 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:23.496 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:23.497 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:24.490 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:24.493 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:25.563 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:25.564 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:26.499 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:26.500 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:27.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:27.473 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:28.578 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:28.579 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:29.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:29.544 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:30.613 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:30.614 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:31.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:31.705 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:32.763 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:32.764 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:33.905 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:33.906 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:35.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:35.028 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:36.038 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:36.039 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:37.130 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:00:37.131 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:00:38.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
19:00:38.244 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
19:01:12.909 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
19:01:12.909 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
19:01:12.909 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin
19:01:12.910 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
19:01:12.910 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
19:01:25.334 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Math-62/aggregatedSusInfo.profl
19:01:25.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:sortPairs(Lorg/apache/commons/math/optimization/GoalType;)V in org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:191
19:01:25.335 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-62
19:01:25.336 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer ===182
19:01:25.422 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
return optima[0];
19:01:25.423 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (optima.length() <= 0) {
	

}

19:01:25.424 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:01:26.482 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:01:26.483 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (optima != null) {
	

}

19:01:26.483 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (optima == null) {
    throw new IllegalArgumentException("Null 'optima' argument.");
}

19:01:26.483 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (optima == null) {
    return null;
}

19:01:26.483 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:01:27.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Math-62 ---Fixer: fix fail because of failed compiling! 
19:01:27.350 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:01:28.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
19:01:28.367 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
19:02:09.101 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
19:02:09.102 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
19:02:09.102 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin
19:02:09.102 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
19:02:09.105 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
19:05:20.033 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Math-62/aggregatedSusInfo.profl
19:05:20.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDD)Lorg/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair; in org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:182
19:05:20.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-62
19:05:20.033 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:05:21.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
19:05:21.063 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
19:05:50.592 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
19:05:50.592 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 1, [- org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
19:05:50.593 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin
19:05:50.593 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
19:05:50.593 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NoneFix found
19:55:57.919 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/kPar/ProFL-kParFixer/Math-62/aggregatedSusInfo.profl
19:55:57.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Mutated = org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDD)Lorg/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair; in org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:182
19:55:57.919 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed Tests after fixing: 1 Math-62
19:55:57.920 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer ===176
19:55:57.977 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Suspicious Code: 
if (optima[0] == null) {
            throw new ConvergenceException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,
                                           starts);
        }
19:55:57.981 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (optima[0] != null) {
            throw new ConvergenceException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,
                                           starts);
        }
19:55:57.981 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (((i == 0))) {
            throw new ConvergenceException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,
                                           starts);
        }
19:55:57.981 [main] DEBUG edu.lu.uni.serval.par.templates.FixTemplate - Patch Candiate: if (((i == 0))) {
            throw new ConvergenceException(LocalizedFormats.NO_CONVERGENCE_WITH_ANY_START_POINT,
                                           starts);
        }
19:55:57.981 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Compiling
19:55:59.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Finish of compiling.
19:55:59.027 [main] DEBUG edu.lu.uni.serval.bug.fixer.AbstractFixer - Test previously failed test cases.
19:56:31.244 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin]
19:56:31.245 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Failed tests AFTER patch = 2, [- org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin, - org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testSinMin]
19:56:31.245 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Fail->Fail test case ->org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testQuinticMin
19:56:31.245 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Pass->Fail test case ->org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest::testSinMin
19:56:31.245 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - Patch test results ff=1, fp=0, pf=1, pp=Unknown
19:56:31.245 [main] INFO edu.lu.uni.serval.bug.fixer.AbstractFixer - [ProFL] NegFix found
