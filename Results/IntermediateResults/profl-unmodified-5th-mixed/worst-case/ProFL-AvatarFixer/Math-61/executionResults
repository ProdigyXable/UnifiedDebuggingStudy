Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Math-61
18:57:34.594 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Math-61 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Math/61.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Math/61.txt
18:57:39.161 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - ProFL successfully initialized
18:57:39.180 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Math-61/generalSusInfo.profl
Cannot find the suspicious code position file.SuspiciousCodePositions/Math-61/ochiai.txt
18:57:39.181 [main] INFO edu.lu.uni.serval.avatar.Avatar - =======StaticBugFixer: Start to fix suspicious code======
18:57:39.181 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - org.apache.commons.math.MathRuntimeException ===39
18:57:40.398 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Suspicious Code: 
public class MathRuntimeException extends RuntimeException {

    /** Serializable version identifier. */
    private static final long serialVersionUID = 9058794795027570002L;

    /**
     * Pattern used to build the message.
     */
    private final Localizable pattern;

    /**
     * Arguments used to build the message.
     */
    private final Object[] arguments;

    /**
     * Constructs a new <code>MathRuntimeException</code> with specified
     * formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @deprecated as of 2.2 replaced by {@link #MathRuntimeException(Localizable, Object...)}
     */
    @Deprecated
    public MathRuntimeException(final String pattern, final Object ... arguments) {
        this(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>MathRuntimeException</code> with specified
     * formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @since 2.2
     */
    public MathRuntimeException(final Localizable pattern, final Object ... arguments) {
        this.pattern   = pattern;
        this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
    }

    /**
     * Constructs a new <code>MathRuntimeException</code> with specified
     * nested <code>Throwable</code> root cause.
     *
     * @param rootCause  the exception or error that caused this exception
     *                   to be thrown.
     */
    public MathRuntimeException(final Throwable rootCause) {
        super(rootCause);
        this.pattern   = LocalizedFormats.SIMPLE_MESSAGE;
        this.arguments = new Object[] { (rootCause == null) ? "" : rootCause.getMessage() };
    }

    /**
     * Constructs a new <code>MathRuntimeException</code> with specified
     * formatted detail message and nested <code>Throwable</code> root cause.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param rootCause the exception or error that caused this exception
     * to be thrown.
     * @param pattern format specifier
     * @param arguments format arguments
     * @deprecated as of 2.2 replaced by {@link #MathRuntimeException(Throwable, Localizable, Object...)}
     */
    @Deprecated
    public MathRuntimeException(final Throwable rootCause,
                                final String pattern, final Object ... arguments) {
        this(rootCause, new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>MathRuntimeException</code> with specified
     * formatted detail message and nested <code>Throwable</code> root cause.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param rootCause the exception or error that caused this exception
     * to be thrown.
     * @param pattern format specifier
     * @param arguments format arguments
     * @since 2.2
     */
    public MathRuntimeException(final Throwable rootCause,
                                final Localizable pattern, final Object ... arguments) {
        super(rootCause);
        this.pattern   = pattern;
        this.arguments = (arguments == null) ? new Object[0] : arguments.clone();
    }

    /**
     * Builds a message string by from a pattern and its arguments.
     * @param locale Locale in which the message should be translated
     * @param pattern format specifier
     * @param arguments format arguments
     * @return a message string
     * @since 2.2
     */
    private static String buildMessage(final Locale locale, final Localizable pattern,
                                       final Object ... arguments) {
        return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);
    }

    /** Gets the pattern used to build the message of this throwable.
    *
    * @return the pattern used to build the message of this throwable
    * @deprecated as of 2.2 replaced by {@link #getLocalizablePattern()}
    */
    @Deprecated
    public String getPattern() {
        return pattern.getSourceString();
    }

    /** Gets the localizable pattern used to build the message of this throwable.
     *
     * @return the localizable pattern used to build the message of this throwable
     * @since 2.2
     */
    public Localizable getLocalizablePattern() {
        return pattern;
    }

    /** Gets the arguments used to build the message of this throwable.
     *
     * @return the arguments used to build the message of this throwable
     */
    public Object[] getArguments() {
        return arguments.clone();
    }

    /** Gets the message in a specified locale.
     *
     * @param locale Locale in which the message should be translated
     *
     * @return localized message
     */
    public String getMessage(final Locale locale) {
        if (pattern != null) {
            return buildMessage(locale, pattern, arguments);
        }
        return "";
    }

    /** {@inheritDoc} */
    @Override
    public String getMessage() {
        return getMessage(Locale.US);
    }

    /** {@inheritDoc} */
    @Override
    public String getLocalizedMessage() {
        return getMessage(Locale.getDefault());
    }

    /**
     * Prints the stack trace of this exception to the standard error stream.
     */
    @Override
    public void printStackTrace() {
        printStackTrace(System.err);
    }

    /**
     * Prints the stack trace of this exception to the specified stream.
     *
     * @param out  the <code>PrintStream</code> to use for output
     */
    @Override
    public void printStackTrace(final PrintStream out) {
        synchronized (out) {
            PrintWriter pw = new PrintWriter(out, false);
            printStackTrace(pw);
            // Flush the PrintWriter before it's GC'ed.
            pw.flush();
        }
    }

    /**
     * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createArithmeticException(Localizable, Object...)}
     */
    @Deprecated
    public static ArithmeticException createArithmeticException(final String pattern,
                                                                final Object ... arguments) {
        return createArithmeticException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>ArithmeticException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static ArithmeticException createArithmeticException(final Localizable pattern,
                                                                final Object ... arguments) {
        return new ArithmeticException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 5305498554076846637L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>ArrayIndexOutOfBoundsException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createArrayIndexOutOfBoundsException(Localizable, Object...)}
     */
    @Deprecated
    public static ArrayIndexOutOfBoundsException createArrayIndexOutOfBoundsException(final String pattern,
                                                                                      final Object ... arguments) {
        return createArrayIndexOutOfBoundsException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>ArrayIndexOutOfBoundsException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static ArrayIndexOutOfBoundsException createArrayIndexOutOfBoundsException(final Localizable pattern,
                                                                                      final Object ... arguments) {
        return new ArrayIndexOutOfBoundsException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 6718518191249632175L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>EOFException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createEOFException(Localizable, Object...)}
     */
    @Deprecated
    public static EOFException createEOFException(final String pattern,
                                                  final Object ... arguments) {
        return createEOFException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>EOFException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static EOFException createEOFException(final Localizable pattern,
                                                  final Object ... arguments) {
        return new EOFException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 6067985859347601503L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>IOException</code> with specified nested
     * <code>Throwable</code> root cause.
     * <p>This factory method allows chaining of other exceptions within an
     * <code>IOException</code> even for Java 5. The constructor for
     * <code>IOException</code> with a cause parameter was introduced only
     * with Java 6.</p>
     * @param rootCause the exception or error that caused this exception
     * to be thrown.
     * @return built exception
     */
    public static IOException createIOException(final Throwable rootCause) {
        IOException ioe = new IOException(rootCause.getLocalizedMessage());
        ioe.initCause(rootCause);
        return ioe;
    }

    /**
     * Constructs a new <code>IllegalArgumentException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createIllegalArgumentException(Localizable, Object...)}
     */
    @Deprecated
    public static IllegalArgumentException createIllegalArgumentException(final String pattern,
                                                                          final Object ... arguments) {
        return createIllegalArgumentException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>IllegalArgumentException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static IllegalArgumentException createIllegalArgumentException(final Localizable pattern,
                                                                          final Object ... arguments) {
        return new IllegalArgumentException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = -4284649691002411505L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>IllegalArgumentException</code> with specified nested
     * <code>Throwable</code> root cause.
     * @param rootCause the exception or error that caused this exception
     * to be thrown.
     * @return built exception
     */
    public static IllegalArgumentException createIllegalArgumentException(final Throwable rootCause) {
        IllegalArgumentException iae = new IllegalArgumentException(rootCause.getLocalizedMessage());
        iae.initCause(rootCause);
        return iae;
    }

    /**
     * Constructs a new <code>IllegalStateException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createIllegalStateException(Localizable, Object...)}
     */
    @Deprecated
    public static IllegalStateException createIllegalStateException(final String pattern,
                                                                    final Object ... arguments) {
        return createIllegalStateException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>IllegalStateException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static IllegalStateException createIllegalStateException(final Localizable pattern,
                                                                    final Object ... arguments) {
        return new IllegalStateException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 6880901520234515725L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>ConcurrentModificationException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createConcurrentModificationException(Localizable, Object...)}
     */
    @Deprecated
    public static ConcurrentModificationException createConcurrentModificationException(final String pattern,
                                                                                        final Object ... arguments) {
        return createConcurrentModificationException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>ConcurrentModificationException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static ConcurrentModificationException createConcurrentModificationException(final Localizable pattern,
                                                                                        final Object ... arguments) {
        return new ConcurrentModificationException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = -1878427236170442052L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>NoSuchElementException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createNoSuchElementException(Localizable, Object...)}
     */
    @Deprecated
    public static NoSuchElementException createNoSuchElementException(final String pattern,
                                                                      final Object ... arguments) {
        return createNoSuchElementException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>NoSuchElementException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static NoSuchElementException createNoSuchElementException(final Localizable pattern,
                                                                      final Object ... arguments) {
        return new NoSuchElementException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 1632410088350355086L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>UnsupportedOperationException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     * @deprecated in 2.2. Please use {@link org.apache.commons.math.exception.MathUnsupportedOperationException}
     * instead.
     */
    public static UnsupportedOperationException createUnsupportedOperationException(final Localizable pattern,
                                                                                    final Object ... arguments) {
        return new UnsupportedOperationException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = -4284649691002411505L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /**
     * Constructs a new <code>NullPointerException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createNullPointerException(Localizable, Object...)}
     */
    @Deprecated
    public static NullPointerException createNullPointerException(final String pattern,
                                                                  final Object ... arguments) {
        return createNullPointerException(new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>NullPointerException</code> with specified formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     * @deprecated in 2.2. Checks for "null" must not be performed in Commons-Math.
     */
    public static NullPointerException createNullPointerException(final Localizable pattern,
                                                                  final Object ... arguments) {
        return new NullPointerException() {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 451965530686593945L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

   /**
     * Constructs a new <code>ParseException</code> with specified
     * formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param offset offset at which error occurred
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @deprecated as of 2.2 replaced by {@link #createParseException(int, Localizable, Object...)}
     */
    @Deprecated
    public static ParseException createParseException(final int offset,
                                                      final String pattern,
                                                      final Object ... arguments) {
        return createParseException(offset, new DummyLocalizable(pattern), arguments);
    }

    /**
     * Constructs a new <code>ParseException</code> with specified
     * formatted detail message.
     * Message formatting is delegated to {@link java.text.MessageFormat}.
     * @param offset offset at which error occurred
     * @param pattern format specifier
     * @param arguments format arguments
     * @return built exception
     * @since 2.2
     */
    public static ParseException createParseException(final int offset,
                                                      final Localizable pattern,
                                                      final Object ... arguments) {
        return new ParseException(null, offset) {

            /** Serializable version identifier. */
            private static final long serialVersionUID = 8153587599409010120L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, pattern, arguments);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), pattern, arguments);
            }

        };
    }

    /** Create an {@link java.lang.RuntimeException} for an internal error.
     * @param cause underlying cause
     * @return an {@link java.lang.RuntimeException} for an internal error
     */
    public static RuntimeException createInternalError(final Throwable cause) {

        final String argument = "https://issues.apache.org/jira/browse/MATH";

        return new RuntimeException(cause) {

            /** Serializable version identifier. */
            private static final long serialVersionUID = -201865440834027016L;

            /** {@inheritDoc} */
            @Override
            public String getMessage() {
                return buildMessage(Locale.US, LocalizedFormats.INTERNAL_ERROR, argument);
            }

            /** {@inheritDoc} */
            @Override
            public String getLocalizedMessage() {
                return buildMessage(Locale.getDefault(), LocalizedFormats.INTERNAL_ERROR, argument);
            }

        };

    }

}
18:57:40.405 [main] DEBUG edu.lu.uni.serval.avatar.Avatar - --- Attempting to mutate org/apache/commons/math/MathRuntimeException.java:39 ---
18:57:40.414 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate:     public boolean equals(Object obj) {
        if (obj == null) return false;
        if (obj == this) return true;
        if (!(obj instanceof MathRuntimeException)) return false;
        MathRuntimeException _var = (MathRuntimeException) obj;
        return super.equals(obj);
    }
---------------- Testing New Patch ----------------
18:57:40.415 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:41.015 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
18:57:41.018 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - org.apache.commons.math.MathRuntimeException ===136
18:57:41.219 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Suspicious Code: 
return new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);
18:57:41.220 [main] DEBUG edu.lu.uni.serval.avatar.Avatar - --- Attempting to mutate org/apache/commons/math/MathRuntimeException.java:136 ---
18:57:41.221 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(locale.getLocalizedString(locale), locale).format(arguments);
18:57:41.221 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(arguments.getLocalizedString(locale), locale).format(arguments);
18:57:41.221 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(serialVersionUID.getLocalizedString(locale), locale).format(arguments);
18:57:41.221 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(this.arguments.getLocalizedString(locale), locale).format(arguments);
18:57:41.221 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(pattern), locale).format(arguments);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(arguments), locale).format(arguments);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(serialVersionUID), locale).format(arguments);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(this.pattern), locale).format(arguments);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(this.arguments), locale).format(arguments);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), pattern).format(arguments);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), arguments).format(arguments);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), serialVersionUID).format(arguments);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), this.pattern).format(arguments);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), this.arguments).format(arguments);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(locale);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(pattern);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(serialVersionUID);
18:57:41.222 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(this.pattern);
---------------- Testing New Patch ----------------
18:57:41.224 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:42.674 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:42.675 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:44.100 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:44.101 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:45.405 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:45.406 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:46.825 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:46.826 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:48.228 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:48.229 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:49.538 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:49.538 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:50.851 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:50.851 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:52.080 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:52.080 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:53.364 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:53.365 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:54.549 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:54.550 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:55.826 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:55.826 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:57.155 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:57.156 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:57:58.677 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:57:58.677 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:00.226 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:00.226 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:01.842 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
18:58:01.843 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
18:58:12.306 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 1, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
18:58:12.307 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 0, []
18:58:12.307 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=0, fp=1, pf=0, pp=Unknown
18:58:12.307 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] CleanFix found
18:58:12.310 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Math-61/aggregatedSusInfo.profl
18:58:12.310 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
18:58:12.310 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Succeeded to fix the bug Math-61====================
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(locale.getLocalizedString(locale), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(arguments.getLocalizedString(locale), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(serialVersionUID.getLocalizedString(locale), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(this.arguments.getLocalizedString(locale), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(locale.getLocalizedString(locale), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(arguments.getLocalizedString(locale), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(serialVersionUID.getLocalizedString(locale), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(this.arguments.getLocalizedString(locale), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(pattern), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(arguments), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(serialVersionUID), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(this.pattern), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(this.arguments), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(pattern), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(arguments), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(serialVersionUID), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(this.pattern), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(this.arguments), locale).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), pattern).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), arguments).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), serialVersionUID).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), this.pattern).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), this.arguments).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), pattern).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), arguments).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), serialVersionUID).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), this.pattern).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), this.arguments).format(arguments);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(locale);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(pattern);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(serialVersionUID);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(this.pattern);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(locale);
18:58:12.498 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(pattern);
18:58:12.499 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(serialVersionUID);
18:58:12.499 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: return new MessageFormat(pattern.getLocalizedString(locale), locale).format(this.pattern);
---------------- Testing New Patch ----------------
18:58:12.499 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:13.582 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:13.582 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:14.743 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:14.744 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:15.840 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:15.840 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:16.980 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:16.980 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:18.208 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:18.208 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:19.477 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:19.478 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:20.843 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:20.843 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:22.413 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:22.414 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:24.170 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:24.171 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:25.739 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:25.740 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:27.096 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:27.097 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:28.356 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:28.356 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:29.432 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:29.433 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:30.542 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:58:30.543 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:31.688 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
18:58:31.688 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
18:58:40.939 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 0, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
18:58:40.940 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 0, []
18:58:40.940 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=0, fp=1, pf=0, pp=Unknown
18:58:40.940 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] CleanFix found
18:58:40.951 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Math-61/aggregatedSusInfo.profl
18:58:40.951 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
18:58:40.951 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Failed Tests after fixing: 0 Math-61
---------------- Testing New Patch ----------------
18:58:40.952 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:42.778 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
18:58:42.778 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
18:58:51.934 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 0, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
18:58:51.934 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 0, []
18:58:51.934 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=0, fp=1, pf=0, pp=Unknown
18:58:51.934 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] CleanFix found
18:58:51.939 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Math-61/aggregatedSusInfo.profl
18:58:51.939 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
18:58:51.939 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Failed Tests after fixing: 0 Math-61
---------------- Testing New Patch ----------------
18:58:51.940 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:58:53.232 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
18:58:53.232 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
18:59:02.126 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 0, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
18:59:02.126 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 0, []
18:59:02.126 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=0, fp=1, pf=0, pp=Unknown
18:59:02.126 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] CleanFix found
18:59:02.179 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Math-61/aggregatedSusInfo.profl
18:59:02.179 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
18:59:02.179 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Failed Tests after fixing: 0 Math-61
---------------- Testing New Patch ----------------
18:59:02.179 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:03.411 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:03.412 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:04.607 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:04.608 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:05.866 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:05.866 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:07.117 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:07.117 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:08.190 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:08.190 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:09.245 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:09.245 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:10.290 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:10.291 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:11.321 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:11.322 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:12.361 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:12.362 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:13.329 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:13.330 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:14.328 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:14.328 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:15.415 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:15.416 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:16.415 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:16.416 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:17.481 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:17.482 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:18.515 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:18.516 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:19.568 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:19.568 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:20.674 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:20.675 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:21.755 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:21.755 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:22.872 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:22.872 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:24.056 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:24.056 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:25.206 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:25.207 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:26.332 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:26.333 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:27.367 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:27.368 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:28.557 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:28.558 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:29.518 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:29.518 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:30.653 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:30.654 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:31.813 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:31.813 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:32.913 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:32.914 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:34.002 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
18:59:34.002 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:35.122 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
18:59:35.122 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
18:59:43.438 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 0, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
18:59:43.438 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 0, []
18:59:43.438 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=0, fp=1, pf=0, pp=Unknown
18:59:43.438 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] CleanFix found
18:59:43.951 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Math-61/aggregatedSusInfo.profl
18:59:43.951 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
18:59:43.951 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Failed Tests after fixing: 0 Math-61
---------------- Testing New Patch ----------------
18:59:43.952 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
18:59:45.060 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
18:59:45.061 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
18:59:53.355 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 0, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
18:59:53.355 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 0, []
18:59:53.355 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=0, fp=1, pf=0, pp=Unknown
18:59:53.356 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] CleanFix found
19:00:01.377 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Math-61/aggregatedSusInfo.profl
19:00:01.377 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
19:00:01.377 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Failed Tests after fixing: 0 Math-61
---------------- Testing New Patch ----------------
19:00:01.377 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
19:00:02.475 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
19:00:02.475 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
19:00:09.527 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 0, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
19:00:09.527 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 0, []
19:00:09.527 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=0, fp=1, pf=0, pp=Unknown
19:00:09.528 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] CleanFix found
19:01:37.545 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Math-61/aggregatedSusInfo.profl
19:01:37.545 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
19:01:37.545 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Failed Tests after fixing: 0 Math-61
---------------- Testing New Patch ----------------
19:01:37.545 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
19:01:38.552 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Math-61 ---Fixer: fix fail because of failed compiling! 
---------------- Testing New Patch ----------------
19:01:38.552 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
19:01:39.513 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
19:01:39.513 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
19:01:45.698 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 0, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
19:01:45.698 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 0, []
19:01:45.698 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=0, fp=1, pf=0, pp=Unknown
19:01:45.698 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] CleanFix found
19:18:15.445 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Math-61/aggregatedSusInfo.profl
19:18:15.446 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Mutated = org.apache.commons.math.MathRuntimeException:buildMessage(Ljava/util/Locale;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/String; in org.apache.commons.math.MathRuntimeException:136
19:18:15.446 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Failed Tests after fixing: 0 Math-61
---------------- Testing New Patch ----------------
19:18:15.446 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
19:18:16.410 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
19:18:16.410 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
19:18:24.528 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 0, [org.apache.commons.math.distribution.PoissonDistributionTest::testMean]
19:18:24.528 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 0, []
19:18:24.528 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=0, fp=1, pf=0, pp=Unknown
19:18:24.528 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] CleanFix found
