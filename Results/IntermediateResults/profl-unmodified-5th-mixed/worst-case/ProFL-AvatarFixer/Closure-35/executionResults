Setting JAVA_HOME to /mnt/efs/fs1/jdk1.7.0_80

Adding /mnt/efs/fs1/jdk1.7.0_80/bin: to PATH environmental variable


Java 7 environment setup completed
Closure-35
07:02:12.898 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Closure-35 Failed Tests: 1
Reading method line coverage from /mnt/efs/fs1/XiaInformation/AllMethods/Closure/35.txt
Reading test line coverage from /mnt/efs/fs1/XiaInformation/LineCoverage/Closure/35.txt
07:07:33.264 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - ProFL successfully initialized
07:07:33.350 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Closure-35/generalSusInfo.profl
07:07:33.473 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Closure-35/aggregatedSusInfo.profl
Cannot find the suspicious code position file.SuspiciousCodePositions/Closure-35/ochiai.txt
07:07:33.475 [main] INFO edu.lu.uni.serval.avatar.Avatar - =======StaticBugFixer: Start to fix suspicious code======
07:07:33.475 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - com.google.javascript.jscomp.TypeInference ===1123
07:07:34.765 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Suspicious Code: 
if (objType != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:07:34.767 [main] DEBUG edu.lu.uni.serval.avatar.Avatar - --- Attempting to mutate com/google/javascript/jscomp/TypeInference.java:1123 ---
07:07:34.773 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: if (objType == null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
---------------- Testing New Patch ----------------
07:07:34.774 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
07:08:10.755 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
07:08:10.755 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
07:13:40.118 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:13:40.118 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669, - com.google.javascript.jscomp.TypeCheckTest::testRecordType1, - com.google.javascript.jscomp.TypeCheckTest::testRecordType2, - com.google.javascript.jscomp.TypeCheckTest::testRecordType3, - com.google.javascript.jscomp.TypeCheckTest::testRecordType4, - com.google.javascript.jscomp.TypeCheckTest::testRecordType5, - com.google.javascript.jscomp.TypeCheckTest::testRecordType6, - com.google.javascript.jscomp.TypeCheckTest::testRecordType7]
07:13:40.118 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
07:13:40.118 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType1
07:13:40.118 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType2
07:13:40.118 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType3
07:13:40.118 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType4
07:13:40.118 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType5
07:13:40.118 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType6
07:13:40.118 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType7
07:13:40.118 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=1, fp=0, pf=7, pp=Unknown
07:13:40.119 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] NegFix found
07:13:40.838 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Closure-35/aggregatedSusInfo.profl
07:13:40.839 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeInference:inferPropertyTypesToMatchConstraint(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeInference:1123
07:13:40.839 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Failed Tests after fixing: 8 Closure-35
07:13:40.846 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: if (objType == null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
---------------- Testing New Patch ----------------
07:13:40.846 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
07:13:48.264 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
07:13:48.264 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
07:17:20.500 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:17:20.500 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 8, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669, - com.google.javascript.jscomp.TypeCheckTest::testRecordType1, - com.google.javascript.jscomp.TypeCheckTest::testRecordType2, - com.google.javascript.jscomp.TypeCheckTest::testRecordType3, - com.google.javascript.jscomp.TypeCheckTest::testRecordType4, - com.google.javascript.jscomp.TypeCheckTest::testRecordType5, - com.google.javascript.jscomp.TypeCheckTest::testRecordType6, - com.google.javascript.jscomp.TypeCheckTest::testRecordType7]
07:17:20.500 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
07:17:20.500 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType1
07:17:20.500 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType2
07:17:20.500 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType3
07:17:20.500 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType4
07:17:20.500 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType5
07:17:20.500 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType6
07:17:20.500 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Pass->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testRecordType7
07:17:20.500 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=1, fp=0, pf=7, pp=Unknown
07:17:20.500 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] NegFix found
07:17:38.820 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Closure-35/aggregatedSusInfo.profl
07:17:38.820 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeInference:inferPropertyTypesToMatchConstraint(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeInference:1123
07:17:38.820 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Failed Tests after fixing: 8 Closure-35
07:17:38.821 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: if (constraintObj != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:38.821 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: if (type != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:38.821 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: if (constraint != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:38.821 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: if (this.compiler != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:38.821 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: if (this.registry != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:38.821 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: if (this.reverseInterpreter != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:38.821 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: if (this.syntacticScope != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:38.821 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: if (this.functionScope != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:38.821 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: if (this.bottomScope != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
07:17:38.821 [main] DEBUG edu.lu.uni.serval.fixpattern.FixTemplate - Patch Candiate: if (this.assertionFunctionsMap != null) {
        for (String prop : constraintObj.getOwnPropertyNames()) {
          JSType propType = constraintObj.getPropertyType(prop);
          if (!objType.isPropertyTypeDeclared(prop)) {
            JSType typeToInfer = propType;
            if (!objType.hasProperty(prop)) {
              typeToInfer =
                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
            }
            objType.defineInferredProperty(prop, typeToInfer, null);
          }
        }
      }
---------------- Testing New Patch ----------------
07:17:38.822 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
07:17:46.130 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
07:17:46.130 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
07:21:17.900 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:21:17.901 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:21:17.901 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
07:21:17.901 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
07:21:17.901 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] NoneFix found
07:28:27.478 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Closure-35/aggregatedSusInfo.profl
07:28:27.478 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeInference:inferPropertyTypesToMatchConstraint(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeInference:1123
07:28:27.478 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Failed Tests after fixing: 1 Closure-35
---------------- Testing New Patch ----------------
07:28:27.479 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
07:28:34.734 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
07:28:34.734 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
07:32:05.527 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:32:05.527 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669]
07:32:05.527 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
07:32:05.527 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
07:32:05.528 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] NoneFix found
11:37:31.918 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Profl information saved to /home/ubuntu/repair-tool/avatar/ProFL-AvatarFixer/Closure-35/aggregatedSusInfo.profl
11:37:31.918 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Mutated = com.google.javascript.jscomp.TypeInference:inferPropertyTypesToMatchConstraint(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)V in com.google.javascript.jscomp.TypeInference:1123
11:37:31.918 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Failed Tests after fixing: 1 Closure-35
---------------- Testing New Patch ----------------
11:37:31.919 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Compiling
11:37:39.374 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Finish of compiling.
11:37:39.374 [main] DEBUG edu.lu.uni.serval.avatar.AbstractFixer - Test previously failed test cases.
11:41:11.158 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests BEFORE patch = 1, [com.google.javascript.jscomp.TypeCheckTest::testIssue669]
11:41:11.158 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Failed tests AFTER patch = 1, [- com.google.javascript.jscomp.TypeCheckTest::testIssue669]
11:41:11.158 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Fail->Fail test case ->com.google.javascript.jscomp.TypeCheckTest::testIssue669
11:41:11.158 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - Patch test results ff=1, fp=0, pf=0, pp=Unknown
11:41:11.158 [main] INFO edu.lu.uni.serval.avatar.AbstractFixer - [ProFL] NoneFix found
