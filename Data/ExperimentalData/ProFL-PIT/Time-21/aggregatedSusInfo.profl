0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(CIIIZI)V
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(JII)J
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(Lorg/joda/time/Chronology;J)J
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(Lorg/joda/time/Chronology;J)J
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(Lorg/joda/time/Chronology;J)J
0|0|PatchCategory.NegFix|org.joda.time.DateTimeZone:<init>(Ljava/lang/String;)V
0|0|PatchCategory.NegFix|org.joda.time.DateTimeZone:forID(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
0|0|PatchCategory.NegFix|org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone;
0|0|PatchCategory.NegFix|org.joda.time.DateTimeZone:getID()Ljava/lang/String;
0|0|PatchCategory.NegFix|org.joda.time.DateTimeZone:getName(JLjava/util/Locale;)Ljava/lang/String;
0|0|PatchCategory.NegFix|org.joda.time.DateTimeZone:getShortName(JLjava/util/Locale;)Ljava/lang/String;
0|0|PatchCategory.NegFix|org.joda.time.DateTimeZone:printOffset(I)Ljava/lang/String;
0|0|PatchCategory.NegFix|org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicChronology:getDayOfMonth(J)I
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicChronology:getDayOfMonth(JI)I
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicChronology:getDayOfMonth(JII)I
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicChronology:getDayOfWeek(J)I
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicChronology:getDayOfYear(JI)I
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicChronology:getMillisOfDay(J)I
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicChronology:getYear(J)I
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicChronology:getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicChronology:getYearMillis(I)J
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(III)J
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(JI)I
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(II)I
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicGJChronology:getMonthOfYear(JI)I
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(II)J
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicGJChronology:setYear(JI)J
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(Ljava/lang/String;[J[I[I[Ljava/lang/String;Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;)V
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(J)Ljava/lang/String;
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(J)I
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(J)J
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone;
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(JI)J
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(JI)J
0|0|PatchCategory.NegFix|org.joda.time.tz.DefaultNameProvider:createCache()Ljava/util/HashMap;
0|0|PatchCategory.NegFix|org.joda.time.tz.DefaultNameProvider:getName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
0|0|PatchCategory.NegFix|org.joda.time.tz.DefaultNameProvider:getNameSet(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
0|0|PatchCategory.NegFix|org.joda.time.tz.DefaultNameProvider:getShortName(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(Ljava/lang/String;ILorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;)V
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(J)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(J)Ljava/lang/String;
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(J)I
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(J)J
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$DSTZone;
0|0|PatchCategory.NegFix|org.joda.time.tz.ZoneInfoProvider:getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
0|0|PatchCategory.NegFix|org.joda.time.tz.ZoneInfoProvider:loadZoneData(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
0|0|PatchCategory.NegFix|org.joda.time.tz.ZoneInfoProvider:openResource(Ljava/lang/String;)Ljava/io/InputStream;
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/DataInput;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder:readFrom(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder:readMillis(Ljava/io/DataInput;)J
0|0|PatchCategory.NegFix|org.joda.time.tz.CachedDateTimeZone$Info:<init>(Lorg/joda/time/DateTimeZone;J)V
0|0|PatchCategory.NegFix|org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(J)Ljava/lang/String;
0|0|PatchCategory.NegFix|org.joda.time.tz.CachedDateTimeZone$Info:getOffset(J)I
0|0|PatchCategory.NegFix|org.joda.time.tz.CachedDateTimeZone:<init>(Lorg/joda/time/DateTimeZone;)V
0|0|PatchCategory.NegFix|org.joda.time.tz.CachedDateTimeZone:createInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;
0|0|PatchCategory.NegFix|org.joda.time.tz.CachedDateTimeZone:forZone(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;
0|0|PatchCategory.NegFix|org.joda.time.tz.CachedDateTimeZone:getInfo(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;
0|0|PatchCategory.NegFix|org.joda.time.tz.CachedDateTimeZone:getNameKey(J)Ljava/lang/String;
0|0|PatchCategory.NegFix|org.joda.time.tz.CachedDateTimeZone:getOffset(J)I
0|0|PatchCategory.NegFix|org.joda.time.format.FormatUtils:appendPaddedInteger(Ljava/lang/StringBuffer;II)V
0|0|PatchCategory.NegFix|org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField;
0|0|PatchCategory.NegFix|org.joda.time.chrono.AssembledChronology:dayOfWeek()Lorg/joda/time/DateTimeField;
0|0|PatchCategory.NegFix|org.joda.time.chrono.AssembledChronology:millisOfDay()Lorg/joda/time/DateTimeField;
0|0|PatchCategory.NegFix|org.joda.time.chrono.AssembledChronology:monthOfYear()Lorg/joda/time/DateTimeField;
0|0|PatchCategory.NegFix|org.joda.time.chrono.AssembledChronology:year()Lorg/joda/time/DateTimeField;
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicYearDateTimeField:add(JI)J
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicYearDateTimeField:set(JI)J
0|0|PatchCategory.NegFix|org.joda.time.field.PreciseDateTimeField:get(J)I
0|0|PatchCategory.NegFix|org.joda.time.field.PreciseDateTimeField:getMaximumValue()I
0|0|PatchCategory.NegFix|org.joda.time.field.PreciseDateTimeField:set(JI)J
0|0|PatchCategory.NegFix|org.joda.time.field.PreciseDurationDateTimeField:getDurationField()Lorg/joda/time/DurationField;
0|0|PatchCategory.NegFix|org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue()I
0|0|PatchCategory.NegFix|org.joda.time.field.PreciseDurationDateTimeField:getUnitMillis()J
0|0|PatchCategory.NegFix|org.joda.time.field.PreciseDurationDateTimeField:set(JI)J
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()Ljava/lang/String;
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()I
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(JII)J
0|0|PatchCategory.NegFix|org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
0|0|PatchCategory.NegFix|org.joda.time.field.FieldUtils:safeAdd(II)I
0|0|PatchCategory.NegFix|org.joda.time.field.FieldUtils:safeAdd(JJ)J
0|0|PatchCategory.NegFix|org.joda.time.field.FieldUtils:verifyValueBounds(Lorg/joda/time/DateTimeField;III)V
0|0|PatchCategory.NegFix|org.joda.time.chrono.GregorianChronology:getApproxMillisAtEpochDividedByTwo()J
0|0|PatchCategory.NegFix|org.joda.time.chrono.GregorianChronology:getAverageMillisPerYearDividedByTwo()J
0|0|PatchCategory.NegFix|org.joda.time.chrono.GregorianChronology:getMaxYear()I
0|0|PatchCategory.NegFix|org.joda.time.chrono.GregorianChronology:getMinYear()I
0|0|PatchCategory.NegFix|org.joda.time.chrono.GregorianChronology:isLeapYear(I)Z
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(JI)I
0|0|PatchCategory.NegFix|org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMinimumValue()I
0|0|PatchCategory.NegFix|org.joda.time.field.BaseDateTimeField:add(JI)J
0|0|PatchCategory.NoneFix|org.joda.time.DateTimeUtils:getDateFormatSymbols(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;
0|0|PatchCategory.NegFix|org.joda.time.field.PreciseDurationField:add(JI)J
0|0|PatchCategory.NegFix|org.joda.time.chrono.GJDayOfWeekDateTimeField:get(J)I
0|0|PatchCategory.NegFix|org.joda.time.field.MillisDurationField:add(JI)J
0|0|PatchCategory.NegFix|org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology;
